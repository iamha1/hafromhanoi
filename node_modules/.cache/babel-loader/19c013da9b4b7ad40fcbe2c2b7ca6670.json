{"ast":null,"code":"import React__default, { createContext, Fragment, useState, useRef, useEffect, useContext, Suspense, lazy } from 'react';\n\nfunction _extends$1() {\n  _extends$1 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends$1.apply(this, arguments);\n}\n\nfunction Frame(index) {\n  return [];\n}\n\nconst c$1 = {\n  configureFrame: _ => ({}),\n  addRecord: async _ => ({}),\n  deleteRecord: async _ => ({}),\n  sync: async () => ({}),\n  updateRecordImage: async _ => ({}),\n  updateRecordVideo: async _ => ({}),\n  updateRecordFile: async _ => ({}),\n  Frame,\n  useFrameEffect: _ => {},\n  fullTableSize: async () => 0,\n  tableTypes: async () => ({}),\n  currentConfiguration: () => ({}),\n  Query: async _ => [],\n  getUserAttributes: async () => ({}),\n  isUserSignedIn: () => false,\n  setUserAttribute: async (_, _2) => ({}),\n  resetUserPassword: async (_, _2) => ({}),\n  signIn: async (_, _2) => ({}),\n  signOut: () => {},\n  signUp: async (_, _2, _3) => ({}),\n  onSignIn: _ => {},\n  db: _ => ({}),\n  dbEventListener: _ => () => {},\n  useReturn: _ => ({}),\n  e: {},\n  forgotPassword: async (_, _2) => ({}),\n  forgotPasswordConfirm: async (_, _2, _3) => ({}),\n  userID: () => undefined\n};\nvar EasybaseContext = createContext(c$1); // do not edit .js files directly - edit src/index.jst\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n\nvar POST_TYPES$2;\n\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES$2 || (POST_TYPES$2 = {}));\n\nvar DB_STATUS$2;\n\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS$2 || (DB_STATUS$2 = {}));\n\nvar EXECUTE_COUNT$2;\n\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT$2 || (EXECUTE_COUNT$2 = {}));\n\nvar imageExtensions = [\"ase\", \"art\", \"bmp\", \"blp\", \"cd5\", \"cit\", \"cpt\", \"cr2\", \"cut\", \"dds\", \"dib\", \"djvu\", \"egt\", \"exif\", \"gif\", \"gpl\", \"grf\", \"icns\", \"ico\", \"iff\", \"jng\", \"jpeg\", \"jpg\", \"jfif\", \"jp2\", \"jps\", \"lbm\", \"max\", \"miff\", \"mng\", \"msp\", \"nitf\", \"ota\", \"pbm\", \"pc1\", \"pc2\", \"pc3\", \"pcf\", \"pcx\", \"pdn\", \"pgm\", \"PI1\", \"PI2\", \"PI3\", \"pict\", \"pct\", \"pnm\", \"pns\", \"ppm\", \"psb\", \"psd\", \"pdd\", \"psp\", \"px\", \"pxm\", \"pxr\", \"qfx\", \"raw\", \"rle\", \"sct\", \"sgi\", \"rgb\", \"int\", \"bw\", \"tga\", \"tiff\", \"tif\", \"vtf\", \"xbm\", \"xcf\", \"xpm\", \"3dv\", \"amf\", \"ai\", \"awg\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"gbr\", \"odg\", \"svg\", \"stl\", \"vrml\", \"x3d\", \"sxd\", \"v2d\", \"vnd\", \"wmf\", \"emf\", \"art\", \"xar\", \"png\", \"webp\", \"jxr\", \"hdp\", \"wdp\", \"cur\", \"ecw\", \"iff\", \"lbm\", \"liff\", \"nrrd\", \"pam\", \"pcx\", \"pgf\", \"sgi\", \"rgb\", \"rgba\", \"bw\", \"int\", \"inta\", \"sid\", \"ras\", \"sun\", \"tga\"];\nvar videoExtensions = [\"3g2\", \"3gp\", \"aaf\", \"asf\", \"avchd\", \"avi\", \"drc\", \"flv\", \"m2v\", \"m4p\", \"m4v\", \"mkv\", \"mng\", \"mov\", \"mp2\", \"mp4\", \"mpe\", \"mpeg\", \"mpg\", \"mpv\", \"mxf\", \"nsv\", \"ogg\", \"ogv\", \"qt\", \"rm\", \"rmvb\", \"roq\", \"svi\", \"vob\", \"webm\", \"wmv\", \"yuv\"];\nvar GlobalNamespace$1;\n\n(function (GlobalNamespace) {})(GlobalNamespace$1 || (GlobalNamespace$1 = {}));\n\nconst _g = { ...GlobalNamespace$1\n};\n\nfunction gFactory({\n  ebconfig,\n  options\n}) {\n  const optionsObj = { ...options\n  }; // Forces undefined to empty object\n\n  const defaultG = {\n    options: optionsObj,\n    ebconfig: ebconfig,\n    GA_USER_ID_SALT: \"m83WnAPrq\",\n    analyticsEventsToTrack: {\n      login: true,\n      sign_up: true,\n      forgot_password: true,\n      forgot_password_confirm: true,\n      reset_user_password: true,\n      ...optionsObj.googleAnalyticsEventTracking\n    }\n  };\n  return { ...GlobalNamespace$1,\n    ...defaultG\n  };\n}\n\nfunction utilsFactory(globals) {\n  const g = globals || _g;\n\n  const generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\n\n  const generateAuthBody = () => {\n    const stamp = Date.now();\n    return {\n      token: g.token,\n      token_time: ~~(g.session / (stamp % 64)),\n      now: stamp\n    };\n  };\n\n  function log(...params) {\n    if (g.options.logging) {\n      console.log(\"EASYBASE â€” \", ...params);\n    }\n  }\n\n  return {\n    generateAuthBody,\n    generateBareUrl,\n    log\n  };\n}\n\nvar POST_TYPES$1;\n\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES$1 || (POST_TYPES$1 = {}));\n\nvar DB_STATUS$1;\n\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS$1 || (DB_STATUS$1 = {}));\n\nvar EXECUTE_COUNT$1;\n\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT$1 || (EXECUTE_COUNT$1 = {}));\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nvar browserPonyfill = createCommonjsModule(function (module, exports) {\n  var global = typeof self !== 'undefined' ? self : commonjsGlobal;\n\n  var __self__ = function () {\n    function F() {\n      this.fetch = false;\n      this.DOMException = global.DOMException;\n    }\n\n    F.prototype = global;\n    return new F();\n  }();\n\n  (function (self) {\n    (function (exports) {\n      var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && function () {\n          try {\n            new Blob();\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n      };\n\n      function isDataView(obj) {\n        return obj && DataView.prototype.isPrototypeOf(obj);\n      }\n\n      if (support.arrayBuffer) {\n        var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n        var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n          return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n        };\n      }\n\n      function normalizeName(name) {\n        if (typeof name !== 'string') {\n          name = String(name);\n        }\n\n        if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n          throw new TypeError('Invalid character in header field name');\n        }\n\n        return name.toLowerCase();\n      }\n\n      function normalizeValue(value) {\n        if (typeof value !== 'string') {\n          value = String(value);\n        }\n\n        return value;\n      } // Build a destructive iterator for the value list\n\n\n      function iteratorFor(items) {\n        var iterator = {\n          next: function () {\n            var value = items.shift();\n            return {\n              done: value === undefined,\n              value: value\n            };\n          }\n        };\n\n        if (support.iterable) {\n          iterator[Symbol.iterator] = function () {\n            return iterator;\n          };\n        }\n\n        return iterator;\n      }\n\n      function Headers(headers) {\n        this.map = {};\n\n        if (headers instanceof Headers) {\n          headers.forEach(function (value, name) {\n            this.append(name, value);\n          }, this);\n        } else if (Array.isArray(headers)) {\n          headers.forEach(function (header) {\n            this.append(header[0], header[1]);\n          }, this);\n        } else if (headers) {\n          Object.getOwnPropertyNames(headers).forEach(function (name) {\n            this.append(name, headers[name]);\n          }, this);\n        }\n      }\n\n      Headers.prototype.append = function (name, value) {\n        name = normalizeName(name);\n        value = normalizeValue(value);\n        var oldValue = this.map[name];\n        this.map[name] = oldValue ? oldValue + ', ' + value : value;\n      };\n\n      Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)];\n      };\n\n      Headers.prototype.get = function (name) {\n        name = normalizeName(name);\n        return this.has(name) ? this.map[name] : null;\n      };\n\n      Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name));\n      };\n\n      Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = normalizeValue(value);\n      };\n\n      Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name in this.map) {\n          if (this.map.hasOwnProperty(name)) {\n            callback.call(thisArg, this.map[name], name, this);\n          }\n        }\n      };\n\n      Headers.prototype.keys = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push(name);\n        });\n        return iteratorFor(items);\n      };\n\n      Headers.prototype.values = function () {\n        var items = [];\n        this.forEach(function (value) {\n          items.push(value);\n        });\n        return iteratorFor(items);\n      };\n\n      Headers.prototype.entries = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push([name, value]);\n        });\n        return iteratorFor(items);\n      };\n\n      if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n      }\n\n      function consumed(body) {\n        if (body.bodyUsed) {\n          return Promise.reject(new TypeError('Already read'));\n        }\n\n        body.bodyUsed = true;\n      }\n\n      function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n          reader.onload = function () {\n            resolve(reader.result);\n          };\n\n          reader.onerror = function () {\n            reject(reader.error);\n          };\n        });\n      }\n\n      function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      }\n\n      function readBlobAsText(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsText(blob);\n        return promise;\n      }\n\n      function readArrayBufferAsText(buf) {\n        var view = new Uint8Array(buf);\n        var chars = new Array(view.length);\n\n        for (var i = 0; i < view.length; i++) {\n          chars[i] = String.fromCharCode(view[i]);\n        }\n\n        return chars.join('');\n      }\n\n      function bufferClone(buf) {\n        if (buf.slice) {\n          return buf.slice(0);\n        } else {\n          var view = new Uint8Array(buf.byteLength);\n          view.set(new Uint8Array(buf));\n          return view.buffer;\n        }\n      }\n\n      function Body() {\n        this.bodyUsed = false;\n\n        this._initBody = function (body) {\n          this._bodyInit = body;\n\n          if (!body) {\n            this._bodyText = '';\n          } else if (typeof body === 'string') {\n            this._bodyText = body;\n          } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n            this._bodyBlob = body;\n          } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n            this._bodyFormData = body;\n          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n            this._bodyText = body.toString();\n          } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n            this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n            this._bodyInit = new Blob([this._bodyArrayBuffer]);\n          } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n            this._bodyArrayBuffer = bufferClone(body);\n          } else {\n            this._bodyText = body = Object.prototype.toString.call(body);\n          }\n\n          if (!this.headers.get('content-type')) {\n            if (typeof body === 'string') {\n              this.headers.set('content-type', 'text/plain;charset=UTF-8');\n            } else if (this._bodyBlob && this._bodyBlob.type) {\n              this.headers.set('content-type', this._bodyBlob.type);\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n          }\n        };\n\n        if (support.blob) {\n          this.blob = function () {\n            var rejected = consumed(this);\n\n            if (rejected) {\n              return rejected;\n            }\n\n            if (this._bodyBlob) {\n              return Promise.resolve(this._bodyBlob);\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as blob');\n            } else {\n              return Promise.resolve(new Blob([this._bodyText]));\n            }\n          };\n\n          this.arrayBuffer = function () {\n            if (this._bodyArrayBuffer) {\n              return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n            } else {\n              return this.blob().then(readBlobAsArrayBuffer);\n            }\n          };\n        }\n\n        this.text = function () {\n          var rejected = consumed(this);\n\n          if (rejected) {\n            return rejected;\n          }\n\n          if (this._bodyBlob) {\n            return readBlobAsText(this._bodyBlob);\n          } else if (this._bodyArrayBuffer) {\n            return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n          } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as text');\n          } else {\n            return Promise.resolve(this._bodyText);\n          }\n        };\n\n        if (support.formData) {\n          this.formData = function () {\n            return this.text().then(decode);\n          };\n        }\n\n        this.json = function () {\n          return this.text().then(JSON.parse);\n        };\n\n        return this;\n      } // HTTP methods whose capitalization should be normalized\n\n\n      var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n      function normalizeMethod(method) {\n        var upcased = method.toUpperCase();\n        return methods.indexOf(upcased) > -1 ? upcased : method;\n      }\n\n      function Request(input, options) {\n        options = options || {};\n        var body = options.body;\n\n        if (input instanceof Request) {\n          if (input.bodyUsed) {\n            throw new TypeError('Already read');\n          }\n\n          this.url = input.url;\n          this.credentials = input.credentials;\n\n          if (!options.headers) {\n            this.headers = new Headers(input.headers);\n          }\n\n          this.method = input.method;\n          this.mode = input.mode;\n          this.signal = input.signal;\n\n          if (!body && input._bodyInit != null) {\n            body = input._bodyInit;\n            input.bodyUsed = true;\n          }\n        } else {\n          this.url = String(input);\n        }\n\n        this.credentials = options.credentials || this.credentials || 'same-origin';\n\n        if (options.headers || !this.headers) {\n          this.headers = new Headers(options.headers);\n        }\n\n        this.method = normalizeMethod(options.method || this.method || 'GET');\n        this.mode = options.mode || this.mode || null;\n        this.signal = options.signal || this.signal;\n        this.referrer = null;\n\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n          throw new TypeError('Body not allowed for GET or HEAD requests');\n        }\n\n        this._initBody(body);\n      }\n\n      Request.prototype.clone = function () {\n        return new Request(this, {\n          body: this._bodyInit\n        });\n      };\n\n      function decode(body) {\n        var form = new FormData();\n        body.trim().split('&').forEach(function (bytes) {\n          if (bytes) {\n            var split = bytes.split('=');\n            var name = split.shift().replace(/\\+/g, ' ');\n            var value = split.join('=').replace(/\\+/g, ' ');\n            form.append(decodeURIComponent(name), decodeURIComponent(value));\n          }\n        });\n        return form;\n      }\n\n      function parseHeaders(rawHeaders) {\n        var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n        // https://tools.ietf.org/html/rfc7230#section-3.2\n\n        var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n        preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n          var parts = line.split(':');\n          var key = parts.shift().trim();\n\n          if (key) {\n            var value = parts.join(':').trim();\n            headers.append(key, value);\n          }\n        });\n        return headers;\n      }\n\n      Body.call(Request.prototype);\n\n      function Response(bodyInit, options) {\n        if (!options) {\n          options = {};\n        }\n\n        this.type = 'default';\n        this.status = options.status === undefined ? 200 : options.status;\n        this.ok = this.status >= 200 && this.status < 300;\n        this.statusText = 'statusText' in options ? options.statusText : 'OK';\n        this.headers = new Headers(options.headers);\n        this.url = options.url || '';\n\n        this._initBody(bodyInit);\n      }\n\n      Body.call(Response.prototype);\n\n      Response.prototype.clone = function () {\n        return new Response(this._bodyInit, {\n          status: this.status,\n          statusText: this.statusText,\n          headers: new Headers(this.headers),\n          url: this.url\n        });\n      };\n\n      Response.error = function () {\n        var response = new Response(null, {\n          status: 0,\n          statusText: ''\n        });\n        response.type = 'error';\n        return response;\n      };\n\n      var redirectStatuses = [301, 302, 303, 307, 308];\n\n      Response.redirect = function (url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n          throw new RangeError('Invalid status code');\n        }\n\n        return new Response(null, {\n          status: status,\n          headers: {\n            location: url\n          }\n        });\n      };\n\n      exports.DOMException = self.DOMException;\n\n      try {\n        new exports.DOMException();\n      } catch (err) {\n        exports.DOMException = function (message, name) {\n          this.message = message;\n          this.name = name;\n          var error = Error(message);\n          this.stack = error.stack;\n        };\n\n        exports.DOMException.prototype = Object.create(Error.prototype);\n        exports.DOMException.prototype.constructor = exports.DOMException;\n      }\n\n      function fetch(input, init) {\n        return new Promise(function (resolve, reject) {\n          var request = new Request(input, init);\n\n          if (request.signal && request.signal.aborted) {\n            return reject(new exports.DOMException('Aborted', 'AbortError'));\n          }\n\n          var xhr = new XMLHttpRequest();\n\n          function abortXhr() {\n            xhr.abort();\n          }\n\n          xhr.onload = function () {\n            var options = {\n              status: xhr.status,\n              statusText: xhr.statusText,\n              headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n            };\n            options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n            var body = 'response' in xhr ? xhr.response : xhr.responseText;\n            resolve(new Response(body, options));\n          };\n\n          xhr.onerror = function () {\n            reject(new TypeError('Network request failed'));\n          };\n\n          xhr.ontimeout = function () {\n            reject(new TypeError('Network request failed'));\n          };\n\n          xhr.onabort = function () {\n            reject(new exports.DOMException('Aborted', 'AbortError'));\n          };\n\n          xhr.open(request.method, request.url, true);\n\n          if (request.credentials === 'include') {\n            xhr.withCredentials = true;\n          } else if (request.credentials === 'omit') {\n            xhr.withCredentials = false;\n          }\n\n          if ('responseType' in xhr && support.blob) {\n            xhr.responseType = 'blob';\n          }\n\n          request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n          });\n\n          if (request.signal) {\n            request.signal.addEventListener('abort', abortXhr);\n\n            xhr.onreadystatechange = function () {\n              // DONE (success or failure)\n              if (xhr.readyState === 4) {\n                request.signal.removeEventListener('abort', abortXhr);\n              }\n            };\n          }\n\n          xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n        });\n      }\n\n      fetch.polyfill = true;\n\n      if (!self.fetch) {\n        self.fetch = fetch;\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n      }\n\n      exports.Headers = Headers;\n      exports.Request = Request;\n      exports.Response = Response;\n      exports.fetch = fetch;\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      return exports;\n    })({});\n  })(__self__);\n\n  __self__.fetch.ponyfill = true; // Remove \"polyfill\" property added by whatwg-fetch\n\n  delete __self__.fetch.polyfill; // Choose between native implementation (global) or custom implementation (__self__)\n  // var ctx = global.fetch ? global : __self__;\n\n  var ctx = __self__; // this line disable service worker support temporarily\n\n  exports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\n\n  exports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\n\n  exports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\n\n  exports.Headers = ctx.Headers;\n  exports.Request = ctx.Request;\n  exports.Response = ctx.Response;\n  module.exports = exports;\n});\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill);\n\nfunction authFactory(globals) {\n  const g = globals || _g;\n  const {\n    generateBareUrl,\n    generateAuthBody,\n    log\n  } = utilsFactory(g);\n\n  function _clearTokens() {\n    g.token = \"\";\n    g.refreshToken = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  }\n\n  const getUserAttributes = async () => {\n    try {\n      const attrsRes = await tokenPost(POST_TYPES$1.USER_ATTRIBUTES);\n      g.analyticsEnabled && g.analyticsEventsToTrack.get_user_attributes && g.analyticsEvent('get_user_attributes');\n      return attrsRes.data;\n    } catch (error) {\n      log(error);\n      return error;\n    }\n  };\n\n  const setUserAttribute = async (key, value) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES$1.SET_ATTRIBUTE, {\n        key,\n        value\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.set_user_attribute && g.analyticsEvent('set_user_attribute', {\n        key\n      });\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const forgotPassword = async (username, emailTemplate) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES$1.FORGOT_PASSWORD_SEND, {\n        username,\n        emailTemplate\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password && g.analyticsEvent('forgot_password');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const forgotPasswordConfirm = async (code, username, newPassword) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES$1.FORGOT_PASSWORD_CONFIRM, {\n        username,\n        code,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password_confirm && g.analyticsEvent('forgot_password_confirm');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const signUp = async (newUserID, password, userAttributes) => {\n    try {\n      const signUpRes = await tokenPost(POST_TYPES$1.SIGN_UP, {\n        newUserID,\n        password,\n        userAttributes\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.sign_up && g.analyticsEvent('sign_up', {\n        method: \"Easybase\"\n      });\n      return {\n        success: signUpRes.success,\n        message: signUpRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const signIn = async (userID, password) => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES$1.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          session: g.session,\n          instance: g.instance,\n          userID,\n          password\n        })\n      });\n      const resData = await res.json();\n\n      if (resData.token) {\n        g.token = resData.token;\n        g.refreshToken = resData.refreshToken;\n        g.newTokenCallback();\n        g.userID = resData.userID;\n        g.mounted = true;\n        const [validTokenRes, {\n          hash\n        }, {\n          fromUtf8\n        }] = await Promise.all([tokenPost(POST_TYPES$1.VALID_TOKEN), import('./sha256-cbcfc640.js').then(function (n) {\n          return n.s;\n        }), import('./index-66c37f86.js')]);\n        const elapsed = Date.now() - t1;\n\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n\n          if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n            const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + resData.userID));\n            const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n            g.analyticsIdentify(hexHash);\n            g.analyticsEvent('login', {\n              method: \"Easybase\"\n            });\n          }\n\n          return {\n            success: true,\n            message: \"Successfully signed in user\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Could not sign in user\"\n          };\n        }\n      } else {\n        return {\n          success: false,\n          message: \"Could not sign in user\",\n          errorCode: resData.ErrorCode || undefined\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Could not sign in user\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const resetUserPassword = async (currentPassword, newPassword) => {\n    if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n      return {\n        success: false,\n        message: \"newPassword must be of type string\"\n      };\n    }\n\n    if (typeof currentPassword !== \"string\" || currentPassword.length > 100) {\n      return {\n        success: false,\n        message: \"currentPassword must be of type string\"\n      };\n    }\n\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES$1.RESET_PASSWORD, {\n        currentPassword,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.reset_user_password && g.analyticsEvent('reset_user_password');\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const userID = () => g.userID || undefined;\n\n  const signOut = () => {\n    g.token = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  };\n\n  const initAuth = async () => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    log(`Handshaking on${g.instance} instance`);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES$1.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          tt: g.ebconfig.tt,\n          session: g.session,\n          instance: g.instance\n        })\n      });\n      const resData = await res.json();\n\n      if (resData.token) {\n        g.token = resData.token;\n        g.mounted = true;\n        const validTokenRes = await tokenPost(POST_TYPES$1.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  };\n\n  const tokenPost = async (postType, body) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: {\n        'Eb-Post-Req': postType,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _auth: generateAuthBody(),\n        ...body\n      })\n    });\n    const resData = await res.json();\n\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES$1.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPost(postType, body);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n\n        return tokenPost(postType, body);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n\n  const tokenPostAttachment = async (formData, customHeaders) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n\n    const regularAuthbody = generateAuthBody();\n    const attachmentAuth = {\n      'Eb-token': regularAuthbody.token,\n      'Eb-token-time': regularAuthbody.token_time,\n      'Eb-now': regularAuthbody.now\n    };\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: {\n        'Eb-Post-Req': POST_TYPES$1.UPLOAD_ATTACHMENT,\n        ...customHeaders,\n        ...attachmentAuth\n      },\n      body: formData\n    });\n    const resData = await res.json();\n\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES$1.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPostAttachment(formData, customHeaders);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n\n        return tokenPostAttachment(formData, customHeaders);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n\n  return {\n    initAuth,\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    signIn,\n    signOut,\n    resetUserPassword,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n}\n\nfunction tableFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost\n  } = authFactory(g);\n\n  const Query = async options => {\n    const defaultOptions = {\n      queryName: \"\"\n    };\n    const fullOptions = { ...defaultOptions,\n      ...options\n    };\n    const res = await tokenPost(POST_TYPES$1.GET_QUERY, fullOptions);\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.query && g.analyticsEvent('query', {\n        queryName: fullOptions.queryName,\n        tableName: fullOptions.tableName || undefined\n      });\n      return res.data;\n    } else {\n      return [];\n    }\n  };\n\n  async function fullTableSize(tableName) {\n    const res = await tokenPost(POST_TYPES$1.TABLE_SIZE, tableName ? {\n      tableName\n    } : {});\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.full_table_size && g.analyticsEvent('full_table_size', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return 0;\n    }\n  }\n\n  async function tableTypes(tableName) {\n    const res = await tokenPost(POST_TYPES$1.COLUMN_TYPES, tableName ? {\n      tableName\n    } : {});\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.table_types && g.analyticsEvent('table_types', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return {};\n    }\n  }\n\n  return {\n    Query,\n    fullTableSize,\n    tableTypes\n  };\n}\n/** Returns a function the creates a new context */\n\n\nconst createNewContext$1 = defaultContext => {\n  const {\n    parameterize,\n    escape,\n    mapKey,\n    build\n  } = defaultContext;\n  return (inherit = {}) => {\n    const {\n      params = [],\n      unparameterized = false\n    } = inherit;\n    const whr = [];\n    return {\n      // properties set by the EasyQB instance\n      parameterize,\n      escape,\n      mapKey,\n      build,\n      // properties inherited from the parent query\n      params,\n      unparameterized,\n      // properties of the current query\n      type: 'select',\n      // | sql' | 'select' | 'delete' | 'insert' | 'update'\n      target: whr,\n      join: undefined,\n      separator: ' ',\n      sql: [],\n      ret: [],\n      frm: [],\n      whr,\n      grp: [],\n      hav: [],\n      setop: [],\n      ord: [],\n      with: [],\n      set: [] // properties that may be added dynamically:\n      // userType\n      // distinct\n\n    };\n  };\n};\n\nvar context = createNewContext$1;\n\nconst createQueryBuilder = ({\n  defaultContext,\n  query,\n  e,\n  config\n}) => {\n  const {\n    queries,\n    methods,\n    properties\n  } = query;\n  const newContext = context(defaultContext);\n  const reducers = createReducers(methods);\n  const updateContext = applyReducers(reducers);\n\n  reducers.extend = (ctx, args) => {\n    const arr = Array.isArray(args[0]) ? args[0] : args;\n\n    for (let i = 0; i < arr.length; ++i) {\n      updateContext(arr[i].method, ctx);\n    }\n  };\n\n  const builder = () => {}; // must not be object literal\n\n\n  const chain = createChain$1(builder);\n  const executeProperties = {\n    one: {\n      value: async function () {\n        const ret = await config.oneCallback(this.query, config.tableName, config.userAssociatedRecordsOnly);\n        return ret;\n      }\n    },\n    all: {\n      value: async function () {\n        const ret = await config.allCallback(this.query, config.tableName, config.userAssociatedRecordsOnly);\n        return ret;\n      }\n    },\n    _tableName: {\n      get: function () {\n        return config.tableName;\n      }\n    }\n  }; // EasyQB no access to from\n\n  const _methodProperties = methodProperties$1({\n    methods,\n    chain\n  });\n\n  delete _methodProperties.from;\n  Object.defineProperties(builder, { ...builderProperties$1({\n      chain,\n      newContext,\n      updateContext,\n      queries\n    }),\n    ..._methodProperties,\n    ...executeProperties,\n    ...properties,\n    e: {\n      value: e\n    }\n  });\n  return chain();\n};\n/** Creates a new builder instance */\n\n\nconst createChain$1 = prototype => {\n  const chain = method => {\n    const fn = (...args) => chain({\n      name: 'express',\n      args,\n      prev: method\n    });\n\n    fn.method = method;\n    Object.setPrototypeOf(fn, prototype);\n    return fn;\n  };\n\n  return chain;\n};\n/** Creates an object containing all method reducers */\n\n\nconst createReducers = methods => {\n  const reducers = {};\n\n  for (const name in methods) {\n    const {\n      updateContext,\n      properties = {}\n    } = methods[name];\n    reducers[name] = updateContext; // some methods have subproperties, e.g. .unionAll\n\n    for (const key in properties) {\n      reducers[`${name}.${key}`] = properties[key];\n    }\n  }\n\n  return reducers;\n};\n/** Follows a method chain, applying each method's reducer, to ctx */\n\n\nconst applyReducers = reducers => (method, ctx) => {\n  // follow method links to construct methods array (in reverse)\n  const methods = [];\n\n  for (; method !== undefined; method = method.prev) {\n    methods.push(method);\n  } // build methods object by processing methods in call order\n\n\n  const express = {\n    id: 0\n  };\n\n  for (let i = methods.length - 1; i >= 0; --i) {\n    const method = methods[i];\n    reducers[method.name](ctx, method.args, express);\n  }\n\n  return ctx;\n};\n/** Default properties of all SQL Query Builders */\n\n\nconst builderProperties$1 = ({\n  newContext,\n  updateContext,\n  queries\n}) => ({\n  _build: {\n    value: function (inheritedContext) {\n      const ctx = updateContext(this.method, newContext(inheritedContext));\n      return queries[ctx.type](ctx);\n    }\n  },\n  query: {\n    get: function () {\n      return this._build();\n    }\n  },\n  unparameterized: {\n    get: function () {\n      return this._build({\n        unparameterized: true\n      }).text;\n    }\n  }\n});\n/** Builds object containing a property for every query building method */\n\n\nconst methodProperties$1 = ({\n  methods,\n  chain\n}) => {\n  const properties = {};\n\n  for (const name in methods) {\n    const {\n      getter\n    } = methods[name];\n\n    if (getter) {\n      // add getter methods\n      properties[name] = {\n        get: function () {\n          return chain({\n            name,\n            prev: this.method\n          });\n        }\n      };\n    } else {\n      // add function call methods\n      properties[name] = {\n        value: function (...args) {\n          return chain({\n            name,\n            args,\n            prev: this.method\n          });\n        }\n      };\n    }\n  }\n\n  return properties;\n};\n\nvar builderSq = createQueryBuilder;\n\nconst isTaggedTemplate$5 = ([strings]) => Array.isArray(strings) && strings.raw;\n\nconst buildTaggedTemplate$5 = (ctx, [strings, ...args]) => {\n  let txt = strings[0];\n\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1];\n  }\n\n  return txt;\n};\n\nvar tagged_template = {\n  isTaggedTemplate: isTaggedTemplate$5,\n  buildTaggedTemplate: buildTaggedTemplate$5\n};\nconst {\n  isTaggedTemplate: isTaggedTemplate$4,\n  buildTaggedTemplate: buildTaggedTemplate$4\n} = tagged_template;\n\nconst isObject$6 = arg => arg && arg.constructor.prototype === Object.prototype;\n\nconst buildCall$8 = callbackfn => (ctx, args) => isTaggedTemplate$4(args) ? buildTaggedTemplate$4(ctx, args) : callbackfn(ctx, args);\n\nconst mapJoin$8 = (callbackfn, separator = ', ') => (ctx, args) => {\n  let txt = '';\n\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator;\n    txt += callbackfn(ctx, args[i]);\n  }\n\n  return txt;\n};\n\nconst mapJoinWrap$1 = (callbackfn, separator = ', ', open = '(', close = ')') => (ctx, args) => {\n  let txt = open;\n\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator;\n    txt += callbackfn(ctx, args[i]);\n  }\n\n  return txt + close;\n};\n\nconst objectMapJoin$5 = (callbackfn, separator = ', ') => (ctx, object) => {\n  let txt = '';\n  const keys = Object.keys(object);\n\n  for (let i = 0; i < keys.length; ++i) {\n    if (i !== 0) txt += separator;\n    const key = keys[i];\n    txt += callbackfn(ctx, key, object[key]);\n  }\n\n  return txt;\n};\n\nvar build_utils = {\n  isObject: isObject$6,\n  buildCall: buildCall$8,\n  mapJoin: mapJoin$8,\n  mapJoinWrap: mapJoinWrap$1,\n  objectMapJoin: objectMapJoin$5\n}; // included to mitigate cost of case conversion\n\nconst memoize$1 = fn => {\n  const cache = {};\n  return key => cache[key] || (cache[key] = fn(key));\n};\n\nconst normalKey$3 = given_key => given_key.indexOf('(') === -1 ? given_key.toLowerCase().trim().replace(/ /g, '_') : given_key;\n\nvar change_case = {\n  memoize: memoize$1,\n  normalKey: normalKey$3\n};\nvar libUtil = { ...build_utils,\n  ...change_case,\n  ...tagged_template\n};\nconst {\n  isTaggedTemplate: isTaggedTemplate$3\n} = libUtil;\n\nconst createExpressionCompiler = expressionTable => {\n  const callsCompiler = createCallsCompiler(expressionTable);\n  return (ctx, current) => {\n    const calls = buildCalls(current);\n    const text = callsCompiler(ctx, calls);\n    return {\n      text,\n      args: ctx.params,\n      type: 'expression'\n    };\n  };\n}; // TODO: Performance optimization:\n// inline expression building with this method so at most only one array\n// is allocated in total, no array of object containing arrays nonsense\n\n\nconst buildCalls = current => {\n  // get call nodes\n  const calls = [];\n\n  for (; current; current = current.prev) calls.push(current);\n\n  if (calls.length === 0) throw Error('Error: Empty expression'); // build expression list\n\n  let expression = {\n    name: 'arg',\n    args: []\n  };\n  const expressions = [expression];\n  const last = calls.length - 1;\n\n  for (let i = last; i >= 0; --i) {\n    const {\n      name,\n      args\n    } = calls[i];\n\n    if (i === last) {\n      if (name) expression.name = name;else pushCall(expression.args, args);\n    } else {\n      if (name) expressions.push(expression = {\n        name,\n        args: [undefined]\n      });else pushCall(expression.args, args);\n    }\n  }\n\n  return expressions;\n};\n\nconst pushCall = (array, args) => {\n  if (isTaggedTemplate$3(args)) {\n    array.push({\n      tag: args\n    });\n  } else {\n    if (args.length === 0) throw Error('Error: Expression call requires at least one argument');\n\n    for (let i = 0; i < args.length; ++i) {\n      array.push({\n        arg: args[i]\n      });\n    }\n  }\n};\n\nconst createCallsCompiler = expressionTable => (ctx, calls) => {\n  let exp;\n\n  for (let i = 0; i < calls.length; ++i) {\n    const {\n      name,\n      args\n    } = calls[i];\n    const {\n      build,\n      minArgs,\n      maxArgs\n    } = expressionTable[name];\n    if (i !== 0) args[0] = {\n      exp\n    };\n    const numArgs = args.length;\n    if (numArgs < minArgs) throw Error(`Error: ${name} requires at least ${minArgs} arguments`);\n    if (numArgs > maxArgs) throw Error(`Error: ${name} accepts at most ${maxArgs} arguments`);\n    exp = build(ctx, args);\n  }\n\n  return exp;\n};\n\nvar compile = createExpressionCompiler;\nconst {\n  normalKey: normalKey$2\n} = libUtil;\n\nconst aggregator = op => columnName => `${op}(${normalKey$2(columnName)})`;\n\nvar builderExpression = ({\n  defaultContext,\n  expression\n}) => {\n  const {\n    expressions\n  } = expression;\n  const newContext = createNewContext(defaultContext);\n  const compile$1 = compile(expressions);\n\n  const builder = () => {}; // must not be object literal\n\n\n  const chain = createChain(builder);\n  Object.defineProperties(builder, { ...builderProperties({\n      compile: compile$1,\n      newContext\n    }),\n    ...methodProperties({\n      expressions,\n      chain\n    })\n  });\n  const ret = chain();\n  ret.max = aggregator('max');\n  ret.min = aggregator('min');\n  ret.avg = aggregator('avg');\n  ret.count = aggregator('count');\n  ret.sum = aggregator('sum');\n  return ret;\n};\n\nconst builderProperties = ({\n  compile,\n  newContext\n}) => ({\n  _build: {\n    value: function (inherit) {\n      return compile(newContext(inherit), this.current);\n    }\n  },\n  query: {\n    get: function () {\n      return this._build();\n    }\n  },\n  unparameterized: {\n    get: function () {\n      return this._build({\n        unparameterized: true\n      }).text;\n    }\n  }\n});\n\nconst createNewContext = defaultContext => {\n  const {\n    build,\n    parameterize,\n    escape,\n    mapKey\n  } = defaultContext;\n  return inherit => {\n    const {\n      params = [],\n      unparameterized = false\n    } = inherit || {};\n    return {\n      // EasyQB instance properties\n      build,\n      parameterize,\n      escape,\n      mapKey,\n      // inherited properties\n      params,\n      unparameterized\n    };\n  };\n};\n\nconst createChain = prototype => {\n  const chain = current => {\n    const fn = (...args) => chain({\n      prev: current,\n      args\n    });\n\n    fn.current = current;\n    Object.setPrototypeOf(fn, prototype);\n    return fn;\n  };\n\n  return chain;\n};\n\nconst methodProperties = ({\n  expressions,\n  chain\n}) => {\n  const properties = {};\n\n  for (const name in expressions) {\n    properties[name] = {\n      get: function () {\n        return chain({\n          prev: this.current,\n          name\n        });\n      }\n    };\n  }\n\n  return properties;\n};\n\nconst {\n  memoize,\n  normalKey: normalKey$1\n} = libUtil;\n/**\n * Creates a version of EasyQB for the given SQL dialect and database adapter.\n *\n * A dialect is variant of the SQL language,\n * while an adapter is the driver that communicates with the database.\n *\n * This design makes it easy to swap drivers, e.g. mysql vs mysql2 or\n * add new databases just by connecting a new adapter to an existing dialect.\n *\n */\n\nconst createSqorn = ({\n  dialect\n}) => (config = {}) => {\n  const {\n    query,\n    expression,\n    parameterize,\n    escape\n  } = dialect; // 1. Create default context properties passed through build tree\n\n  const mapKey = memoize(normalKey$1);\n  const defaultContext = {\n    parameterize,\n    escape,\n    mapKey,\n    build: build$1\n  }; // 2. Create Expression Builder\n\n  const e = builderExpression({\n    defaultContext,\n    expression\n  }); // 3. Create Query Builder\n\n  const sq = builderSq({\n    defaultContext,\n    query,\n    e,\n    config\n  }); // 4. TODO: Build Executor, Attach e and execute functions\n  // 5. TODO: Return { sq, e, transaction, db }\n\n  return sq;\n};\n\nfunction build$1(arg) {\n  if (arg === undefined) throw Error('Error: undefined argument');\n\n  if (typeof arg === 'function') {\n    if (arg._build) {\n      const {\n        type,\n        text\n      } = arg._build(this);\n\n      if (type === 'expression') return text;\n      if (type === 'fragment') return text;\n      return `(${text})`;\n    }\n\n    return arg(this);\n  }\n\n  return this.unparameterized ? this.escape(arg) : this.parameterize(arg);\n}\n\nvar libCore = createSqorn;\nconst {\n  normalKey\n} = libUtil;\n/** Query building methods */\n\nconst methods$1 = {\n  with: {\n    updateContext: (ctx, args) => {\n      ctx.with.push(args);\n    }\n  },\n  withRecursive: {\n    updateContext: (ctx, args) => {\n      ctx.recursive = true;\n      ctx.with.push(args);\n    }\n  },\n  from: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push({\n        args,\n        join: ', '\n      });\n    }\n  },\n  where: {\n    updateContext: (ctx, args) => {\n      ctx.whr.push(args);\n      ctx.target = ctx.whr;\n    }\n  },\n  return: {\n    updateContext: (ctx, args) => {\n      ctx.ret.push(Array.isArray(args) ? args.map(normalKey) : args);\n    }\n  },\n  distinct: {\n    getter: true,\n    updateContext: ctx => {\n      ctx.distinct = [];\n    }\n  },\n  groupBy: {\n    updateContext: (ctx, args) => {\n      ctx.grp.push(args);\n    }\n  },\n  having: {\n    updateContext: (ctx, args) => {\n      ctx.hav.push(args);\n      ctx.target = ctx.hav;\n    }\n  },\n  union: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'union',\n        args\n      });\n    }\n  },\n  unionAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'union all',\n        args\n      });\n    }\n  },\n  intersect: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'intersect',\n        args\n      });\n    }\n  },\n  intersectAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'intersect all',\n        args\n      });\n    }\n  },\n  except: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'except',\n        args\n      });\n    }\n  },\n  exceptAll: {\n    updateContext: (ctx, args) => {\n      ctx.setop.push({\n        type: 'except all',\n        args\n      });\n    }\n  },\n  orderBy: {\n    updateContext: (ctx, args) => {\n      ctx.ord.push(args);\n    }\n  },\n  limit: {\n    updateContext: (ctx, args) => {\n      ctx.limit = args;\n    }\n  },\n  offset: {\n    updateContext: (ctx, args) => {\n      ctx.offset = args;\n    }\n  },\n  join: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' join '\n      });\n    }\n  },\n  leftJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' left join '\n      });\n    }\n  },\n  rightJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' right join '\n      });\n    }\n  },\n  fullJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' full join '\n      });\n    }\n  },\n  crossJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' cross join '\n      });\n    }\n  },\n  naturalJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural join '\n      });\n    }\n  },\n  naturalLeftJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural left join '\n      });\n    }\n  },\n  naturalRightJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural right join '\n      });\n    }\n  },\n  naturalFullJoin: {\n    updateContext: (ctx, args) => {\n      ctx.frm.push(ctx.join = {\n        args,\n        join: ' natural full join '\n      });\n    }\n  },\n  on: {\n    updateContext: (ctx, args) => {\n      const {\n        join\n      } = ctx;\n\n      if (join.on) {\n        join.on.push(args);\n      } else {\n        ctx.target = join.on = [args];\n      }\n    }\n  },\n  using: {\n    updateContext: (ctx, args) => {\n      const {\n        join\n      } = ctx;\n\n      if (join.using) {\n        join.using.push(args);\n      } else {\n        join.using = [args];\n      }\n    }\n  },\n  delete: {\n    // getter: true,\n    updateContext: ctx => {\n      ctx.type = 'delete';\n    }\n  },\n  insert: {\n    updateContext: (ctx, args) => {\n      ctx.type = 'insert';\n      ctx.insert = args;\n    }\n  },\n  set: {\n    updateContext: (ctx, args) => {\n      ctx.type = 'update';\n      ctx.set.push(args);\n    }\n  },\n  express: {\n    updateContext: (ctx, args, count) => {\n      if (count.id === 0) {\n        count.id++;\n        ctx.frm.push(ctx.join = {\n          type: 'from',\n          args,\n          join: ', '\n        });\n      } else if (count.id === 1) {\n        count.id++;\n        ctx.whr.push(args);\n      } else if (count.id === 2) {\n        count.id++;\n        ctx.ret.push(args);\n      } else throw Error('Invalid express call');\n    }\n  }\n};\nvar methods_1 = methods$1;\nconst {\n  mapJoin: mapJoin$7\n} = libUtil;\n\nvar values_array = (ctx, array) => {\n  const keys = uniqueKeys(array);\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  };\n}; // gets unique keys in object array\n\n\nconst uniqueKeys = array => {\n  const keys = {};\n\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true;\n    }\n  }\n\n  return Object.keys(keys);\n}; // gets column string from unique keys of object array\n\n\nconst columns = mapJoin$7((ctx, arg) => ctx.mapKey(arg)); // gets values string of object array\n\nconst values = (ctx, source, keys) => {\n  let txt = 'values ';\n\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', ';\n    txt += '(';\n    const object = source[i];\n\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', ';\n      txt += value$1(ctx, object[keys[j]]);\n    }\n\n    txt += ')';\n  }\n\n  return txt;\n};\n\nconst value$1 = (ctx, arg) => {\n  if (arg === undefined) return 'default';\n  return ctx.build(arg);\n};\n\nconst {\n  isObject: isObject$5,\n  buildCall: buildCall$7,\n  mapJoin: mapJoin$6,\n  objectMapJoin: objectMapJoin$4\n} = libUtil;\n\nvar _with = ctx => {\n  if (ctx.with.length === 0) return;\n  const txt = calls$3(ctx, ctx.with);\n  return txt && `with ${ctx.recursive ? 'recursive ' : ''}${txt}`;\n};\n\nconst buildArg$4 = (ctx, arg) => {\n  if (isObject$5(arg)) return buildObject$5(ctx, arg);\n  throw Error('Invalid with argument:', arg);\n};\n\nconst buildProperty$4 = (ctx, key, value) => {\n  if (typeof value === 'function') {\n    return `${ctx.mapKey(key)} ${ctx.build(value)}`;\n  }\n\n  if (Array.isArray(value)) {\n    const {\n      columns,\n      values\n    } = values_array(ctx, value);\n    return `${ctx.mapKey(key)}(${columns}) (${values})`;\n  }\n\n  throw Error(`Error: Invalid .with argument`);\n};\n\nconst buildObject$5 = objectMapJoin$4(buildProperty$4);\nconst calls$3 = mapJoin$6(buildCall$7(mapJoin$6(buildArg$4)));\nconst {\n  isObject: isObject$4,\n  buildCall: buildCall$6,\n  mapJoin: mapJoin$5,\n  objectMapJoin: objectMapJoin$3\n} = libUtil;\n\nconst buildArg$3 = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (isObject$4(arg)) return buildObject$4(ctx, arg);\n  return ctx.build(arg);\n};\n\nconst buildProperty$3 = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value);\n  return `${expression} ${ctx.mapKey(key)}`;\n};\n\nconst buildObject$4 = objectMapJoin$3(buildProperty$3);\nvar expressions$1 = mapJoin$5(buildCall$6(mapJoin$5(buildArg$3)));\n\nvar select$2 = ctx => `select ${buildDistinct(ctx)}${expressions$1(ctx, ctx.ret) || '*'}`;\n\nconst buildDistinct = ctx => ctx.distinct ? ctx.distinct.length ? // TODO: expressions shouldn't be aliasable here\n`distinct on (${expressions$1(ctx, ctx.distinct)})` : 'distinct' : '';\n\nconst {\n  isTaggedTemplate: isTaggedTemplate$2,\n  buildTaggedTemplate: buildTaggedTemplate$3,\n  isObject: isObject$3,\n  mapJoin: mapJoin$4,\n  objectMapJoin: objectMapJoin$2\n} = libUtil;\n\nconst buildCall$5 = callbackfn => (ctx, args) => isTaggedTemplate$2(args) ? `(${buildTaggedTemplate$3(ctx, args)})` : callbackfn(ctx, args);\n\nconst buildArg$2 = (ctx, arg) => isObject$3(arg) ? buildObject$3(ctx, arg) : ctx.build(arg);\n\nconst valuesList = mapJoin$4((ctx, arg) => ctx.build(arg));\n\nconst buildProperty$2 = (ctx, key, value) => {\n  const name = ctx.mapKey(key);\n  if (value === null) return `(${name} is null)`;\n  if (Array.isArray(value)) return `(${name} in (${valuesList(ctx, value)}))`;\n  return `(${name} = ${ctx.build(value)})`;\n};\n\nconst buildObject$3 = objectMapJoin$2(buildProperty$2, ' and ');\nvar conditions = mapJoin$4(buildCall$5(mapJoin$4(buildArg$2, ' and ')), ' and ');\nconst {\n  isObject: isObject$2,\n  buildCall: buildCall$4,\n  mapJoin: mapJoin$3,\n  objectMapJoin: objectMapJoin$1\n} = libUtil;\n\nvar from_items = (ctx, items, start = 0, end = items.length) => {\n  if (end > items.length) end = items.length;\n  let txt = '';\n\n  for (let i = start; i < end; ++i) {\n    const item = items[i];\n    if (i !== start) txt += item.join;\n    txt += fromItem(ctx, item.args);\n    if (item.on) txt += ` on ${conditions(ctx, item.on)}`;else if (item.using) txt += ` using (${using$1(ctx, item.using)})`;\n  }\n\n  return txt;\n};\n\nconst usingArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  throw Error('Error: Invalid .using arg');\n};\n\nconst using$1 = mapJoin$3(buildCall$4(mapJoin$3(usingArg)));\n\nconst fromArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (isObject$2(arg)) return buildObject$2(ctx, arg);\n  throw Error('Error: Invalid .from argument:', arg);\n};\n\nconst buildProperty$1 = (ctx, key, value) => {\n  if (typeof value === 'string') return `${value} ${ctx.mapKey(key)}`;\n  if (typeof value === 'function') return `${ctx.build(value)} ${ctx.mapKey(key)}`;\n\n  if (Array.isArray(value)) {\n    const {\n      columns,\n      values\n    } = values_array(ctx, value);\n    return `(${values}) ${ctx.mapKey(key)}(${columns})`;\n  }\n\n  throw Error('Error: Invalid .from argument');\n};\n\nconst buildObject$2 = objectMapJoin$1(buildProperty$1);\nconst fromItem = buildCall$4(mapJoin$3(fromArg));\n\nvar from$2 = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `from ${txt}`;\n};\n\nvar where$2 = ctx => {\n  if (ctx.whr.length === 0) return;\n  const txt = conditions(ctx, ctx.whr);\n  return txt && 'where ' + txt;\n};\n\nconst {\n  isObject: isObject$1,\n  buildCall: buildCall$3,\n  mapJoin: mapJoin$2,\n  mapJoinWrap\n} = libUtil;\n\nvar group$2 = ctx => {\n  if (ctx.grp.length === 0) return;\n  const txt = calls$2(ctx, ctx.grp);\n  return txt && `group by ${txt}`;\n};\n\nconst buildArg$1 = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (Array.isArray(arg)) return buildArrayArg(ctx, arg);\n  if (isObject$1(arg)) return buildObject$1(ctx, arg);\n  throw Error('Invalid order by argument:', arg);\n};\n\nconst buildArrayArg = mapJoinWrap(buildArg$1); // postgres only\n// clone of buildArg() without support for object args\n\nconst buildCubeOrRollupArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (Array.isArray(arg)) return buildCubeOrRollupArrayArg(ctx, arg);\n  throw Error('Invalid cube/rollup argument');\n}; // postgres only\n// clone of buildArrayArg() without support for object args\n\n\nconst buildCubeOrRollupArrayArg = mapJoinWrap(buildCubeOrRollupArg); // postgres only\n\nconst buildObject$1 = (ctx, obj) => {\n  const {\n    type,\n    args\n  } = obj;\n\n  if (type === 'rollup') {\n    return `rollup ${buildCubeOrRollupArg(ctx, args)}`;\n  }\n\n  if (type === 'cube') {\n    return `cube ${buildCubeOrRollupArg(ctx, args)}`;\n  }\n\n  if (type === 'grouping sets') {\n    return `grouping sets ${buildArg$1(ctx, args)}`;\n  }\n\n  throw Error('Invalid group by argument');\n};\n\nconst calls$2 = mapJoin$2(buildCall$3(mapJoin$2(buildArg$1)));\n\nvar having$2 = ctx => {\n  if (ctx.hav.length === 0) return;\n  const txt = conditions(ctx, ctx.hav);\n  return txt && 'having ' + txt;\n};\n\nvar setop$2 = ctx => {\n  if (ctx.setop.length === 0) return;\n  let txt = '';\n  let first = true;\n  const {\n    setop\n  } = ctx;\n\n  for (let i = 0; i < setop.length; ++i) {\n    const {\n      type,\n      args\n    } = ctx.setop[i];\n\n    for (let j = 0; j < args.length; ++j) {\n      if (!first) {\n        txt += ' ';\n      } else {\n        first = false;\n      }\n\n      txt += `${type} ${ctx.build(args[j])}`;\n    }\n  }\n\n  return txt;\n};\n\nconst {\n  isObject,\n  buildCall: buildCall$2,\n  mapJoin: mapJoin$1\n} = libUtil;\n\nvar order$2 = ctx => {\n  if (ctx.ord.length === 0) return;\n  const txt = calls$1(ctx, ctx.ord);\n  return txt && `order by ${txt}`;\n};\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (typeof arg === 'function') return ctx.build(arg);\n  if (isObject(arg)) return buildObject(ctx, arg);\n  throw Error('Invalid order by argument:', arg);\n};\n\nconst buildObject = (ctx, obj) => {\n  let txt = '';\n  const {\n    by,\n    sort,\n    using,\n    nulls\n  } = obj; // by\n\n  if (typeof by === 'string') txt += by;else if (typeof by === 'function') txt += ctx.build(by);else throw Error('Invalid order by property \"by\"'); // sort\n\n  if (sort) {\n    if (sort === 'desc') txt += ' desc';else if (sort === 'asc') txt += ' asc';else if (typeof sort === 'string') txt += ` using ${sort}`;else throw Error('Invalid order by property \"sort\"');\n  } else if (using) {\n    if (typeof using === 'string') txt += ` using ${using}`;else throw Error('Invalid order by property \"using\"');\n  } // nulls\n\n\n  if (nulls === undefined) ;else if (nulls === 'last') txt += ' nulls last';else if (nulls === 'first') txt += ' nulls first';else throw Error('Invalid order by property \"nulls\"'); // return\n\n  return txt;\n};\n\nconst calls$1 = mapJoin$1(buildCall$2(mapJoin$1(buildArg)));\nconst {\n  isTaggedTemplate: isTaggedTemplate$1,\n  buildTaggedTemplate: buildTaggedTemplate$2\n} = libUtil;\n\nvar limit_offset = (ctx, args) => {\n  if (isTaggedTemplate$1(args)) return buildTaggedTemplate$2(ctx, args);\n  const arg = args[0];\n  if (typeof arg === 'number') return ctx.parameterize(arg);\n  if (typeof arg === 'function') return ctx.build(arg);\n  throw Error('Error: Invalid limit/offset argument');\n};\n\nvar limit$2 = ctx => ctx.limit && `limit ${limit_offset(ctx, ctx.limit)}`;\n\nvar offset$2 = ctx => ctx.offset && `offset ${limit_offset(ctx, ctx.offset)}`;\n\nvar _delete = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `delete from ${txt}`;\n};\n\nvar returning$2 = ctx => {\n  if (!ctx.ret) return;\n  const txt = expressions$1(ctx, ctx.ret);\n  return txt && `returning ${txt}`;\n};\n\nconst {\n  isTaggedTemplate,\n  buildTaggedTemplate: buildTaggedTemplate$1\n} = libUtil;\n\nvar insert$1 = ctx => {\n  const table = from_items(ctx, ctx.frm);\n  const values = buildCall$1(ctx, ctx.insert);\n  return `insert into ${table}${values}`;\n};\n\nconst buildCall$1 = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate$1(ctx, args);\n  if (args.length === 1 && args[0] === undefined) return ' default values';\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0]);\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0]);\n  return buildValuesArray(ctx, args);\n};\n\nconst buildValuesArray = (ctx, array) => {\n  const {\n    values,\n    columns\n  } = values_array(ctx, array);\n  return `(${columns}) ${values}`;\n};\n\nvar update$2 = ctx => {\n  const txt = from_items(ctx, ctx.frm);\n  return txt && `update ${txt}`;\n};\n\nconst {\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = libUtil;\n\nvar set$2 = ctx => {\n  if (!ctx.set) return;\n  const txt = calls(ctx, ctx.set);\n  return txt && 'set ' + txt;\n};\n\nconst buildProperty = (ctx, key, value) => `${ctx.mapKey(key)} = ${ctx.build(value)}`;\n\nconst calls = mapJoin(buildCall(mapJoin(objectMapJoin(buildProperty))));\nvar clauses$1 = {\n  wth: _with,\n  select: select$2,\n  from: from$2,\n  where: where$2,\n  group: group$2,\n  having: having$2,\n  setop: setop$2,\n  order: order$2,\n  limit: limit$2,\n  offset: offset$2,\n  del: _delete,\n  returning: returning$2,\n  insert: insert$1,\n  update: update$2,\n  set: set$2\n};\nconst {\n  wth: wth$1,\n  select: select$1,\n  from: from$1,\n  where: where$1,\n  group: group$1,\n  having: having$1,\n  setop: setop$1,\n  order: order$1,\n  limit: limit$1,\n  offset: offset$1,\n  del: del$1,\n  returning: returning$1,\n  insert,\n  update: update$1,\n  set: set$1\n} = clauses$1;\n\nconst query$2 = (...clauses) => ctx => {\n  let text = '';\n\n  for (const clause of clauses) {\n    const str = clause && clause(ctx);\n\n    if (str) {\n      if (text) text += ctx.separator;\n      text += str;\n    }\n  }\n\n  return {\n    text,\n    args: ctx.params,\n    type: ctx.userType || ctx.type\n  };\n};\n\nconst queries$2 = {\n  select: query$2(wth$1, select$1, from$1, where$1, group$1, having$1, setop$1, order$1, limit$1, offset$1),\n  update: query$2(wth$1, update$1, set$1, where$1, returning$1),\n  delete: query$2(wth$1, del$1, where$1, returning$1),\n  insert: query$2(wth$1, insert, returning$1)\n};\nvar query_1$1 = {\n  query: query$2,\n  queries: queries$2\n};\nvar common$1 = {\n  conditions,\n  expressions: expressions$1,\n  fromItems: from_items,\n  limitOffset: limit_offset,\n  valuesArray: values_array\n};\nconst {\n  query: query$1,\n  queries: queries$1\n} = query_1$1;\nvar libSq = {\n  methods: methods_1,\n  query: query$1,\n  queries: queries$1,\n  clauses: clauses$1,\n  common: common$1\n};\nconst {\n  methods,\n  queries,\n  query,\n  clauses,\n  common\n} = libSq;\nconst {\n  fromItems,\n  expressions\n} = common;\nconst {\n  wth,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  returning,\n  set\n} = clauses;\nconst postgresMethods = {\n  distinctOn: {\n    updateContext: (ctx, args) => {\n      if (ctx.distinct) {\n        ctx.distinct.push(args);\n      } else {\n        ctx.distinct = [args];\n      }\n    }\n  }\n}; // SELECT supports .distinctOn(...expressions)\n\nconst select = ctx => {\n  let txt = 'select ';\n\n  if (ctx.distinct) {\n    txt += 'distinct ';\n\n    if (ctx.distinct.length) {\n      txt += `on (${expressions(ctx, ctx.distinct)}) `;\n    }\n  }\n\n  txt += expressions(ctx, ctx.ret) || '*';\n  return txt;\n}; // DELETE: first .from call is used in the DELETE clause\n// subsequent .from calls are used in the USING clause\n\n\nconst del = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1);\n  return txt && `delete from ${txt}`;\n};\n\nconst using = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1);\n  return txt && `using ${txt}`;\n}; // UPDATE: first .from call is used in the UPDATE clause\n// subsequent .from calls are used in the FROM clause\n\n\nconst update = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1);\n  return txt && `update ${txt}`;\n};\n\nconst updateFrom = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1);\n  return txt && `from ${txt}`;\n};\n\nvar query_1 = {\n  methods: { ...methods,\n    ...postgresMethods\n  },\n  queries: { ...queries,\n    select: query(wth, select, from, where, group, having, setop, order, limit, offset),\n    delete: query(wth, del, using, where, returning),\n    update: query(wth, update, set, updateFrom, where, returning)\n  },\n  properties: {\n    rollup: {\n      value: (...args) => {\n        return {\n          type: 'rollup',\n          args\n        };\n      }\n    },\n    cube: {\n      value: (...args) => {\n        return {\n          type: 'cube',\n          args\n        };\n      }\n    },\n    groupingSets: {\n      value: (...args) => {\n        return {\n          type: 'grouping sets',\n          args\n        };\n      }\n    }\n  }\n};\nconst {\n  buildTaggedTemplate\n} = libUtil;\n\nconst dateToYYYYMMDD = d => [d.getFullYear(), ('0' + (d.getMonth() + 1)).slice(-2), ('0' + d.getDate()).slice(-2)].join('-');\n\nconst build = (ctx, arg) => {\n  // compiled expression string\n  if (arg.exp) return arg.exp; // tagged template argument\n\n  if (arg.tag) return buildTaggedTemplate(ctx, arg.tag); // expression, subquery or fragment argument\n\n  return ctx.build(arg.arg);\n};\n\nconst unaryPre$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `(${op} ${build(ctx, args[0])})`\n});\n\nconst unaryPost$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op})`\n});\n\nconst unaryFunction$1 = op => ({\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => `${op}(${build(ctx, args[0])})`\n});\n\nconst binary$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op} ${build(ctx, args[1])})`\n});\n\nconst dateBinary$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => {\n    const inDate = args[1].arg;\n\n    if (typeof inDate.getMonth === 'function') {\n      args[1].arg = dateToYYYYMMDD(inDate);\n    }\n\n    return `date(${build(ctx, args[0])}, 'YYYY-MM-DD') ${op} ${build(ctx, args[1])}`;\n  }\n});\n\nconst ternary$1 = (op1, op2) => ({\n  minArgs: 3,\n  maxArgs: 3,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op1} ${build(ctx, args[1])} ${op2} ${build(ctx, args[2])})`\n});\n\nconst nary$1 = op => ({\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    if (args.length === 1) return build(ctx, args[0]);\n    let txt = '(';\n\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += ` ${op} `;\n      txt += build(ctx, args[i]);\n    }\n\n    return txt + ')';\n  }\n});\n\nconst naryFunction$1 = fn => ({\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    let txt = `${fn}(`;\n\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += `, `;\n      txt += build(ctx, args[i]);\n    }\n\n    return txt + ')';\n  }\n});\n\nconst oneValue$1 = {\n  minArgs: 1,\n  maxArgs: 1,\n  build: (ctx, args) => build(ctx, args[0])\n};\nconst compositeValue$1 = {\n  minArgs: 1,\n  maxArgs: Number.MAX_SAFE_INTEGER,\n  build: (ctx, args) => {\n    if (args.length === 1) return build(ctx, args[0]);\n    let txt = '';\n\n    for (let i = 0; i < args.length; ++i) {\n      if (i !== 0) txt += ', ';\n      txt += build(ctx, args[i]);\n    }\n\n    return args.length > 1 ? `(${txt})` : txt;\n  }\n};\n\nconst buildValuesList = (ctx, values) => {\n  if (values.length === 0) throw Error('Error: .in operation values list empty');\n  let txt = '(';\n\n  for (let i = 0; i < values.length; ++i) {\n    if (i !== 0) txt += ', ';\n    txt += ctx.build(values[i]);\n  }\n\n  return txt + ')';\n};\n\nconst membership$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, [arg1, arg2]) => `(${build(ctx, arg1)} ${op} ${Array.isArray(arg2.arg) ? buildValuesList(ctx, arg2.arg) : build(ctx, arg2)})`\n});\n\nconst quantifiedComparison$1 = op => ({\n  minArgs: 2,\n  maxArgs: 2,\n  build: (ctx, args) => `(${build(ctx, args[0])} ${op}(${build(ctx, args[1])}))`\n});\n\nvar util = {\n  build,\n  unaryFunction: unaryFunction$1,\n  unaryPre: unaryPre$1,\n  unaryPost: unaryPost$1,\n  binary: binary$1,\n  ternary: ternary$1,\n  nary: nary$1,\n  naryFunction: naryFunction$1,\n  oneValue: oneValue$1,\n  compositeValue: compositeValue$1,\n  membership: membership$1,\n  quantifiedComparison: quantifiedComparison$1,\n  dateBinary: dateBinary$1\n};\nconst {\n  unaryPre,\n  unaryPost,\n  unaryFunction,\n  binary,\n  ternary,\n  nary,\n  naryFunction,\n  oneValue,\n  compositeValue,\n  membership,\n  quantifiedComparison,\n  dateBinary\n} = util; // value\n\nconst value = {\n  arg: compositeValue,\n  row: compositeValue,\n  unknown: oneValue,\n  boolean: oneValue,\n  number: oneValue,\n  string: oneValue,\n  array: oneValue,\n  json: oneValue,\n  table: oneValue\n}; // boolean\n\nconst boolean = {\n  // logical\n  and: nary('and'),\n  or: nary('or'),\n  not: unaryFunction('not'),\n  // comparison\n  isTrue: unaryPost('is true'),\n  isNotTrue: unaryPost('is not true'),\n  isFalse: unaryPost('is false'),\n  isNotFalse: unaryPost('is not false'),\n  isUnknown: unaryPost('is unknown'),\n  isNotUnknown: unaryPost('is not unknown')\n}; // comparison\n\nconst comparison = {\n  // binary comparison\n  eq: binary('='),\n  neq: binary('<>'),\n  lt: binary('<'),\n  gt: binary('>'),\n  lte: binary('<='),\n  gte: binary('>='),\n  // misc\n  between: ternary('between', 'and'),\n  isDistinctFrom: binary('is distinct from'),\n  isNotDistinctFrom: binary('is not distinct from'),\n  isNull: unaryPost('is null'),\n  isNotNull: unaryPost('is not null'),\n  in: membership('in'),\n  notIn: membership('not in'),\n  // quantified any\n  eqAny: quantifiedComparison('= any'),\n  neqAny: quantifiedComparison('<> any'),\n  ltAny: quantifiedComparison('< any'),\n  gtAny: quantifiedComparison('> any'),\n  lteAny: quantifiedComparison('<= any'),\n  gteAny: quantifiedComparison('>= any'),\n  // quantified all\n  eqAll: quantifiedComparison('= all'),\n  neqAll: quantifiedComparison('<> all'),\n  ltAll: quantifiedComparison('< all'),\n  gtAll: quantifiedComparison('> all'),\n  lteAll: quantifiedComparison('<= all'),\n  gteAll: quantifiedComparison('>= all')\n}; // dates\n\nconst dateComparison = {\n  // dateEq: dateBinary('='),\n  // dateNeq: dateBinary('<>'),\n  dateLt: dateBinary('<'),\n  dateGt: dateBinary('>'),\n  dateLte: dateBinary('<='),\n  dateGte: dateBinary('>=')\n}; // math\n\nconst math = {\n  add: binary('+'),\n  sub: binary('-'),\n  mul: binary('*'),\n  div: binary('/'),\n  mod: binary('%'),\n  exp: binary('%'),\n  sqrt: unaryPre('|/'),\n  cbrt: unaryPre('||/'),\n  fact: unaryPre('!!'),\n  abs: unaryFunction('abs')\n}; // string\n\nconst string = {\n  like: binary('like'),\n  notLike: binary('not like')\n};\nconst array = {\n  unnest: naryFunction('unnest')\n};\nvar libExpression = { ...value,\n  ...boolean,\n  ...comparison,\n  ...math,\n  ...array,\n  ...dateComparison,\n  ...string\n};\nvar expression = {\n  expressions: libExpression\n}; // parameterizes given argument, function should be attached to ctx\n\nfunction parameterize$1(arg) {\n  if (arg === undefined) throw Error('Error: parameter is undefined');\n  return `$${this.params.push(arg)}`;\n}\n/** Escapes an argument for use in UNPARAMETERIZED queries. NOT SAFE AT ALL. */\n\n\nconst escape$1 = arg => {\n  if (arg === undefined) throw Error('Error: parameter is undefined');\n  if (arg === null) return 'null';\n  if (typeof arg === 'string') return escapeLiteral(arg);\n  if (typeof arg === 'number') return '' + arg;\n  if (typeof arg === 'boolean') return '' + arg;\n\n  if (typeof arg === 'object') {\n    if (Array.isArray(arg)) {\n      return `array[${arg.map(e => escape$1(e)).join(', ')}]`;\n    } else {\n      return escapeLiteral(JSON.stringify(arg));\n    }\n  }\n\n  throw Error(`Invalid argument SQL argument of type '${typeof arg}'`, arg);\n}; // from https://github.com/brianc/node-postgres/blob/eb076db5d47a29c19d3212feac26cd7b6d257a95/lib/client.js#L351\n\n\nconst escapeLiteral = str => {\n  let hasBackslash = false;\n  let escaped = \"'\";\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str[i];\n\n    if (c === \"'\") {\n      escaped += c + c;\n    } else if (c === '\\\\') {\n      escaped += c + c;\n      hasBackslash = true;\n    } else {\n      escaped += c;\n    }\n  }\n\n  escaped += \"'\";\n\n  if (hasBackslash === true) {\n    escaped = ' E' + escaped;\n  }\n\n  return escaped;\n};\n\nvar parameterize_1 = {\n  parameterize: parameterize$1,\n  escape: escape$1\n};\nconst {\n  parameterize,\n  escape\n} = parameterize_1;\nvar dialectPostgres = {\n  query: query_1,\n  expression,\n  parameterize,\n  escape\n};\nconst a$1 = libCore({\n  dialect: dialectPostgres\n});\na$1.from = undefined;\nvar src = a$1;\n\nfunction dbFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost\n  } = authFactory(g);\n  let _listenerIndex = 0;\n  const _listeners = {};\n\n  function _runListeners(...params) {\n    for (const cb of Object.values(_listeners)) {\n      cb(...params);\n    }\n  }\n\n  const dbEventListener = callback => {\n    const currKey = '' + _listenerIndex++;\n    _listeners[currKey] = callback;\n    return () => {\n      delete _listeners[currKey];\n    };\n  };\n\n  const allCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"all\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n    _runListeners(DB_STATUS$1.PENDING, trx.type, EXECUTE_COUNT$1.ALL, tableName !== \"untable\" ? tableName : null);\n\n    try {\n      const res = await tokenPost(POST_TYPES$1.EASY_QB, trx);\n\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_all && g.analyticsEvent('db_all', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n\n        _runListeners(DB_STATUS$1.SUCCESS, trx.type, EXECUTE_COUNT$1.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS$1.ERROR, trx.type, EXECUTE_COUNT$1.ALL, tableName !== \"untable\" ? tableName : null);\n\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n\n      _runListeners(DB_STATUS$1.ERROR, trx.type, EXECUTE_COUNT$1.ALL, tableName !== \"untable\" ? tableName : null);\n\n      return [];\n    }\n  };\n\n  const oneCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"one\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n    _runListeners(DB_STATUS$1.PENDING, trx.type, EXECUTE_COUNT$1.ONE, tableName !== \"untable\" ? tableName : null);\n\n    try {\n      const res = await tokenPost(POST_TYPES$1.EASY_QB, trx);\n\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n\n        _runListeners(DB_STATUS$1.SUCCESS, trx.type, EXECUTE_COUNT$1.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS$1.ERROR, trx.type, EXECUTE_COUNT$1.ONE, tableName !== \"untable\" ? tableName : null);\n\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n\n      _runListeners(DB_STATUS$1.ERROR, trx.type, EXECUTE_COUNT$1.ONE, tableName !== \"untable\" ? tableName : null);\n\n      return {};\n    }\n  };\n\n  const db = (tableName, userAssociatedRecordsOnly) => {\n    if (tableName && typeof tableName === \"string\") {\n      return src({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: tableName.toUpperCase()\n      })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n    } else {\n      return src({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: \"untable\"\n      })(\"untable\");\n    }\n  };\n\n  return {\n    db,\n    dbEventListener,\n    e: src().e\n  };\n}\n\nconst t = \"insert\",\n      e = \"update\",\n      o = \"delete\",\n      n = Symbol.for(\"object-observer-meta-key-0\"),\n      r = {\n  async: 1\n},\n      s = {\n  [n]: {\n    value: null\n  },\n  observe: {\n    value: function (t, e) {\n      if (\"function\" != typeof t) throw new Error(`observer MUST be a function, got '${t}'`);\n      const o = this[n].observers;\n      o.some(e => e[0] === t) ? console.warn(\"observer may be bound to an observable only once; will NOT rebind\") : o.push([t, (t => {\n        if (!t || \"object\" != typeof t) return null;\n        const e = {},\n              o = [];\n\n        for (const [n, r] of Object.entries(t)) if (\"path\" === n) {\n          if (\"string\" != typeof r || \"\" === r) throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n          e[n] = r;\n        } else if (\"pathsOf\" === n) {\n          if (t.path) throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n          if (\"string\" != typeof r) throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n          e[n] = t.pathsOf.split(\".\").filter(Boolean);\n        } else if (\"pathsFrom\" === n) {\n          if (t.path || t.pathsOf) throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n          if (\"string\" != typeof r || \"\" === r) throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n          e[n] = r;\n        } else o.push(n);\n\n        if (o.length) throw new Error(`'${o.join(\", \")}' is/are not a valid observer option/s`);\n        return e;\n      })(e)]);\n    }\n  },\n  unobserve: {\n    value: function () {\n      const t = this[n].observers;\n      let e = t.length;\n\n      if (e) {\n        let o = arguments.length;\n        if (o) for (; o--;) {\n          let n = e;\n\n          for (; n--;) t[n][0] === arguments[o] && (t.splice(n, 1), e--);\n        } else t.splice(0);\n      }\n    }\n  }\n},\n      i = (t, e) => {\n  s[n].value = e;\n  const o = Object.defineProperties({}, s);\n\n  for (const [n, r] of Object.entries(t)) o[n] = u(r, n, e);\n\n  return o;\n},\n      h = (t, e) => {\n  let o = 0,\n      r = t.length;\n  s[n].value = e;\n  const i = Object.defineProperties(new Array(r), s);\n\n  for (; o < r; o++) i[o] = u(t[o], o, e);\n\n  return i;\n},\n      a = (t, e) => (s[n].value = e, Object.defineProperties(t, s), t),\n      l = (t, e) => {\n  let o = e;\n  if (t) if (t.path) {\n    const n = t.path;\n    o = e.filter(t => t.path.join(\".\") === n);\n  } else if (t.pathsOf) {\n    const n = t.pathsOf;\n    o = e.filter(t => t.path.length === n.length + 1 || t.path.length === n.length && (\"reverse\" === t.type || \"shuffle\" === t.type));\n  } else if (t.pathsFrom) {\n    const n = t.pathsFrom;\n    o = e.filter(t => t.path.join(\".\").startsWith(n));\n  }\n  return o;\n},\n      c = (t, e) => {\n  try {\n    t(e);\n  } catch (o) {\n    console.error(`failed to notify listener ${t} with ${e}`, o);\n  }\n},\n      f = function () {\n  const t = this.batches;\n  this.batches = null;\n\n  for (const [e, o] of t) c(e, o);\n},\n      p = (t, e) => {\n  let o,\n      n,\n      r,\n      s,\n      i,\n      h,\n      a,\n      p = t;\n  const u = e.length;\n\n  do {\n    for (i = (o = p.observers).length; i--;) if ([n, r] = o[i], (s = l(r, e)).length) if (p.options.async) {\n      let t;\n      p.batches || (p.batches = [], queueMicrotask(f.bind(p)));\n\n      for (const e of p.batches) if (e[0] === n) {\n        t = e;\n        break;\n      }\n\n      t || (t = [n, []], p.batches.push(t)), Array.prototype.push.apply(t[1], s);\n    } else c(n, s);\n\n    let t;\n\n    if (p.parent) {\n      t = new Array(u);\n\n      for (let o = 0; o < u; o++) a = e[o], h = [p.ownKey, ...a.path], t[o] = {\n        type: a.type,\n        path: h,\n        value: a.value,\n        oldValue: a.oldValue,\n        object: a.object\n      };\n\n      e = t, p = p.parent;\n    } else p = null;\n  } while (p);\n},\n      u = (t, e, o) => t && \"object\" == typeof t ? Array.isArray(t) ? new x({\n  target: t,\n  ownKey: e,\n  parent: o\n}).proxy : ArrayBuffer.isView(t) ? new M({\n  target: t,\n  ownKey: e,\n  parent: o\n}).proxy : t instanceof Date || t instanceof Blob || t instanceof Error ? t : new O({\n  target: t,\n  ownKey: e,\n  parent: o\n}).proxy : t,\n      y = function () {\n  const t = this[n],\n        e = t.target;\n  let o, r, s;\n\n  for (e.reverse(), o = 0, r = e.length; o < r; o++) if ((s = e[o]) && \"object\" == typeof s) {\n    const t = s[n];\n    t && (t.ownKey = o);\n  }\n\n  const i = [new j(\"reverse\", [], void 0, void 0, this)];\n  return p(t, i), this;\n},\n      b = function (t) {\n  const e = this[n],\n        o = e.target;\n  let r, s, i;\n\n  for (o.sort(t), r = 0, s = o.length; r < s; r++) if ((i = o[r]) && \"object\" == typeof i) {\n    const t = i[n];\n    t && (t.ownKey = r);\n  }\n\n  const h = [new j(\"shuffle\", [], void 0, void 0, this)];\n  return p(e, h), this;\n},\n      w = function (o, r, s) {\n  const i = this[n],\n        h = i.target,\n        a = [],\n        l = h.length,\n        c = h.slice(0);\n\n  if (r = void 0 === r ? 0 : r < 0 ? Math.max(l + r, 0) : Math.min(r, l), s = void 0 === s ? l : s < 0 ? Math.max(l + s, 0) : Math.min(s, l), r < l && s > r) {\n    let l;\n    h.fill(o, r, s);\n\n    for (let o, f, p = r; p < s; p++) o = h[p], h[p] = u(o, p, i), p in c ? ((f = c[p]) && \"object\" == typeof f && (l = f[n]) && (f = l.detach()), a.push(new j(e, [p], h[p], f, this))) : a.push(new j(t, [p], h[p], void 0, this));\n\n    p(i, a);\n  }\n\n  return this;\n},\n      d = function (t, o, r) {\n  const s = this[n],\n        i = s.target,\n        h = i.length;\n  t = t < 0 ? Math.max(h + t, 0) : t, o = void 0 === o ? 0 : o < 0 ? Math.max(h + o, 0) : Math.min(o, h), r = void 0 === r ? h : r < 0 ? Math.max(h + r, 0) : Math.min(r, h);\n  const a = Math.min(r - o, h - t);\n\n  if (t < h && t !== o && a > 0) {\n    const h = i.slice(0),\n          l = [];\n    i.copyWithin(t, o, r);\n\n    for (let o, r, c, f = t; f < t + a; f++) (o = i[f]) && \"object\" == typeof o && (o = u(o, f, s), i[f] = o), (r = h[f]) && \"object\" == typeof r && (c = r[n]) && (r = c.detach()), \"object\" != typeof o && o === r || l.push(new j(e, [f], o, r, this));\n\n    p(s, l);\n  }\n\n  return this;\n},\n      v = {\n  pop: function () {\n    const t = this[n],\n          e = t.target,\n          r = e.length - 1;\n    let s = e.pop();\n\n    if (s && \"object\" == typeof s) {\n      const t = s[n];\n      t && (s = t.detach());\n    }\n\n    const i = [new j(o, [r], void 0, s, this)];\n    return p(t, i), s;\n  },\n  push: function () {\n    const e = this[n],\n          o = e.target,\n          r = arguments.length,\n          s = new Array(r),\n          i = o.length;\n\n    for (let t = 0; t < r; t++) s[t] = u(arguments[t], i + t, e);\n\n    const h = Reflect.apply(o.push, o, s),\n          a = [];\n\n    for (let e = i, n = o.length; e < n; e++) a[e - i] = new j(t, [e], o[e], void 0, this);\n\n    return p(e, a), h;\n  },\n  shift: function () {\n    const t = this[n],\n          e = t.target;\n    let r, s, i, h, a;\n\n    for ((r = e.shift()) && \"object\" == typeof r && (a = r[n]) && (r = a.detach()), s = 0, i = e.length; s < i; s++) (h = e[s]) && \"object\" == typeof h && (a = h[n]) && (a.ownKey = s);\n\n    const l = [new j(o, [0], void 0, r, this)];\n    return p(t, l), r;\n  },\n  unshift: function () {\n    const e = this[n],\n          o = e.target,\n          r = arguments.length,\n          s = new Array(r);\n\n    for (let t = 0; t < r; t++) s[t] = u(arguments[t], t, e);\n\n    const i = Reflect.apply(o.unshift, o, s);\n\n    for (let t, e = 0, r = o.length; e < r; e++) if ((t = o[e]) && \"object\" == typeof t) {\n      const o = t[n];\n      o && (o.ownKey = e);\n    }\n\n    const h = s.length,\n          a = new Array(h);\n\n    for (let e = 0; e < h; e++) a[e] = new j(t, [e], o[e], void 0, this);\n\n    return p(e, a), i;\n  },\n  reverse: y,\n  sort: b,\n  fill: w,\n  copyWithin: d,\n  splice: function () {\n    const r = this[n],\n          s = r.target,\n          i = arguments.length,\n          h = new Array(i),\n          a = s.length;\n\n    for (let t = 0; t < i; t++) h[t] = u(arguments[t], t, r);\n\n    const l = 0 === i ? 0 : h[0] < 0 ? a + h[0] : h[0],\n          c = i < 2 ? a - l : h[1],\n          f = Math.max(i - 2, 0),\n          y = Reflect.apply(s.splice, s, h),\n          b = s.length;\n    let w, d, v, g;\n\n    for (let t, e = 0; e < b; e++) (t = s[e]) && \"object\" == typeof t && (w = t[n]) && (w.ownKey = e);\n\n    for (d = 0, v = y.length; d < v; d++) (g = y[d]) && \"object\" == typeof g && (w = g[n]) && (y[d] = w.detach());\n\n    const m = [];\n    let O;\n\n    for (O = 0; O < c; O++) O < f ? m.push(new j(e, [l + O], s[l + O], y[O], this)) : m.push(new j(o, [l + O], void 0, y[O], this));\n\n    for (; O < f; O++) m.push(new j(t, [l + O], s[l + O], void 0, this));\n\n    return p(r, m), y;\n  }\n},\n      g = {\n  reverse: y,\n  sort: b,\n  fill: w,\n  copyWithin: d,\n  set: function (t, o) {\n    const r = this[n],\n          s = r.target,\n          i = t.length,\n          h = s.slice(0);\n    o = o || 0, s.set(t, o);\n    const a = new Array(i);\n\n    for (let t = o; t < i + o; t++) a[t - o] = new j(e, [t], s[t], h[t], this);\n\n    p(r, a);\n  }\n};\n\nclass j {\n  constructor(t, e, o, n, r) {\n    this.type = t, this.path = e, this.value = o, this.oldValue = n, this.object = r;\n  }\n\n}\n\nclass m {\n  constructor(t, e) {\n    const {\n      target: o,\n      parent: n,\n      ownKey: r\n    } = t;\n    n && void 0 !== r ? (this.parent = n, this.ownKey = r) : (this.parent = null, this.ownKey = null);\n    const s = e(o, this);\n    this.observers = [], this.revocable = Proxy.revocable(s, this), this.proxy = this.revocable.proxy, this.target = s, this.options = this.processOptions(t.options);\n  }\n\n  processOptions(t) {\n    if (t) {\n      if (\"object\" != typeof t) throw new Error(`Observable options if/when provided, MAY only be an object, got '${t}'`);\n      const e = Object.keys(t).filter(t => !(t in r));\n      if (e.length) throw new Error(`'${e.join(\", \")}' is/are not a valid Observable option/s`);\n      return Object.assign({}, t);\n    }\n\n    return {};\n  }\n\n  detach() {\n    return this.parent = null, this.target;\n  }\n\n  set(o, r, s) {\n    let i = o[r];\n\n    if (s !== i) {\n      const h = u(s, r, this);\n\n      if (o[r] = h, i && \"object\" == typeof i) {\n        const t = i[n];\n        t && (i = t.detach());\n      }\n\n      const a = void 0 === i ? [new j(t, [r], h, void 0, this.proxy)] : [new j(e, [r], h, i, this.proxy)];\n      p(this, a);\n    }\n\n    return !0;\n  }\n\n  deleteProperty(t, e) {\n    let r = t[e];\n\n    if (delete t[e], r && \"object\" == typeof r) {\n      const t = r[n];\n      t && (r = t.detach());\n    }\n\n    const s = [new j(o, [e], void 0, r, this.proxy)];\n    return p(this, s), !0;\n  }\n\n}\n\nclass O extends m {\n  constructor(t) {\n    super(t, i);\n  }\n\n}\n\nclass x extends m {\n  constructor(t) {\n    super(t, h);\n  }\n\n  get(t, e) {\n    return v[e] || t[e];\n  }\n\n}\n\nclass M extends m {\n  constructor(t) {\n    super(t, a);\n  }\n\n  get(t, e) {\n    return g[e] || t[e];\n  }\n\n}\n\nconst A = Object.freeze({\n  from: (t, e) => {\n    if (t && \"object\" == typeof t) {\n      if (t[n]) return t;\n      if (Array.isArray(t)) return new x({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n      if (ArrayBuffer.isView(t)) return new M({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n      if (t instanceof Date || t instanceof Blob || t instanceof Error) throw new Error(`${t} found to be one of a on-observable types`);\n      return new O({\n        target: t,\n        ownKey: null,\n        parent: null,\n        options: e\n      }).proxy;\n    }\n\n    throw new Error(\"observable MAY ONLY be created from a non-null object\");\n  },\n  isObservable: t => !(!t || !t[n])\n});\n\nconst cache = require(\"./cache\");\n\nlet _isFrameInitialized = true;\nlet _frameConfiguration = {\n  offset: 0,\n  limit: 0\n};\n\nlet _effect = () => () => {};\n\nlet _signInCallback;\n\nconst _observedChangeStack = [];\n\nlet _recordIdMap = new WeakMap();\n\nlet _proxyRecordMap = new WeakMap();\n\nconst EasybaseProvider = ({\n  children,\n  ebconfig,\n  options\n}) => {\n  if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n    console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n    return React__default.createElement(Fragment, null, children);\n  } else if (!ebconfig.integration) {\n    console.error(\"Invalid ebconfig object passed. Download ebconfig.json from Easybase.io and try again.\");\n    return React__default.createElement(Fragment, null, children);\n  }\n\n  const [mounted, setMounted] = useState(false);\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [userSignedIn, setUserSignedIn] = useState(false);\n  const [_frame, _setFrame] = useState([]);\n  const [_observableFrame, _setObservableFrame] = useState({\n    observe: () => {},\n    unobserve: () => {}\n  });\n\n  const _ranSignInCallback = useRef(false); // TODO: useRef vs useState({})\n\n\n  const g = useRef(gFactory({\n    ebconfig,\n    options\n  })).current;\n  const {\n    initAuth,\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    resetUserPassword,\n    signIn,\n    signOut,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  } = useRef(authFactory(g)).current;\n  const {\n    log\n  } = useRef(utilsFactory(g)).current;\n  const {\n    Query,\n    fullTableSize,\n    tableTypes\n  } = useRef(tableFactory(g)).current;\n  const {\n    db,\n    dbEventListener,\n    e\n  } = useRef(dbFactory(g)).current;\n  useEffect(() => {\n    const mount = async () => {\n      // eslint-disable-next-line dot-notation\n      const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n      if (isIE) {\n        console.error(\"EASYBASE â€” easybase-react does not support Internet Explorer. Please use a different browser.\");\n      }\n\n      g.instance = typeof navigator !== 'undefined' && navigator.product === 'ReactNative' ? \"React Native\" : \"React\";\n\n      if (options != null && options.googleAnalyticsId) {\n        if (options.googleAnalyticsId.startsWith(\"G-\")) {\n          if (g.instance === \"React\") {\n            const {\n              GA4React\n            } = await import('./ga-4-react.esm-a020cb83.js');\n            const ga4ReactLoader = new GA4React(options.googleAnalyticsId);\n\n            try {\n              const ga4React = await ga4ReactLoader.initialize();\n\n              g.analyticsEvent = (eventTitle, params) => ga4React.gtag('event', eventTitle, params);\n\n              g.analyticsIdentify = hashedUserId => ga4React.gtag('config', options.googleAnalyticsId, {\n                user_id: hashedUserId\n              });\n\n              g.analyticsEnabled = true;\n\n              if (window.location.hash) {\n                // Using hash router - https://github.com/unrealmanu/ga-4-react/issues/15\n                window.onhashchange = () => {\n                  ga4React.pageview(window.location.hash);\n                };\n              }\n            } catch (error) {\n              log(\"Analytics initialization error: \", error);\n            }\n          } else if (g.instance === \"React Native\") {\n            if (options.googleAnalyticsSecret) {\n              const genUUID = () => {\n                // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n                let dt = new Date().getTime();\n                const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  const r = (dt + Math.random() * 16) % 16 | 0;\n                  dt = Math.floor(dt / 16);\n                  return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n                });\n                return uuid;\n              };\n\n              let _userIdHash;\n\n              const _mockDeviceId = genUUID(); // Mocking a 'pageview'\n\n\n              fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                  client_id: _mockDeviceId,\n                  events: [{\n                    name: 'select_content'\n                  }]\n                })\n              });\n\n              g.analyticsEvent = (eventTitle, params) => fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                  client_id: _mockDeviceId,\n                  user_id: _userIdHash,\n                  events: [{\n                    name: eventTitle,\n                    params\n                  }]\n                })\n              });\n\n              g.analyticsIdentify = hashedUserId => {\n                _userIdHash = hashedUserId;\n              };\n\n              g.analyticsEnabled = true;\n            } else {\n              console.error(\"EASYBASE â€” React Native analytics requires the presence of 'googleAnalyticsSecret'. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create\");\n            }\n          }\n        } else if (options.googleAnalyticsId.startsWith(\"UA-\")) {\n          console.error(\"EASYBASE â€” Detected Universal Analytics tag in googleAnalyticsId parameter. This version is not supported â€“Â please update to Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n        } else {\n          console.error(\"EASYBASE â€” Unknown googleAnalyticsId version parameter. Please use Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n        }\n      }\n\n      if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n        const t1 = Date.now();\n        log(\"mounting...\");\n        await initAuth();\n        const res = await tokenPost(POST_TYPES$2.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n\n        if (res.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          setMounted(true);\n        }\n      } else {\n        g.mounted = true; // Bypass initAuth()\n\n        const cookieName = g.ebconfig.integration.slice(-10);\n        const {\n          cacheToken,\n          cacheRefreshToken,\n          cacheSession\n        } = await cache.getCacheTokens(cookieName);\n\n        if (cacheRefreshToken) {\n          g.token = cacheToken;\n          g.refreshToken = cacheRefreshToken;\n          g.session = +cacheSession;\n          const fallbackMount = setTimeout(() => {\n            setMounted(true);\n          }, 2500);\n          const [refreshTokenRes, {\n            hash\n          }, {\n            fromUtf8\n          }] = await Promise.all([tokenPost(POST_TYPES$2.REQUEST_TOKEN, {\n            refreshToken: g.refreshToken,\n            token: g.token,\n            getUserID: true\n          }), import('./sha256-cbcfc640.js').then(function (n) {\n            return n.s;\n          }), import('./index-66c37f86.js')]);\n\n          if (refreshTokenRes.success) {\n            clearTimeout(fallbackMount);\n            g.token = refreshTokenRes.data.token;\n            g.userID = refreshTokenRes.data.userID;\n\n            if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n              const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + refreshTokenRes.data.userID));\n              const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n              g.analyticsIdentify(hexHash);\n              g.analyticsEvent('login', {\n                method: \"Easybase\"\n              });\n            }\n\n            await cache.setCacheTokens(g, cookieName);\n            setUserSignedIn(true);\n          } else {\n            cache.clearCacheTokens(cookieName);\n          }\n        }\n\n        setMounted(true);\n      }\n    };\n\n    mount();\n  }, []);\n\n  const useFrameEffect = effect => {\n    _effect = effect;\n  };\n\n  useEffect(() => {\n    if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n      _signInCallback();\n\n      _ranSignInCallback.current = true;\n    }\n  }, [userSignedIn]);\n\n  const onSignIn = callback => {\n    _signInCallback = callback;\n\n    if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n      _signInCallback();\n\n      _ranSignInCallback.current = true;\n    }\n  };\n\n  useEffect(() => {\n    _observableFrame.observe(allChanges => {\n      allChanges.forEach(change => {\n        _observedChangeStack.push({\n          type: change.type,\n          path: change.path,\n          value: change.value,\n          _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n        });\n\n        log(JSON.stringify({\n          type: change.type,\n          path: change.path,\n          value: change.value,\n          _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n        }));\n      });\n    });\n\n    _proxyRecordMap = new WeakMap();\n\n    _frame.forEach((_, i) => _proxyRecordMap.set(_observableFrame[i], \"\" + i));\n\n    _effect(); // call useFrameEffect\n\n  }, [_observableFrame]);\n  useEffect(() => {\n    _observableFrame.unobserve();\n\n    _setObservableFrame(A.from(_frame));\n  }, [_frame]);\n\n  function Frame(index) {\n    if (typeof index === \"number\") {\n      return _observableFrame[index];\n    } else {\n      return _observableFrame;\n    }\n  }\n\n  const _recordIDExists = record => !!_recordIdMap.get(record) || !!_recordIdMap.get(_getRawRecordFromProxy(record) || {});\n\n  const _getRawRecordFromProxy = proxyRecord => _proxyRecordMap.get(proxyRecord) ? _frame[+_proxyRecordMap.get(proxyRecord)] : undefined;\n\n  const configureFrame = options => {\n    _frameConfiguration = _extends$1({}, _frameConfiguration);\n    if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n    if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n    if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n    _isFrameInitialized = false;\n    return {\n      message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n      success: true\n    };\n  };\n\n  const currentConfiguration = () => _extends$1({}, _frameConfiguration);\n\n  const addRecord = async options => {\n    const defaultValues = {\n      insertAtEnd: false,\n      newRecord: {},\n      tableName: undefined\n    };\n\n    const fullOptions = _extends$1({}, defaultValues, options);\n\n    try {\n      const res = await tokenPost(POST_TYPES$2.SYNC_INSERT, fullOptions);\n      return {\n        message: res.data,\n        success: res.success\n      };\n    } catch (err) {\n      console.error(\"Easybase Error: addRecord failed \", err);\n      return {\n        message: \"Easybase Error: addRecord failed \" + err,\n        success: false,\n        errorCode: err\n      };\n    }\n  };\n\n  const deleteRecord = async options => {\n    const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => fastDeepEqual(ele, options.record));\n\n    if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n      const res = await tokenPost(POST_TYPES$2.SYNC_DELETE, {\n        _id: _recordIdMap.get(_frameRecord),\n        tableName: options.tableName\n      });\n      return {\n        success: res.success,\n        message: res.data\n      };\n    } else {\n      try {\n        const res = await tokenPost(POST_TYPES$2.SYNC_DELETE, {\n          record: options.record,\n          tableName: options.tableName\n        });\n        return {\n          success: res.success,\n          message: res.data\n        };\n      } catch (error) {\n        console.error(\"Easybase Error: deleteRecord failed \", error);\n        return {\n          success: false,\n          message: \"Easybase Error: deleteRecord failed \" + error,\n          errorCode: error.errorCode || undefined\n        };\n      }\n    }\n  }; // Only allow the deletion of one element at a time\n  // First handle shifting of the array size. Then iterate\n\n\n  const sync = async () => {\n    const _realignFrames = newData => {\n      let isNewDataTheSame = true;\n\n      if (newData.length !== _frame.length) {\n        isNewDataTheSame = false;\n      } else {\n        for (let i = 0; i < newData.length; i++) {\n          const newDataNoId = _extends$1({}, newData[i]);\n\n          delete newDataNoId._id;\n\n          if (!fastDeepEqual(newDataNoId, _frame[i])) {\n            isNewDataTheSame = false;\n            break;\n          }\n        }\n      }\n\n      if (!isNewDataTheSame) {\n        _recordIdMap = new WeakMap();\n        _frame.length = newData.length;\n        newData.forEach((currNewEle, i) => {\n          _frame[i] = currNewEle;\n\n          _recordIdMap.set(currNewEle, currNewEle._id);\n\n          delete currNewEle._id;\n        });\n\n        _setFrame([..._frame]);\n      }\n    };\n\n    if (isSyncing) {\n      return {\n        success: false,\n        message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n      };\n    }\n\n    setIsSyncing(true);\n\n    if (_isFrameInitialized) {\n      if (_observedChangeStack.length > 0) {\n        log(\"Stack change: \", _observedChangeStack);\n        const res = await tokenPost(POST_TYPES$2.SYNC_STACK, _extends$1({\n          stack: _observedChangeStack\n        }, _frameConfiguration));\n\n        if (res.success) {\n          _observedChangeStack.length = 0;\n        }\n      }\n    }\n\n    try {\n      const res = await tokenPost(POST_TYPES$2.GET_FRAME, _frameConfiguration); // Check if the array received from db is the same as frame\n      // If not, update it and send useFrameEffect\n\n      if (res.success === false) {\n        console.error(res.data);\n        setIsSyncing(false);\n        return {\n          success: false,\n          message: \"\" + res.data\n        };\n      } else {\n        _isFrameInitialized = true;\n\n        _realignFrames(res.data);\n\n        setIsSyncing(false);\n        return {\n          message: 'Success. Call frame for data',\n          success: true\n        };\n      }\n    } catch (error) {\n      console.error(\"Easybase Error: get failed \", error);\n      setIsSyncing(false);\n      return {\n        success: false,\n        message: \"Easybase Error: get failed \" + error,\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const updateRecordImage = async options => {\n    const res = await _updateRecordAttachment(options, \"image\");\n    return res;\n  };\n\n  const updateRecordVideo = async options => {\n    const res = await _updateRecordAttachment(options, \"video\");\n    return res;\n  };\n\n  const updateRecordFile = async options => {\n    const res = await _updateRecordAttachment(options, \"file\");\n    return res;\n  };\n\n  const _updateRecordAttachment = async (options, type) => {\n    const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => fastDeepEqual(ele, options.record));\n\n    if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n      log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n      return {\n        success: false,\n        message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n      };\n    }\n\n    const ext = options.attachment.name.split(\".\").pop().toLowerCase();\n    log(ext);\n\n    if (type === \"image\" && !imageExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Image files must have a proper image extension in the file name\"\n      };\n    }\n\n    if (type === \"video\" && !videoExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Video files must have a proper video extension in the file name\"\n      };\n    }\n\n    function isFileFromURI(f) {\n      return f.uri !== undefined;\n    }\n\n    const formData = new FormData();\n\n    if (isFileFromURI(options.attachment)) {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    } else {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    }\n\n    const customHeaders = {\n      'Eb-upload-type': type,\n      'Eb-column-name': options.columnName,\n      'Eb-record-id': _recordIdMap.get(_frameRecord),\n      'Eb-table-name': options.tableName\n    };\n    const res = await tokenPostAttachment(formData, customHeaders);\n    await sync();\n    return {\n      message: res.data,\n      success: res.success\n    };\n  };\n\n  const isUserSignedIn = () => userSignedIn;\n\n  g.newTokenCallback = () => {\n    const cookieName = g.ebconfig.integration.slice(-10);\n\n    if (!g.token) {\n      // User signed out\n      cache.clearCacheTokens(cookieName).then(_ => {\n        setUserSignedIn(false);\n        _ranSignInCallback.current = false;\n      });\n    } else {\n      // User signed in or refreshed token\n      cache.setCacheTokens(g, cookieName).then(_ => {\n        setUserSignedIn(true);\n      });\n    }\n  };\n\n  const useReturn = (dbInstance, deps) => {\n    // eslint-disable-next-line no-extra-parens\n    const [unsubscribe, setUnsubscribe] = useState(() => () => {});\n    const [frame, setFrame] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [dead, setDead] = useState(false);\n\n    const doFetch = async () => {\n      setLoading(true);\n\n      try {\n        const res = await dbInstance().all();\n\n        if (Array.isArray(res)) {\n          setFrame(res);\n        }\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    };\n\n    useEffect(() => {\n      let isAlive = true;\n\n      if (!dead) {\n        const _instanceTableName = dbInstance()._tableName;\n\n        unsubscribe(\"true\");\n\n        const _listener = dbEventListener((status, queryType, executeCount, tableName, returned) => {\n          if (!isAlive) {\n            return;\n          }\n\n          log(_instanceTableName, status, queryType, executeCount, tableName);\n\n          if (tableName === null && _instanceTableName === \"untable\" || tableName === _instanceTableName) {\n            if (status === DB_STATUS$2.SUCCESS && queryType !== \"select\") {\n              if (typeof returned === \"number\" && returned > 0) {\n                doFetch();\n              } else if (Array.isArray(returned) && typeof returned[0] === \"number\" && returned[0] > 0) {\n                doFetch();\n              }\n            }\n          }\n        });\n\n        setUnsubscribe(() => stayAlive => {\n          _listener();\n\n          stayAlive !== \"true\" && setDead(true);\n        });\n        doFetch();\n      }\n\n      return () => {\n        isAlive = false;\n      };\n    }, deps || []);\n    return {\n      frame,\n      unsubscribe,\n      error,\n      manualFetch: doFetch,\n      loading\n    };\n  };\n\n  const c = {\n    configureFrame,\n    addRecord,\n    deleteRecord,\n    sync,\n    updateRecordImage,\n    updateRecordVideo,\n    updateRecordFile,\n    Frame,\n    useFrameEffect,\n    fullTableSize,\n    tableTypes,\n    currentConfiguration,\n    Query,\n    signIn,\n    signOut,\n    isUserSignedIn,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    resetUserPassword,\n    onSignIn,\n    db,\n    dbEventListener,\n    e,\n    useReturn,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n  return React__default.createElement(EasybaseContext.Provider, {\n    value: c\n  }, mounted && children);\n};\n\nconst useEasybase = () => {\n  const easybase = useContext(EasybaseContext);\n  return easybase;\n};\n\nconst Auth = lazy(() => import('./Auth-016a6bca.js').then(function (n) {\n  return n.A;\n}));\n\nfunction index(props) {\n  return React__default.createElement(Suspense, {\n    fallback: React__default.createElement(Fragment, null)\n  }, React__default.createElement(Auth, Object.assign({}, props)));\n}\n/**\r\n * Note that this wrapper component exists to force code-splitting\r\n */\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar POST_TYPES;\n\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES || (POST_TYPES = {}));\n\nvar DB_STATUS;\n\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS || (DB_STATUS = {}));\n\nvar EXECUTE_COUNT;\n\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT || (EXECUTE_COUNT = {}));\n\nvar GlobalNamespace;\n\n(function (GlobalNamespace) {})(GlobalNamespace || (GlobalNamespace = {}));\n\n_extends({}, GlobalNamespace);\n\nconst INSERT = 'insert',\n      UPDATE = 'update',\n      DELETE = 'delete',\n      REVERSE = 'reverse',\n      SHUFFLE = 'shuffle',\n      oMetaKey = Symbol('observable-meta-key'),\n      validObservableOptionKeys = {\n  async: 1\n},\n      validObserverOptionKeys = {\n  path: 1,\n  pathsOf: 1,\n  pathsFrom: 1\n},\n      processObserveOptions = function processObserveOptions(options) {\n  const result = {};\n\n  if (options.path !== undefined) {\n    if (typeof options.path !== 'string' || options.path === '') {\n      throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.path = options.path;\n  }\n\n  if (options.pathsOf !== undefined) {\n    if (options.path) {\n      throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n    }\n\n    if (typeof options.pathsOf !== 'string') {\n      throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n    }\n\n    result.pathsOf = options.pathsOf.split('.').filter(n => n);\n  }\n\n  if (options.pathsFrom !== undefined) {\n    if (options.path || options.pathsOf) {\n      throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n    }\n\n    if (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n      throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.pathsFrom = options.pathsFrom;\n  }\n\n  const invalidOptions = Object.keys(options).filter(option => !validObserverOptionKeys.hasOwnProperty(option));\n\n  if (invalidOptions.length) {\n    throw new Error(`'${invalidOptions.join(', ')}' is/are not a valid observer option/s`);\n  }\n\n  return result;\n},\n      observe = function observe(observer, options) {\n  if (typeof observer !== 'function') {\n    throw new Error(`observer MUST be a function, got '${observer}'`);\n  }\n\n  const oMeta = this[oMetaKey],\n        observers = oMeta.observers;\n\n  if (!observers.some(o => o[0] === observer)) {\n    let opts;\n\n    if (options) {\n      opts = processObserveOptions(options);\n    } else {\n      opts = {};\n    }\n\n    observers.push([observer, opts]);\n  } else {\n    console.warn('observer may be bound to an observable only once; will NOT rebind');\n  }\n},\n      unobserve = function unobserve() {\n  const oMeta = this[oMetaKey];\n  const observers = oMeta.observers;\n  let ol = observers.length;\n\n  if (ol) {\n    let al = arguments.length;\n\n    if (al) {\n      while (al--) {\n        let i = ol;\n\n        while (i--) {\n          if (observers[i][0] === arguments[al]) {\n            observers.splice(i, 1);\n            ol--;\n          }\n        }\n      }\n    } else {\n      observers.splice(0);\n    }\n  }\n},\n      propertiesBluePrint = {\n  [oMetaKey]: {\n    value: null\n  },\n  observe: {\n    value: observe\n  },\n  unobserve: {\n    value: unobserve\n  }\n},\n      prepareObject = function prepareObject(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  const target = Object.defineProperties({}, propertiesBluePrint);\n\n  for (const key of Object.keys(source)) {\n    target[key] = getObservedOf(source[key], key, oMeta);\n  }\n\n  return target;\n},\n      prepareArray = function prepareArray(source, oMeta) {\n  let i = 0,\n      l = source.length;\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  const target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\n  for (; i < l; i++) {\n    target[i] = getObservedOf(source[i], i, oMeta);\n  }\n\n  return target;\n},\n      prepareTypedArray = function prepareTypedArray(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  Object.defineProperties(source, propertiesBluePrint);\n  return source;\n},\n      filterChanges = function filterChanges(options, changes) {\n  let result = changes;\n\n  if (options.path) {\n    const oPath = options.path;\n    result = changes.filter(change => change.path.join('.') === oPath);\n  } else if (options.pathsOf) {\n    const oPathsOf = options.pathsOf;\n    result = changes.filter(change => change.path.length === oPathsOf.length + 1 || change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE));\n  } else if (options.pathsFrom) {\n    const oPathsFrom = options.pathsFrom;\n    result = changes.filter(change => change.path.join('.').startsWith(oPathsFrom));\n  }\n\n  return result;\n},\n      callObserverSafe = function callObserverSafe(listener, changes) {\n  try {\n    listener(changes);\n  } catch (e) {\n    console.error(`failed to notify listener ${listener} with ${changes}`, e);\n  }\n},\n      callObserversFromMT = function callObserversFromMT() {\n  const batches = this.batches;\n  this.batches = null;\n\n  for (const [listener, options] of batches) {\n    callObserverSafe(listener, options);\n  }\n},\n      callObservers = function callObservers(oMeta, changes) {\n  let currentObservable = oMeta;\n  let observers, target, options, relevantChanges, i, newPath, tmp;\n  const l = changes.length;\n\n  do {\n    observers = currentObservable.observers;\n    i = observers.length;\n\n    while (i--) {\n      [target, options] = observers[i];\n      relevantChanges = filterChanges(options, changes);\n\n      if (relevantChanges.length) {\n        if (currentObservable.options.async) {\n          //\tthis is the async dispatch handling\n          if (!currentObservable.batches) {\n            currentObservable.batches = [];\n            queueMicrotask(callObserversFromMT.bind(currentObservable));\n          }\n\n          let rb = currentObservable.batches.find(b => b[0] === target);\n\n          if (!rb) {\n            rb = [target, []];\n            currentObservable.batches.push(rb);\n          }\n\n          Array.prototype.push.apply(rb[1], relevantChanges);\n        } else {\n          //\tthis is the naive straight forward synchronous dispatch\n          callObserverSafe(target, relevantChanges);\n        }\n      }\n    }\n\n    let tmpa;\n\n    if (currentObservable.parent) {\n      tmpa = new Array(l);\n\n      for (let _i = 0; _i < l; _i++) {\n        tmp = changes[_i];\n        newPath = [currentObservable.ownKey, ...tmp.path];\n        tmpa[_i] = {\n          type: tmp.type,\n          path: newPath,\n          value: tmp.value,\n          oldValue: tmp.oldValue,\n          object: tmp.object\n        };\n      }\n\n      changes = tmpa;\n      currentObservable = currentObservable.parent;\n    } else {\n      currentObservable = null;\n    }\n  } while (currentObservable);\n},\n      getObservedOf = function getObservedOf(item, key, parent) {\n  if (!item || typeof item !== 'object') {\n    return item;\n  } else if (Array.isArray(item)) {\n    return new ArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (ArrayBuffer.isView(item)) {\n    return new TypedArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (item instanceof Date || item instanceof Error) {\n    return item;\n  } else {\n    return new ObjectOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  }\n},\n      proxiedPop = function proxiedPop() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        poppedIndex = target.length - 1;\n  let popResult = target.pop();\n\n  if (popResult && typeof popResult === 'object') {\n    const tmpObserved = popResult[oMetaKey];\n\n    if (tmpObserved) {\n      popResult = tmpObserved.detach();\n    }\n  }\n\n  const changes = [{\n    type: DELETE,\n    path: [poppedIndex],\n    oldValue: popResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return popResult;\n},\n      proxiedPush = function proxiedPush() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        l = arguments.length,\n        pushContent = new Array(l),\n        initialLength = target.length;\n\n  for (let i = 0; i < l; i++) {\n    pushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n  }\n\n  const pushResult = Reflect.apply(target.push, target, pushContent);\n  const changes = [];\n\n  for (let i = initialLength, _l = target.length; i < _l; i++) {\n    changes[i - initialLength] = {\n      type: INSERT,\n      path: [i],\n      value: target[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return pushResult;\n},\n      proxiedShift = function proxiedShift() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let shiftResult, i, l, item, tmpObserved;\n  shiftResult = target.shift();\n\n  if (shiftResult && typeof shiftResult === 'object') {\n    tmpObserved = shiftResult[oMetaKey];\n\n    if (tmpObserved) {\n      shiftResult = tmpObserved.detach();\n    }\n  } //\tupdate indices of the remaining items\n\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: DELETE,\n    path: [0],\n    oldValue: shiftResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return shiftResult;\n},\n      proxiedUnshift = function proxiedUnshift() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        al = arguments.length,\n        unshiftContent = new Array(al);\n\n  for (let i = 0; i < al; i++) {\n    unshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n  }\n\n  const unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n  for (let i = 0, _l2 = target.length, item; i < _l2; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  } //\tpublish changes\n\n\n  const l = unshiftContent.length;\n  const changes = new Array(l);\n\n  for (let i = 0; i < l; i++) {\n    changes[i] = {\n      type: INSERT,\n      path: [i],\n      value: target[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return unshiftResult;\n},\n      proxiedReverse = function proxiedReverse() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let i, l, item;\n  target.reverse();\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: REVERSE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n      proxiedSort = function proxiedSort(comparator) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let i, l, item;\n  target.sort(comparator);\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: SHUFFLE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n      proxiedFill = function proxiedFill(filVal, start, end) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        changes = [],\n        tarLen = target.length,\n        prev = target.slice(0);\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n\n  if (start < tarLen && end > start) {\n    target.fill(filVal, start, end);\n    let tmpObserved;\n\n    for (let i = start, item, tmpTarget; i < end; i++) {\n      item = target[i];\n      target[i] = getObservedOf(item, i, oMeta);\n\n      if (prev.hasOwnProperty(i)) {\n        tmpTarget = prev[i];\n\n        if (tmpTarget && typeof tmpTarget === 'object') {\n          tmpObserved = tmpTarget[oMetaKey];\n\n          if (tmpObserved) {\n            tmpTarget = tmpObserved.detach();\n          }\n        }\n\n        changes.push({\n          type: UPDATE,\n          path: [i],\n          value: target[i],\n          oldValue: tmpTarget,\n          object: this\n        });\n      } else {\n        changes.push({\n          type: INSERT,\n          path: [i],\n          value: target[i],\n          object: this\n        });\n      }\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n      proxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        tarLen = target.length;\n  dest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n  const len = Math.min(end - start, tarLen - dest);\n\n  if (dest < tarLen && dest !== start && len > 0) {\n    const prev = target.slice(0),\n          changes = [];\n    target.copyWithin(dest, start, end);\n\n    for (let i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n      //\tupdate newly placed observables, if any\n      nItem = target[i];\n\n      if (nItem && typeof nItem === 'object') {\n        nItem = getObservedOf(nItem, i, oMeta);\n        target[i] = nItem;\n      } //\tdetach overridden observables, if any\n\n\n      oItem = prev[i];\n\n      if (oItem && typeof oItem === 'object') {\n        tmpObserved = oItem[oMetaKey];\n\n        if (tmpObserved) {\n          oItem = tmpObserved.detach();\n        }\n      }\n\n      if (typeof nItem !== 'object' && nItem === oItem) {\n        continue;\n      }\n\n      changes.push({\n        type: UPDATE,\n        path: [i],\n        value: nItem,\n        oldValue: oItem,\n        object: this\n      });\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n      proxiedSplice = function proxiedSplice() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        splLen = arguments.length,\n        spliceContent = new Array(splLen),\n        tarLen = target.length; //\tobservify the newcomers\n\n  for (let _i2 = 0; _i2 < splLen; _i2++) {\n    spliceContent[_i2] = getObservedOf(arguments[_i2], _i2, oMeta);\n  } //\tcalculate pointers\n\n\n  const startIndex = splLen === 0 ? 0 : spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0],\n        removed = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n        inserted = Math.max(splLen - 2, 0),\n        spliceResult = Reflect.apply(target.splice, target, spliceContent),\n        newTarLen = target.length; //\treindex the paths\n\n  let tmpObserved;\n\n  for (let _i3 = 0, _item; _i3 < newTarLen; _i3++) {\n    _item = target[_i3];\n\n    if (_item && typeof _item === 'object') {\n      tmpObserved = _item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = _i3;\n      }\n    }\n  } //\tdetach removed objects\n\n\n  let i, l, item;\n\n  for (i = 0, l = spliceResult.length; i < l; i++) {\n    item = spliceResult[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        spliceResult[i] = tmpObserved.detach();\n      }\n    }\n  }\n\n  const changes = [];\n  let index;\n\n  for (index = 0; index < removed; index++) {\n    if (index < inserted) {\n      changes.push({\n        type: UPDATE,\n        path: [startIndex + index],\n        value: target[startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    } else {\n      changes.push({\n        type: DELETE,\n        path: [startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    }\n  }\n\n  for (; index < inserted; index++) {\n    changes.push({\n      type: INSERT,\n      path: [startIndex + index],\n      value: target[startIndex + index],\n      object: this\n    });\n  }\n\n  callObservers(oMeta, changes);\n  return spliceResult;\n},\n      proxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        souLen = source.length,\n        prev = target.slice(0);\n  offset = offset || 0;\n  target.set(source, offset);\n  const changes = new Array(souLen);\n\n  for (let i = offset; i < souLen + offset; i++) {\n    changes[i - offset] = {\n      type: UPDATE,\n      path: [i],\n      value: target[i],\n      oldValue: prev[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n},\n      proxiedArrayMethods = {\n  pop: proxiedPop,\n  push: proxiedPush,\n  shift: proxiedShift,\n  unshift: proxiedUnshift,\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  splice: proxiedSplice\n},\n      proxiedTypedArrayMethods = {\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  set: proxiedTypedArraySet\n};\n\nclass OMetaBase {\n  constructor(properties, cloningFunction) {\n    const {\n      target,\n      parent,\n      ownKey\n    } = properties;\n\n    if (parent && ownKey !== undefined) {\n      this.parent = parent;\n      this.ownKey = ownKey;\n    } else {\n      this.parent = null;\n      this.ownKey = null;\n    }\n\n    const targetClone = cloningFunction(target, this);\n    this.observers = [];\n    this.revocable = Proxy.revocable(targetClone, this);\n    this.proxy = this.revocable.proxy;\n    this.target = targetClone;\n    this.options = this.processOptions(properties.options);\n  }\n\n  processOptions(options) {\n    if (options) {\n      if (typeof options !== 'object') {\n        throw new Error(`Observable options if/when provided, MAY only be an object, got '${options}'`);\n      }\n\n      const invalidOptions = Object.keys(options).filter(option => !validObservableOptionKeys.hasOwnProperty(option));\n\n      if (invalidOptions.length) {\n        throw new Error(`'${invalidOptions.join(', ')}' is/are not a valid Observable option/s`);\n      }\n\n      return Object.assign({}, options);\n    } else {\n      return {};\n    }\n  }\n\n  detach() {\n    this.parent = null;\n    return this.target;\n  }\n\n  set(target, key, value) {\n    let oldValue = target[key];\n\n    if (value !== oldValue) {\n      const newValue = getObservedOf(value, key, this);\n      target[key] = newValue;\n\n      if (oldValue && typeof oldValue === 'object') {\n        const tmpObserved = oldValue[oMetaKey];\n\n        if (tmpObserved) {\n          oldValue = tmpObserved.detach();\n        }\n      }\n\n      const changes = oldValue === undefined ? [{\n        type: INSERT,\n        path: [key],\n        value: newValue,\n        object: this.proxy\n      }] : [{\n        type: UPDATE,\n        path: [key],\n        value: newValue,\n        oldValue: oldValue,\n        object: this.proxy\n      }];\n      callObservers(this, changes);\n    }\n\n    return true;\n  }\n\n  deleteProperty(target, key) {\n    let oldValue = target[key];\n    delete target[key];\n\n    if (oldValue && typeof oldValue === 'object') {\n      const tmpObserved = oldValue[oMetaKey];\n\n      if (tmpObserved) {\n        oldValue = tmpObserved.detach();\n      }\n    }\n\n    const changes = [{\n      type: DELETE,\n      path: [key],\n      oldValue: oldValue,\n      object: this.proxy\n    }];\n    callObservers(this, changes);\n    return true;\n  }\n\n}\n\nclass ObjectOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareObject);\n  }\n\n}\n\nclass ArrayOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareArray);\n  }\n\n  get(target, key) {\n    if (proxiedArrayMethods.hasOwnProperty(key)) {\n      return proxiedArrayMethods[key];\n    } else {\n      return target[key];\n    }\n  }\n\n}\n\nclass TypedArrayOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareTypedArray);\n  }\n\n  get(target, key) {\n    if (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n      return proxiedTypedArrayMethods[key];\n    } else {\n      return target[key];\n    }\n  }\n\n}\n\nclass Observable {\n  constructor() {\n    throw new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n  }\n\n  static from(target, options) {\n    if (!target || typeof target !== 'object') {\n      throw new Error('observable MAY ONLY be created from a non-null object');\n    } else if (target[oMetaKey]) {\n      return target;\n    } else if (Array.isArray(target)) {\n      return new ArrayOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    } else if (ArrayBuffer.isView(target)) {\n      return new TypedArrayOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    } else if (target instanceof Date || target instanceof Error) {\n      throw new Error(`${target} found to be one of a on-observable types`);\n    } else {\n      return new ObjectOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    }\n  }\n\n  static isObservable(input) {\n    return !!(input && input[oMetaKey]);\n  }\n\n}\n\nObject.freeze(Observable);\n\nconst generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\n/**\r\n * @async\r\n * Call a cloud function, created in Easybase interface.\r\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\r\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\r\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\r\n */\n\n\nasync function callFunction$1(route, postBody) {\n  const res = await fetch(generateBareUrl('function', route.split(\"/\").pop()), {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(postBody) || \"\"\n  });\n  const rawDataText = await res.text();\n  return rawDataText;\n}\n/**\r\n * @async\r\n * Call a cloud function, created in Easybase interface.\r\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\r\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\r\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\r\n */\n\n\nconst callFunction = callFunction$1;\nexport { EasybaseProvider as E, _extends$1 as _, commonjsGlobal as a, callFunction as b, createCommonjsModule as c, getDefaultExportFromCjs as g, index as i, useEasybase as u };","map":{"version":3,"sources":["../src/EasybaseContext.tsx","../node_modules/fast-deep-equal/index.js","../src/types/types.tsx","../node_modules/easybasejs/src/EasybaseProvider/g.ts","../node_modules/easybasejs/src/EasybaseProvider/utils.ts","../node_modules/easybasejs/src/EasybaseProvider/types.ts","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/easybasejs/src/EasybaseProvider/auth.ts","../node_modules/easybasejs/src/EasybaseProvider/table.ts","../node_modules/easyqb/src/builder-sq/context.js","../node_modules/easyqb/src/builder-sq/index.js","../node_modules/easyqb/src/lib-util/tagged_template.js","../node_modules/easyqb/src/lib-util/build_utils.js","../node_modules/easyqb/src/lib-util/change_case.js","../node_modules/easyqb/src/lib-util/index.js","../node_modules/easyqb/src/builder-expression/compile.js","../node_modules/easyqb/src/builder-expression/index.js","../node_modules/easyqb/src/lib-core/index.js","../node_modules/easyqb/src/lib-sq/methods.js","../node_modules/easyqb/src/lib-sq/common/values_array.js","../node_modules/easyqb/src/lib-sq/clauses/with.js","../node_modules/easyqb/src/lib-sq/common/expressions.js","../node_modules/easyqb/src/lib-sq/clauses/select.js","../node_modules/easyqb/src/lib-sq/common/conditions.js","../node_modules/easyqb/src/lib-sq/common/from_items.js","../node_modules/easyqb/src/lib-sq/clauses/from.js","../node_modules/easyqb/src/lib-sq/clauses/where.js","../node_modules/easyqb/src/lib-sq/clauses/group.js","../node_modules/easyqb/src/lib-sq/clauses/having.js","../node_modules/easyqb/src/lib-sq/clauses/setop.js","../node_modules/easyqb/src/lib-sq/clauses/order.js","../node_modules/easyqb/src/lib-sq/common/limit_offset.js","../node_modules/easyqb/src/lib-sq/clauses/limit.js","../node_modules/easyqb/src/lib-sq/clauses/offset.js","../node_modules/easyqb/src/lib-sq/clauses/delete.js","../node_modules/easyqb/src/lib-sq/clauses/returning.js","../node_modules/easyqb/src/lib-sq/clauses/insert.js","../node_modules/easyqb/src/lib-sq/clauses/update.js","../node_modules/easyqb/src/lib-sq/clauses/set.js","../node_modules/easyqb/src/lib-sq/clauses/index.js","../node_modules/easyqb/src/lib-sq/query.js","../node_modules/easyqb/src/lib-sq/common/index.js","../node_modules/easyqb/src/lib-sq/index.js","../node_modules/easyqb/src/dialect-postgres/query.js","../node_modules/easyqb/src/lib-expression/util.js","../node_modules/easyqb/src/lib-expression/index.js","../node_modules/easyqb/src/dialect-postgres/expression.js","../node_modules/easyqb/src/dialect-postgres/parameterize.js","../node_modules/easyqb/src/dialect-postgres/index.js","../node_modules/easyqb/src/index.js","../node_modules/easybasejs/src/EasybaseProvider/db.ts","../node_modules/object-observer/dist/object-observer.min.js","../src/EasybaseProvider.tsx","../src/useEasybase.tsx","../src/ui/Auth/index.tsx","../node_modules/easybasejs/dist/index.modern.js","../src/callFunction.tsx"],"names":["c","configureFrame","_","addRecord","deleteRecord","sync","updateRecordImage","updateRecordVideo","updateRecordFile","useFrameEffect","fullTableSize","tableTypes","currentConfiguration","Query","getUserAttributes","isUserSignedIn","setUserAttribute","resetUserPassword","signIn","signOut","signUp","onSignIn","db","dbEventListener","useReturn","e","forgotPassword","forgotPasswordConfirm","userID","undefined","createContext","POST_TYPES","DB_STATUS","EXECUTE_COUNT","GlobalNamespace","this","createNewContext","createChain","methodProperties","builderProperties","isTaggedTemplate","buildTaggedTemplate","require$$0","isObject","buildCall","mapJoin","mapJoinWrap","objectMapJoin","memoize","normalKey","buildUtils","changeCase","taggedTemplate","compile","createExpressionCompiler","build","createExpressionBuilder","createQueryBuilder","methods","value","calls","buildArg","buildObject","buildProperty","valuesArray","expressions","using","fromItems","limitOffset","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","wth","select","from","where","group","having","setop","order","limit","offset","del","returning","update","set","query","queries","clauses","common","unaryPre","unaryPost","unaryFunction","binary","dateBinary","ternary","nary","naryFunction","oneValue","compositeValue","membership","quantifiedComparison","parameterize","escape","a","core","dialect","easyqb","cache","require","_isFrameInitialized","_frameConfiguration","_effect","_observedChangeStack","_recordIdMap","_proxyRecordMap","EasybaseProvider","options","ebconfig","console","React","useState","observe","unobserve","_ranSignInCallback","useRef","g","gFactory","authFactory","log","utilsFactory","tableFactory","dbFactory","useEffect","mount","isIE","document","navigator","GA4React","ga4ReactLoader","ga4React","hashedUserId","user_id","window","genUUID","dt","uuid","r","Math","_mockDeviceId","fetch","googleAnalyticsId","googleAnalyticsSecret","method","body","client_id","events","name","params","_userIdHash","t1","Date","initAuth","res","tokenPost","elapsed","setMounted","cookieName","cacheSession","fallbackMount","setTimeout","hash","fromUtf8","Promise","refreshToken","token","getUserID","refreshTokenRes","clearTimeout","hashOut","hexHash","Array","x","setUserSignedIn","effect","userSignedIn","_signInCallback","callback","_observableFrame","allChanges","change","type","path","_id","_frame","Number","_setObservableFrame","Observable","_recordIDExists","record","_getRawRecordFromProxy","proxyRecord","message","success","defaultValues","insertAtEnd","newRecord","tableName","fullOptions","errorCode","err","_frameRecord","ele","deepEqual","data","error","_realignFrames","newData","isNewDataTheSame","i","newDataNoId","currNewEle","_setFrame","setIsSyncing","stack","_updateRecordAttachment","ext","imageExtensions","videoExtensions","f","formData","isFileFromURI","customHeaders","tokenPostAttachment","doFetch","setLoading","dbInstance","setFrame","setError","isAlive","_instanceTableName","unsubscribe","_listener","status","queryType","returned","setUnsubscribe","stayAlive","setDead","deps","manualFetch","loading","EasybaseContext","mounted","useEasybase","easybase","useContext","Auth","lazy","props","fallback","callFunction","_callFunction"],"mappings":"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","sourcesContent":["import { createContext } from \"react\";\nimport {\n    ContextValue,\n    UseReturnValue,\n    ConfigureFrameOptions,\n    StatusResponse,\n    AddRecordOptions,\n    UpdateRecordAttachmentOptions,\n    FrameConfiguration,\n    QueryOptions,\n    EmailTemplate\n} from \"./types/types\";\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nfunction Frame(): Record<string, any>[];\nfunction Frame(index: number): Record<string, any>;\nfunction Frame(index?: number): Record<string, any>[] | Record<string, any> {\n    return [];\n}\n\nconst c: ContextValue = {\n    configureFrame: (_: ConfigureFrameOptions) => ({}) as StatusResponse,\n    addRecord: async (_: AddRecordOptions) => ({}) as StatusResponse,\n    deleteRecord: async (_: Record<string, any>) => ({}) as StatusResponse,\n    sync: async () => ({}) as StatusResponse,\n    updateRecordImage: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    updateRecordVideo: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    updateRecordFile: async (_: UpdateRecordAttachmentOptions) => ({}) as StatusResponse,\n    Frame,\n    useFrameEffect: (_: React.EffectCallback) => {},\n    fullTableSize: async () => 0,\n    tableTypes: async() => ({}) as Record<string, any>,\n    currentConfiguration: () => ({}) as FrameConfiguration,\n    Query: async (_: QueryOptions) => ([]),\n    getUserAttributes: async() => ({}) as Record<string, string>,\n    isUserSignedIn: () => false,\n    setUserAttribute: async (_: string, _2: string) => ({}) as StatusResponse,\n    resetUserPassword: async (_: string, _2: string) => ({}) as StatusResponse,\n    signIn: async (_: string, _2: string) => ({}) as StatusResponse,\n    signOut: () => {},\n    signUp: async (_: string, _2: string, _3?: Record<string, string>) => ({}) as StatusResponse,\n    onSignIn: (_: () => void) => {},\n    db: (_?: string) => ({}) as SQW,\n    dbEventListener: (_: () => void) => () => {},\n    useReturn: (_: () => SQW) => ({}) as UseReturnValue,\n    e: ({}) as NewExpression,\n    forgotPassword: async (_: string, _2?: EmailTemplate) => ({}) as StatusResponse,\n    forgotPasswordConfirm: async (_: string, _2: string, _3: string) => ({}) as StatusResponse,\n    userID: () => undefined\n}\n\nexport default createContext(c);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/* eslint-disable camelcase */\nimport React from \"react\";\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nexport interface GoogleAnalyticsEvents {\n    login?: boolean;\n    sign_up?: boolean;\n    forgot_password?: boolean;\n    forgot_password_confirm?: boolean;\n    reset_user_password?: boolean;\n    get_user_attributes?: boolean;\n    set_user_attribute?: boolean;\n    query?: boolean;\n    full_table_size?: boolean;\n    table_types?: boolean;\n    db_one?: boolean;\n    db_all?: boolean;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n    /** Google Analytics 4 Measurement ID for activity reporting */\n    googleAnalyticsId?: string;\n    /** **Only Required for React Native** â€“ Google Analytics 4 Measurement Protocol Secret ID for activity reporting. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create */\n    googleAnalyticsSecret?: string;\n    /**\n     * Specify which extra events are tracked in Google Analytics\n     * \n     * **default**:\n     *  * Page Mount\n     *  * login\n     *  * sign_up\n     *  * forgot_password\n     *  * forgot_password_confirm\n     *  * reset_user_password\n     *  \n    */\n    googleAnalyticsEventTracking?: GoogleAnalyticsEvents;\n}\n\nexport interface EasybaseProviderProps {\n    /** React elements */\n    children: JSX.Element[] | JSX.Element;\n    /** Easybase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface UseReturnValue {\n    /** Stateful frame that responds to local calls to `.update`, `.delete`, and `.set` */\n    frame: Record<string, any>[];\n    /** Call this function to unsubscribe to future events */\n    unsubscribe(): void;\n    /** Errors that occur in the useReturn workflow */\n    error: any;\n    /**\n     * @async\n     * Manually refresh the data in `frame`\n     */\n    manualFetch(): Promise<void>;\n    /** Is the frame awaiting a response from server to be set to */\n    loading: boolean;\n}\n\nexport interface ContextValue {\n    /**\n     * Pass a callback function to run when a user signs in. This callback function will run after either successfully\n     * signing in with the signIn() function OR after a user is automatically signed in via valid tokens saved to the browser from a \n     * previous instance. This is best placed with useEffect(() => {}, []);\n     * @param callback callback function to run on sign in event\n     */\n    onSignIn(callback: () => void): void;\n    /**\n     * Check if a user is currently signed in.\n     * @return {boolean} Is a user signed in.\n     */\n    isUserSignedIn(): boolean;\n    /**\n     * Sign out the current user and invalidate their cached tokens.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @abstract\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} currentPassword Signed-in user's current password\n     * @param {string} newPassword New password for user's account\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(currentPassword: string, newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project. This will save authentication tokens to a user's browser so that \n     * they will be automatically authenticated when they return to the application. These authentication tokens will become invalid\n     * when a user signs out or after 24 hours.\n     * @abstract\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @abstract\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `.db` instead - https://easybase.github.io/EasyQB/\n     * \n     * This hook runs when the Frame changes. This can be triggered by calling sync().\n     * @abstract\n     * @param {React.EffectCallback} effect Callback function that executes when Frame changes.\n     */\n    useFrameEffect(effect: React.EffectCallback): void;\n    /**\n      * **DEPRECATED**: Use `.db` instead - https://easybase.github.io/EasyQB/\n      * \n      * Configure the current frame size. Set the offset and amount of records to retrieve assume you don't want to receive\n      * your entire collection. This is useful for paging.\n      * @abstract\n      * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n      * @return {StatusResponse} StatusResponse\n      */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * Manually add a record to your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * Manually delete a record from your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `.db` instead - https://easybase.github.io/EasyQB/\n     * \n     * Call this method to synchronize your current changes with your database. Deletions, additions, and changes will all be reflected by your \n     * backend after calling this method. Call Frame() after this to get a normalized array of the freshest data.\n     * @abstract\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have an extension of an image. \n     * Call sync() for fresh data with proper attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'. \n     * The file must have an extension of a video.\n     * Call sync() for fresh data with proper attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'. \n     * Call sync() for fresh data with proper attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * **DEPRECATED**: Use `.db` instead - https://easybase.github.io/EasyQB/\n     * \n     * This function is how you access your current frame. This function does not get new data or push changes to Easybase. If you \n     * want to synchronize your frame and Easybase, call sync() then Frame().\n     * @abstract\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     * \n     */\n    Frame(): Record<string, any>[];\n    /**\n     * **DEPRECATED**: Use `.db` instead - https://easybase.github.io/EasyQB/\n     * \n     * This function is how you access a single object your current frame. This function does not get new data or push changes to Easybase. If you \n     * want to synchronize your frame and Easybase, call sync() then Frame().\n     * @abstract\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     * \n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n    /**\n     * Custom stateful hook to an instance of `db().return`. Other local changes will automatically re-fetch the query \n     * as detailed in the passed-in db.\n     * ```jsx\n     * const { frame } = useReturn(db('MYTABLE').return().where(e.gt('rating', 15)).limit(10))\n     * \n     * const onButtonClick = (_key) => {\n     *   db('MYTABLE').delete().where({ _key }).all();\n     * }\n     * \n     * // Stays fresh after call to `.delete()`\n     * return (<div>{ frame.map(ele => <Card {...ele} />) }</div>)\n     * ```\n     * @param {function():SQW} dbInstance Function returning an instance of `db().return` without having called `.all` or `.one`\n     * @param {React.DependencyList} deps If present, instance will be reloaded if the values in the list change.\n     * @return {UseReturnValue} Object with the required values to statefully access an array that is subscribed to local executions to the corresponding db instance.\n     */\n    useReturn(dbInstance: () => SQW, deps?: React.DependencyList): UseReturnValue;\n    /**\n     * @async\n     * Trigger an email to the given username with a verification code to reset the user's password. This verification \n     * code is used in the `forgotPasswordConfirm` function, along with a new password. **The username must be the user's email address**.\n     * @param {string} username A username which must also be a valid email address\n     * @param {EmailTemplate} emailTemplate Optional details for the formatting & content of the verification email\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful sending of a verification code email\n     */\n    forgotPassword(username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse>\n    /**\n     * @async\n     * Confirm the resetting of an unauthenticated users password. This function is invoked after `forgotPassword` is used to trigger\n     * an email containing a verification code to the given username [*which must also be an email*]. The user's randomly generated\n     * verification code from their email is passed in the first parameter. \n     * @param {string} code Verification code found in the email sent from the `forgotPassword` function\n     * @param {string} username The same username (email) used in the `forgotPassword` function\n     * @param {string} newPassword The new password for the corresponding verified user\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful setting of a new password\n     */\n    forgotPasswordConfirm(code: string, username: string, newPassword: string): Promise<StatusResponse>\n    /**\n     * Retrieve the currently signed-in user's ID.\n     * @return {string | undefined} The currently signed-in user's ID (username), otherwise undefined.\n     */\n    userID(): string | undefined;\n}\n\n/**\n * JS TYPES: ++++++++++++++++++\n */\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    errorCode?: string;\n}\n\nexport interface EmailTemplate {\n    /** Optional header of email that will be sent to user with verification code */\n    greeting?: string;\n    /** Optional name of application for placement within email */\n    appName?: string;\n    /** Optional footer of verification email often used for disclaimers. Can be a valid HTML string */\n    footer?: string;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\",\n    FORGOT_PASSWORD_SEND = \"forgot_password_send\",\n    FORGOT_PASSWORD_CONFIRM = \"forgot_password_confirm\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: \"Node\" | \"React\" | \"React Native\";\n    mounted: boolean;\n    newTokenCallback(): void;\n    userID: string | undefined;\n    analyticsEnabled: boolean;\n    analyticsEventsToTrack: GoogleAnalyticsEvents;\n    analyticsEvent(eventTitle: string, params?: Record<string, any>): void;\n    analyticsIdentify(hashedUserId: string): void;\n    GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n","import { Ebconfig, EasybaseProviderPropsOptions, Globals, EasybaseProviderProps, GoogleAnalyticsEvents } from \"./types\";\n\nnamespace GlobalNamespace {\n    export let ebconfig: Ebconfig;\n    export let token: string;\n    export let refreshToken: string;\n    export let session: number;\n    export let options: EasybaseProviderPropsOptions;\n    export let instance: \"Node\" | \"React\" | \"React Native\";\n    export let mounted: boolean;\n    export let newTokenCallback: () => {};\n    export let userID: string;\n    export let analyticsEnabled: boolean;\n    export let analyticsEventsToTrack: GoogleAnalyticsEvents;\n    export let analyticsEvent: () => {};\n    export let analyticsIdentify: () => {};\n    export let GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n\nconst _g: Globals = { ...GlobalNamespace };\n\nexport default _g;\n\nexport function gFactory({ ebconfig, options }: EasybaseProviderProps): Globals {\n    const optionsObj = { ...options }; // Forces undefined to empty object\n    const defaultG = {\n        options: optionsObj,\n        ebconfig: ebconfig,\n        GA_USER_ID_SALT: \"m83WnAPrq\",\n        analyticsEventsToTrack: {\n            login: true,\n            sign_up: true,\n            forgot_password: true,\n            forgot_password_confirm: true,\n            reset_user_password: true,\n            ...optionsObj.googleAnalyticsEventTracking\n        }\n    }\n    return { ...GlobalNamespace, ...defaultG } as Globals;\n}\n","import _g from \"./g\";\nimport { Globals } from \"./types\";\n\nexport default function utilsFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const generateBareUrl = (type: string, integrationID: string): string => `https://api.easybase.io/${type}/${integrationID}`;\n\n    const generateAuthBody = (): any => {\n        const stamp = Date.now();\n        return {\n            token: g.token,\n            token_time: ~~(g.session / (stamp % 64)),\n            now: stamp\n        }\n    }\n    \n    function log(...params: any): void {\n        if (g.options.logging) {\n            console.log(\"EASYBASE â€” \", ...params);\n        }\n    }\n\n    return {\n        generateAuthBody,\n        generateBareUrl,\n        log\n    }\n}\n","import { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface GoogleAnalyticsEvents {\n    login?: boolean;\n    sign_up?: boolean;\n    forgot_password?: boolean;\n    forgot_password_confirm?: boolean;\n    reset_user_password?: boolean;\n    get_user_attributes?: boolean;\n    set_user_attribute?: boolean;\n    query?: boolean;\n    full_table_size?: boolean;\n    table_types?: boolean;\n    db_one?: boolean;\n    db_all?: boolean;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n    /** Google Analytics 4 Measurement ID for activity reporting */\n    googleAnalyticsId?: string;\n    /** **Only Required for React Native** â€“ Google Analytics 4 Measurement Protocol Secret ID for activity reporting. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create */\n    googleAnalyticsSecret?: string;\n    /**\n     * Specify which extra events are tracked in Google Analytics\n     * \n     * **default**:\n     *  * Page Mount\n     *  * login\n     *  * sign_up\n     *  * forgot_password\n     *  * forgot_password_confirm\n     *  * reset_user_password\n     *  \n    */\n    googleAnalyticsEventTracking?: GoogleAnalyticsEvents;\n}\n\n\nexport interface EasybaseProviderProps {\n    /** EasyBase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    errorCode?: string;\n}\n\nexport interface EmailTemplate {\n    /** Optional header of email that will be sent to user with verification code */\n    greeting?: string;\n    /** Optional name of application for placement within email */\n    appName?: string;\n    /** Optional footer of verification email often used for disclaimers. Can be a valid HTML string */\n    footer?: string;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\",\n    FORGOT_PASSWORD_SEND = \"forgot_password_send\",\n    FORGOT_PASSWORD_CONFIRM = \"forgot_password_confirm\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface ContextValue {\n    /**\n     * Signs out the current user.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @abstract\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} currentPassword Signed-in user's current password\n     * @param {string} newPassword New password for user's account\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(currentPassword: string, newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project.\n     * @abstract\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @abstract\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * Configure the current frame size. Set the offset and amount of records to retreive assume you don't want to receive\n     * your entire collection. This is useful for paging.\n     * @abstract\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * Manually add a record to your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * Manually delete a record from your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * Call this method to syncronize your current changes with your database. Delections, additions, and changes will all be reflected by your \n     * backend after calling this method. Call Frame() after this to get a normalized array of the freshest data.\n     * @abstract\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have an extension of an image. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'. \n     * The file must have an extension of a video.\n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * This function is how you access your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     * \n     */\n    Frame(): Record<string, any>[];\n    /**\n     * This function is how you access a single object your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     * \n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n    /**\n     * @async\n     * Trigger an email to the given username with a verification code to reset the user's password. This verification \n     * code is used in the `forgotPasswordConfirm` function, along with a new password. **The username must be the user's email address**.\n     * @param {string} username A username which must also be a valid email address\n     * @param {EmailTemplate} emailTemplate Optional details for the formatting & content of the verification email\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful sending of a verification code email\n     */\n    forgotPassword(username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse>\n    /**\n     * @async\n     * Confirm the resetting of an unauthenticated users password. This function is invoked after `forgotpassword` is used to trigger\n     * an email containing a verification code to the given username [*which must also be an email*]. The user's randomly generated\n     * verification code from their email is passed in the first parameter. \n     * @param {string} code Verification code found in the email sent from the `forgotPassword` function\n     * @param {string} username The same username (email) used in the `forgotPassword` function\n     * @param {string} newPassword The new password for the corresponding verified user\n     * @return {Promise<StatusResponse>} A StatusResponse corresponding to the successful setting of a new password\n     */\n    forgotPasswordConfirm(code: string, username: string, newPassword: string): Promise<StatusResponse>\n    /**\n     * Retrieve the currently signed-in user's ID.\n     * @return {string | undefined} The currently signed-in user's ID (username), otherwise undefined.\n     */\n    userID(): string | undefined;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: \"Node\" | \"React\" | \"React Native\";\n    mounted: boolean;\n    newTokenCallback(): void;\n    userID: string | undefined;\n    analyticsEnabled: boolean;\n    analyticsEventsToTrack: GoogleAnalyticsEvents;\n    analyticsEvent(eventTitle: string, params?: Record<string, any>): void;\n    analyticsIdentify(hashedUserId: string): void;\n    GA_USER_ID_SALT: string; // https://support.google.com/analytics/answer/6366371?hl=en#hashed\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import { POST_TYPES, AuthPostResponse, Globals, StatusResponse, EmailTemplate } from \"./types\";\nimport _g from \"./g\";\nimport utilsFactory from \"./utils\";\nimport fetch from 'cross-fetch';\n\nexport default function authFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const { generateBareUrl, generateAuthBody, log } = utilsFactory(g);\n\n    function _clearTokens() {\n        g.token = \"\";\n        g.refreshToken = \"\";\n        g.newTokenCallback();\n        g.userID = undefined;\n    }\n\n    const getUserAttributes = async (): Promise<Record<string, string>> => {\n        try {\n            const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n            g.analyticsEnabled && g.analyticsEventsToTrack.get_user_attributes && g.analyticsEvent('get_user_attributes');\n            return attrsRes.data;\n        } catch (error) {\n            log(error)\n            return error;\n        }\n    }\n\n    const setUserAttribute = async (key: string, value: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n                key,\n                value\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.set_user_attribute && g.analyticsEvent('set_user_attribute', { key });\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPassword = async (username: string, emailTemplate?: EmailTemplate): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_SEND, {\n                username,\n                emailTemplate\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password && g.analyticsEvent('forgot_password');\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const forgotPasswordConfirm = async (code: string, username: string, newPassword: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_CONFIRM, {\n                username,\n                code,\n                newPassword\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password_confirm && g.analyticsEvent('forgot_password_confirm');\n            return {\n                success: setAttrsRes.success,\n                message: setAttrsRes.data\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const signUp = async (newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse> => {\n        try {\n            const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n                newUserID,\n                password,\n                userAttributes\n            });\n            g.analyticsEnabled && g.analyticsEventsToTrack.sign_up && g.analyticsEvent('sign_up', { method: \"Easybase\" });\n            return {\n                success: signUpRes.success,\n                message: signUpRes.data\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const signIn = async (userID: string, password: string): Promise<StatusResponse> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    session: g.session,\n                    instance: g.instance,\n                    userID,\n                    password\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.refreshToken = resData.refreshToken;\n                g.newTokenCallback();\n                g.userID = resData.userID;\n                g.mounted = true;\n                const [validTokenRes, { hash }, { fromUtf8 }] = await Promise.all([tokenPost(POST_TYPES.VALID_TOKEN), import('fast-sha256'), import('@aws-sdk/util-utf8-browser')])\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n                        const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + resData.userID));\n                        const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n                        g.analyticsIdentify(hexHash);\n                        g.analyticsEvent('login', { method: \"Easybase\" });\n                    }\n                    return {\n                        success: true,\n                        message: \"Successfully signed in user\"\n                    };\n                } else {\n                    return {\n                        success: false,\n                        message: \"Could not sign in user\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Could not sign in user\",\n                    errorCode: resData.ErrorCode || undefined\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Could not sign in user\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const resetUserPassword = async (currentPassword: string, newPassword: string): Promise<StatusResponse> => {\n        if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n            return {\n                success: false,\n                message: \"newPassword must be of type string\"\n            };\n        }\n\n        if (typeof currentPassword !== \"string\" || currentPassword.length > 100) {\n            return {\n                success: false,\n                message: \"currentPassword must be of type string\"\n            };\n        }\n\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, { currentPassword, newPassword });\n            g.analyticsEnabled && g.analyticsEventsToTrack.reset_user_password && g.analyticsEvent('reset_user_password');\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || \"Error\",\n                errorCode: error.errorCode || undefined\n            };\n        }\n    }\n\n    const userID = (): string | undefined => g.userID || undefined;\n\n    const signOut = (): void => {\n        g.token = \"\";\n        g.newTokenCallback();\n        g.userID = undefined;\n    }\n\n    const initAuth = async (): Promise<boolean> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n\n        log(`Handshaking on${g.instance} instance`);\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    tt: g.ebconfig.tt,\n                    session: g.session,\n                    instance: g.instance\n                })\n            });\n\n            const resData = await res.json();\n\n            if (resData.token) {\n                g.token = resData.token;\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n\n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': postType,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _auth: generateAuthBody(),\n                ...body\n            })\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPost(postType, body);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }\n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPost(postType, body);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const regularAuthbody = generateAuthBody();\n\n        const attachmentAuth = {\n            'Eb-token': regularAuthbody.token,\n            'Eb-token-time': regularAuthbody.token_time,\n            'Eb-now': regularAuthbody.now\n        };\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n            method: \"POST\",\n            headers: {\n                'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n                ...customHeaders,\n                ...attachmentAuth\n            },\n            body: formData\n        });\n\n        const resData = await res.json();\n\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n            if (resData.ErrorCode === \"TokenExpired\") {\n                if (integrationType === \"PROJECT\") {\n                    try {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPostAttachment(formData, customHeaders);\n                        } else {\n                            throw new Error(req_res.data || \"Error\");\n                        }\n                    } catch (error) {\n                        _clearTokens();\n                        return {\n                            success: false,\n                            data: error.message || error\n                        }\n                    }\n                } else {\n                    await initAuth();\n                }\n                return tokenPostAttachment(formData, customHeaders);\n            } else {\n                const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n                (err as any).errorCode = resData.ErrorCode || resData.code;\n                throw err;\n            }\n        } else {\n            return {\n                success: resData.success,\n                data: resData.body\n            }\n        }\n    }\n\n    return {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        signIn,\n        signOut,\n        resetUserPassword,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    }\n}\n","import {\n    POST_TYPES,\n    QueryOptions,\n    Globals\n} from \"./types\";\nimport _g from \"./g\";\n\nimport authFactory from \"./auth\";\n\nexport default function tableFactory(globals?: Globals): any {\n\n    const g = globals || _g;\n\n    const { tokenPost } = authFactory(g);\n\n    const Query = async (options: QueryOptions): Promise<Record<string, any>[]> => {\n        const defaultOptions: QueryOptions = {\n            queryName: \"\"\n        }\n    \n        const fullOptions: QueryOptions = { ...defaultOptions, ...options };\n\n        const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.query && g.analyticsEvent('query', { queryName: fullOptions.queryName, tableName: fullOptions.tableName || undefined });\n            return res.data\n        } else {\n            return [];\n        }\n    }\n\n    async function fullTableSize(): Promise<number>;\n    async function fullTableSize(tableName: string): Promise<number>;\n    async function fullTableSize(tableName?: string): Promise<number> {\n        const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? { tableName } : {});\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.full_table_size && g.analyticsEvent('full_table_size', { tableName: tableName || undefined });\n            return res.data;\n        } else {\n            return 0;\n        }\n    }\n\n    async function tableTypes(): Promise<Record<string, any>>;\n    async function tableTypes(tableName: string): Promise<Record<string, any>>\n    async function tableTypes(tableName?: string): Promise<Record<string, any>> {\n        const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? { tableName } : {});\n        if (res.success) {\n            g.analyticsEnabled && g.analyticsEventsToTrack.table_types && g.analyticsEvent('table_types', { tableName: tableName || undefined });\n            return res.data;\n        } else {\n            return {};\n        }\n    }\n\n    return {\n        Query,\n        fullTableSize,\n        tableTypes\n    };\n}","/** Returns a function the creates a new context */\nconst createNewContext = defaultContext => {\n    const { parameterize, escape, mapKey, build } = defaultContext\n\n    return (inherit = {}) => {\n        const { params = [], unparameterized = false } = inherit\n\n        const whr = []\n        return {\n            // properties set by the EasyQB instance\n            parameterize,\n            escape,\n            mapKey,\n            build,\n\n            // properties inherited from the parent query\n            params,\n            unparameterized,\n\n            // properties of the current query\n            type: 'select',\n            // | sql' | 'select' | 'delete' | 'insert' | 'update'\n            target: whr,\n            join: undefined,\n            separator: ' ',\n            sql: [],\n            ret: [],\n            frm: [],\n            whr,\n            grp: [],\n            hav: [],\n            setop: [],\n            ord: [],\n            with: [],\n            set: []\n\n            // properties that may be added dynamically:\n            // userType\n            // distinct\n        }\n    }\n}\n\nmodule.exports = createNewContext\n","const createNewContext = require('./context')\nconst createQueryBuilder = ({ defaultContext, query, e, config }) => {\n    const { queries, methods, properties } = query\n    const newContext = createNewContext(defaultContext)\n    const reducers = createReducers(methods)\n    const updateContext = applyReducers(reducers)\n    reducers.extend = (ctx, args) => {\n        const arr = Array.isArray(args[0]) ? args[0] : args\n        for (let i = 0; i < arr.length; ++i) {\n            updateContext(arr[i].method, ctx)\n        }\n    }\n    const builder = () => { } // must not be object literal\n    const chain = createChain(builder)\n\n    const executeProperties = {\n        one: {\n            value: async function () {\n                const ret = await config.oneCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        all: {\n            value: async function () {\n                const ret = await config.allCallback(this.query, config.tableName, config.userAssociatedRecordsOnly)\n                return ret;\n            }\n        },\n        _tableName: {\n            get: function () {\n                return config.tableName\n            }\n        }\n    }\n\n    // EasyQB no access to from\n    const _methodProperties = methodProperties({ methods, chain });\n    delete _methodProperties.from;\n\n    Object.defineProperties(builder, {\n        ...builderProperties({ chain, newContext, updateContext, queries }),\n        ..._methodProperties,\n        ...executeProperties,\n        ...properties,\n        e: {\n            value: e\n        }\n    })\n    return chain()\n}\n\n/** Creates a new builder instance */\nconst createChain = prototype => {\n    const chain = method => {\n        const fn = (...args) => chain({ name: 'express', args, prev: method })\n        fn.method = method\n        Object.setPrototypeOf(fn, prototype)\n        return fn\n    }\n    return chain\n}\n\n/** Creates an object containing all method reducers */\nconst createReducers = methods => {\n    const reducers = {}\n    for (const name in methods) {\n        const { updateContext, properties = {} } = methods[name]\n        reducers[name] = updateContext\n        // some methods have subproperties, e.g. .unionAll\n        for (const key in properties) {\n            reducers[`${name}.${key}`] = properties[key]\n        }\n    }\n    return reducers\n}\n\n/** Follows a method chain, applying each method's reducer, to ctx */\nconst applyReducers = reducers => (method, ctx) => {\n    // follow method links to construct methods array (in reverse)\n    const methods = []\n    for (; method !== undefined; method = method.prev) {\n        methods.push(method)\n    }\n    // build methods object by processing methods in call order\n    const express = { id: 0 }\n    for (let i = methods.length - 1; i >= 0; --i) {\n        const method = methods[i]\n        reducers[method.name](ctx, method.args, express)\n    }\n    return ctx\n}\n\n/** Default properties of all SQL Query Builders */\nconst builderProperties = ({ newContext, updateContext, queries }) => ({\n    _build: {\n        value: function (inheritedContext) {\n            const ctx = updateContext(this.method, newContext(inheritedContext))\n            return queries[ctx.type](ctx)\n        }\n    },\n    query: {\n        get: function () {\n            return this._build()\n        }\n    },\n    unparameterized: {\n        get: function () {\n            return this._build({ unparameterized: true }).text\n        }\n    }\n})\n\n/** Builds object containing a property for every query building method */\nconst methodProperties = ({ methods, chain }) => {\n    const properties = {}\n    for (const name in methods) {\n        const { getter } = methods[name]\n        if (getter) {\n            // add getter methods\n            properties[name] = {\n                get: function () {\n                    return chain({ name, prev: this.method })\n                }\n            }\n        } else {\n            // add function call methods\n            properties[name] = {\n                value: function (...args) {\n                    return chain({ name, args, prev: this.method })\n                }\n            }\n        }\n    }\n    return properties\n}\n\nmodule.exports = createQueryBuilder","const isTaggedTemplate = ([strings]) => Array.isArray(strings) && strings.raw\n\nconst buildTaggedTemplate = (ctx, [strings, ...args]) => {\n  let txt = strings[0]\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1]\n  }\n  return txt\n}\n\nmodule.exports = {\n  isTaggedTemplate,\n  buildTaggedTemplate\n}","const { isTaggedTemplate, buildTaggedTemplate } = require('./tagged_template')\n\nconst isObject = arg => arg && arg.constructor.prototype === Object.prototype\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? buildTaggedTemplate(ctx, args)\n    : callbackfn(ctx, args)\n\nconst mapJoin = (callbackfn, separator = ', ') => (ctx, args) => {\n  let txt = ''\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt\n}\n\nconst mapJoinWrap = (callbackfn, separator = ', ', open = '(', close = ')') => (\n  ctx,\n  args\n) => {\n  let txt = open\n  for (let i = 0; i < args.length; ++i) {\n    if (i !== 0) txt += separator\n    txt += callbackfn(ctx, args[i])\n  }\n  return txt + close\n}\n\nconst objectMapJoin = (callbackfn, separator = ', ') => (ctx, object) => {\n  let txt = ''\n  const keys = Object.keys(object)\n  for (let i = 0; i < keys.length; ++i) {\n    if (i !== 0) txt += separator\n    const key = keys[i]\n    txt += callbackfn(ctx, key, object[key])\n  }\n  return txt\n}\n\nmodule.exports = {\n  isObject,\n  buildCall,\n  mapJoin,\n  mapJoinWrap,\n  objectMapJoin\n}","// included to mitigate cost of case conversion\nconst memoize = fn => {\n  const cache = {}\n  return key => cache[key] || (cache[key] = fn(key))\n}\n\nconst normalKey = given_key => given_key.indexOf('(') === -1 ? given_key.toLowerCase().trim().replace(/ /g, '_') : given_key;\n\nmodule.exports = {\n  memoize,\n  normalKey\n}","const buildUtils = require('./build_utils')\nconst changeCase = require('./change_case')\nconst taggedTemplate = require('./tagged_template')\n\nmodule.exports = {\n  ...buildUtils,\n  ...changeCase,\n  ...taggedTemplate\n}","const { isTaggedTemplate } = require('../lib-util')\n\nconst createExpressionCompiler = expressionTable => {\n  const callsCompiler = createCallsCompiler(expressionTable)\n  return (ctx, current) => {\n    const calls = buildCalls(current)\n    const text = callsCompiler(ctx, calls)\n    return {\n      text,\n      args: ctx.params,\n      type: 'expression'\n    }\n  }\n}\n\n// TODO: Performance optimization:\n// inline expression building with this method so at most only one array\n// is allocated in total, no array of object containing arrays nonsense\nconst buildCalls = current => {\n  // get call nodes\n  const calls = []\n  for (; current; current = current.prev) calls.push(current)\n  if (calls.length === 0) throw Error('Error: Empty expression')\n\n  // build expression list\n  let expression = { name: 'arg', args: [] }\n  const expressions = [expression]\n  const last = calls.length - 1\n  for (let i = last; i >= 0; --i) {\n    const { name, args } = calls[i]\n    if (i === last) {\n      if (name) expression.name = name\n      else pushCall(expression.args, args)\n    } else {\n      if (name) expressions.push((expression = { name, args: [undefined] }))\n      else pushCall(expression.args, args)\n    }\n  }\n  return expressions\n}\n\nconst pushCall = (array, args) => {\n  if (isTaggedTemplate(args)) {\n    array.push({ tag: args })\n  } else {\n    if (args.length === 0)\n      throw Error('Error: Expression call requires at least one argument')\n    for (let i = 0; i < args.length; ++i) {\n      array.push({ arg: args[i] })\n    }\n  }\n}\n\nconst createCallsCompiler = expressionTable => (ctx, calls) => {\n  let exp\n  for (let i = 0; i < calls.length; ++i) {\n    const { name, args } = calls[i]\n    const { build, minArgs, maxArgs } = expressionTable[name]\n    if (i !== 0) args[0] = { exp }\n    const numArgs = args.length\n    if (numArgs < minArgs)\n      throw Error(`Error: ${name} requires at least ${minArgs} arguments`)\n    if (numArgs > maxArgs)\n      throw Error(`Error: ${name} accepts at most ${maxArgs} arguments`)\n    exp = build(ctx, args)\n  }\n  return exp\n}\n\nmodule.exports = createExpressionCompiler\n","const createExpressionCompiler = require('./compile')\nconst { normalKey } = require('../lib-util');\n\nconst aggregator = (op) => (columnName) => `${op}(${normalKey(columnName)})`;\n\nmodule.exports = ({ defaultContext, expression }) => {\n  const { expressions } = expression\n  const newContext = createNewContext(defaultContext)\n  const compile = createExpressionCompiler(expressions)\n  const builder = () => {} // must not be object literal\n  const chain = createChain(builder)\n  Object.defineProperties(builder, {\n    ...builderProperties({ compile, newContext }),\n    ...methodProperties({ expressions, chain }),\n  })\n  const ret = chain();\n  ret.max = aggregator('max');\n  ret.min = aggregator('min');\n  ret.avg = aggregator('avg');\n  ret.count = aggregator('count');\n  ret.sum = aggregator('sum');\n  return ret;\n}\n\nconst builderProperties = ({ compile, newContext }) => ({\n  _build: {\n    value: function(inherit) {\n      return compile(newContext(inherit), this.current)\n    }\n  },\n  query: {\n    get: function() {\n      return this._build()\n    }\n  },\n  unparameterized: {\n    get: function() {\n      return this._build({ unparameterized: true }).text\n    }\n  }\n})\n\nconst createNewContext = defaultContext => {\n  const { build, parameterize, escape, mapKey } = defaultContext\n  return inherit => {\n    const { params = [], unparameterized = false } = inherit || {}\n    return {\n      // EasyQB instance properties\n      build,\n      parameterize,\n      escape,\n      mapKey,\n\n      // inherited properties\n      params,\n      unparameterized\n    }\n  }\n}\n\nconst createChain = prototype => {\n  const chain = current => {\n    const fn = (...args) => chain({ prev: current, args })\n    fn.current = current\n    Object.setPrototypeOf(fn, prototype)\n    return fn\n  }\n  return chain\n}\n\nconst methodProperties = ({ expressions, chain }) => {\n  const properties = {}\n  for (const name in expressions) {\n    properties[name] = {\n      get: function() {\n        return chain({ prev: this.current, name })\n      }\n    }\n  }\n  return properties\n}\n","const createQueryBuilder = require('../builder-sq')\nconst createExpressionBuilder = require('../builder-expression')\nconst { memoize, normalKey } = require('../lib-util')\n\n\n/**\n * Creates a version of EasyQB for the given SQL dialect and database adapter.\n *\n * A dialect is variant of the SQL language,\n * while an adapter is the driver that communicates with the database.\n *\n * This design makes it easy to swap drivers, e.g. mysql vs mysql2 or\n * add new databases just by connecting a new adapter to an existing dialect.\n *\n */\n\nconst createSqorn = ({ dialect }) => (config = {}) => {\n  const { query, expression, parameterize, escape } = dialect\n\n  // 1. Create default context properties passed through build tree\n  const mapKey = memoize(normalKey)\n  const defaultContext = { parameterize, escape, mapKey, build }\n\n  // 2. Create Expression Builder\n  const e = createExpressionBuilder({ defaultContext, expression })\n\n  // 3. Create Query Builder\n  const sq = createQueryBuilder({ defaultContext, query, e, config })\n\n  // 4. TODO: Build Executor, Attach e and execute functions\n\n  // 5. TODO: Return { sq, e, transaction, db }\n  return sq\n}\n\nfunction build(arg) {\n  if (arg === undefined) throw Error('Error: undefined argument')\n  if (typeof arg === 'function') {\n    if (arg._build) {\n      const { type, text } = arg._build(this)\n      if (type === 'expression') return text\n      if (type === 'fragment') return text\n      return `(${text})`\n    }\n    return arg(this)\n  }\n  return this.unparameterized ? this.escape(arg) : this.parameterize(arg)\n}\n\nmodule.exports = createSqorn","const { normalKey } = require('../lib-util')\n\n/** Query building methods */\nconst methods = {\n    with: {\n        updateContext: (ctx, args) => {\n            ctx.with.push(args)\n        }\n    },\n    withRecursive: {\n        updateContext: (ctx, args) => {\n            ctx.recursive = true\n            ctx.with.push(args)\n        }\n    },\n    from: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push({ args, join: ', ' })\n        }\n    },\n    where: {\n        updateContext: (ctx, args) => {\n            ctx.whr.push(args)\n            ctx.target = ctx.whr\n        }\n    },\n    return: {\n        updateContext: (ctx, args) => {\n            ctx.ret.push(Array.isArray(args) ? args.map(normalKey) : args)\n        }\n    },\n    distinct: {\n        getter: true,\n        updateContext: ctx => {\n            ctx.distinct = []\n        }\n    },\n    groupBy: {\n        updateContext: (ctx, args) => {\n            ctx.grp.push(args)\n        }\n    },\n    having: {\n        updateContext: (ctx, args) => {\n            ctx.hav.push(args)\n            ctx.target = ctx.hav\n        }\n    },\n    union: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union', args })\n        }\n    },\n    unionAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'union all', args })\n        }\n    },\n    intersect: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect', args })\n        }\n    },\n    intersectAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'intersect all', args })\n        }\n    },\n    except: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except', args })\n        }\n    },\n    exceptAll: {\n        updateContext: (ctx, args) => {\n            ctx.setop.push({ type: 'except all', args })\n        }\n    },\n    orderBy: {\n        updateContext: (ctx, args) => {\n            ctx.ord.push(args)\n        }\n    },\n    limit: {\n        updateContext: (ctx, args) => {\n            ctx.limit = args\n        }\n    },\n    offset: {\n        updateContext: (ctx, args) => {\n            ctx.offset = args\n        }\n    },\n    join: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' join ' }))\n        }\n    },\n    leftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' left join ' }))\n        }\n    },\n    rightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' right join ' }))\n        }\n    },\n    fullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' full join ' }))\n        }\n    },\n    crossJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' cross join ' }))\n        }\n    },\n    naturalJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural join ' }))\n        }\n    },\n    naturalLeftJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural left join ' }))\n        }\n    },\n    naturalRightJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural right join ' }))\n        }\n    },\n    naturalFullJoin: {\n        updateContext: (ctx, args) => {\n            ctx.frm.push((ctx.join = { args, join: ' natural full join ' }))\n        }\n    },\n    on: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.on) {\n                join.on.push(args)\n            } else {\n                ctx.target = join.on = [args]\n            }\n        }\n    },\n    using: {\n        updateContext: (ctx, args) => {\n            const { join } = ctx\n            if (join.using) {\n                join.using.push(args)\n            } else {\n                join.using = [args]\n            }\n        }\n    },\n    delete: {\n        // getter: true,\n        updateContext: ctx => {\n            ctx.type = 'delete'\n        }\n    },\n    insert: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'insert'\n            ctx.insert = args\n        }\n    },\n    set: {\n        updateContext: (ctx, args) => {\n            ctx.type = 'update'\n            ctx.set.push(args)\n        }\n    },\n    express: {\n        updateContext: (ctx, args, count) => {\n            if (count.id === 0) {\n                count.id++\n                ctx.frm.push((ctx.join = { type: 'from', args, join: ', ' }))\n            } else if (count.id === 1) {\n                count.id++\n                ctx.whr.push(args)\n            } else if (count.id === 2) {\n                count.id++\n                ctx.ret.push(args)\n            } else throw Error('Invalid express call')\n        }\n    }\n}\n\nmodule.exports = methods;","const { mapJoin } = require('../../lib-util')\n\nmodule.exports = (ctx, array) => {\n  const keys = uniqueKeys(array)\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  }\n}\n\n// gets unique keys in object array\nconst uniqueKeys = array => {\n  const keys = {}\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true\n    }\n  }\n  return Object.keys(keys)\n}\n\n// gets column string from unique keys of object array\nconst columns = mapJoin((ctx, arg) => ctx.mapKey(arg))\n\n// gets values string of object array\nconst values = (ctx, source, keys) => {\n  let txt = 'values '\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', '\n    txt += '('\n    const object = source[i]\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', '\n      txt += value(ctx, object[keys[j]])\n    }\n    txt += ')'\n  }\n  return txt\n}\n\nconst value = (ctx, arg) => {\n  if (arg === undefined) return 'default'\n  return ctx.build(arg)\n}\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  if (ctx.with.length === 0) return\n  const txt = calls(ctx, ctx.with)\n  return txt && `with ${ctx.recursive ? 'recursive ' : ''}${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid with argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'function') {\n    return `${ctx.mapKey(key)} ${ctx.build(value)}`\n  }\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `${ctx.mapKey(key)}(${columns}) (${values})`\n  }\n  throw Error(`Error: Invalid .with argument`)\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (isObject(arg)) return buildObject(ctx, arg)\n  return ctx.build(arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value)\n  return `${expression} ${ctx.mapKey(key)}`\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg)))\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx =>\n  `select ${buildDistinct(ctx)}${expressions(ctx, ctx.ret) || '*'}`\n\nconst buildDistinct = ctx =>\n  ctx.distinct\n    ? ctx.distinct.length\n      ? // TODO: expressions shouldn't be aliasable here\n        `distinct on (${expressions(ctx, ctx.distinct)})`\n      : 'distinct'\n    : ''\n","const {\n  isTaggedTemplate,\n  buildTaggedTemplate,\n  isObject,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildCall = callbackfn => (ctx, args) =>\n  isTaggedTemplate(args)\n    ? `(${buildTaggedTemplate(ctx, args)})`\n    : callbackfn(ctx, args)\n\nconst buildArg = (ctx, arg) =>\n  isObject(arg) ? buildObject(ctx, arg) : ctx.build(arg)\n\nconst valuesList = mapJoin((ctx, arg) => ctx.build(arg))\n\nconst buildProperty = (ctx, key, value) => {\n  const name = ctx.mapKey(key)\n  if (value === null) return `(${name} is null)`\n  if (Array.isArray(value)) return `(${name} in (${valuesList(ctx, value)}))`\n  return `(${name} = ${ctx.build(value)})`\n}\n\nconst buildObject = objectMapJoin(buildProperty, ' and ')\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg, ' and ')), ' and ')\n","const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\nconst conditions = require('./conditions')\nconst valuesArray = require('./values_array')\n\nmodule.exports = (ctx, items, start = 0, end = items.length) => {\n  if (end > items.length) end = items.length\n  let txt = ''\n  for (let i = start; i < end; ++i) {\n    const item = items[i]\n    if (i !== start) txt += item.join\n    txt += fromItem(ctx, item.args)\n    if (item.on) txt += ` on ${conditions(ctx, item.on)}`\n    else if (item.using) txt += ` using (${using(ctx, item.using)})`\n  }\n  return txt\n}\n\nconst usingArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid .using arg')\n}\nconst using = mapJoin(buildCall(mapJoin(usingArg)))\n\nconst fromArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Error: Invalid .from argument:', arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  if (typeof value === 'string') return `${value} ${ctx.mapKey(key)}`\n  if (typeof value === 'function')\n    return `${ctx.build(value)} ${ctx.mapKey(key)}`\n  if (Array.isArray(value)) {\n    const { columns, values } = valuesArray(ctx, value)\n    return `(${values}) ${ctx.mapKey(key)}(${columns})`\n  }\n  throw Error('Error: Invalid .from argument')\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nconst fromItem = buildCall(mapJoin(fromArg))\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `from ${txt}`\n}\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.whr.length === 0) return\n  const txt = conditions(ctx, ctx.whr)\n  return txt && 'where ' + txt\n}\n","const { isObject, buildCall, mapJoin, mapJoinWrap } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.grp.length === 0) return\n  const txt = calls(ctx, ctx.grp)\n  return txt && `group by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildArrayArg(ctx, arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildArrayArg = mapJoinWrap(buildArg)\n\n// postgres only\n// clone of buildArg() without support for object args\nconst buildCubeOrRollupArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (Array.isArray(arg)) return buildCubeOrRollupArrayArg(ctx, arg)\n  throw Error('Invalid cube/rollup argument')\n}\n\n// postgres only\n// clone of buildArrayArg() without support for object args\nconst buildCubeOrRollupArrayArg = mapJoinWrap(buildCubeOrRollupArg)\n\n// postgres only\nconst buildObject = (ctx, obj) => {\n  const { type, args } = obj\n  if (type === 'rollup') {\n    return `rollup ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'cube') {\n    return `cube ${buildCubeOrRollupArg(ctx, args)}`\n  }\n  if (type === 'grouping sets') {\n    return `grouping sets ${buildArg(ctx, args)}`\n  }\n  throw Error('Invalid group by argument')\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const conditions = require('../common/conditions')\n\nmodule.exports = ctx => {\n  if (ctx.hav.length === 0) return\n  const txt = conditions(ctx, ctx.hav)\n  return txt && 'having ' + txt\n}\n","module.exports = ctx => {\n  if (ctx.setop.length === 0) return\n  let txt = ''\n  let first = true\n  const { setop } = ctx\n  for (let i = 0; i < setop.length; ++i) {\n    const { type, args } = ctx.setop[i]\n    for (let j = 0; j < args.length; ++j) {\n      if (!first) {\n        txt += ' '\n      } else {\n        first = false\n      }\n      txt += `${type} ${ctx.build(args[j])}`\n    }\n  }\n  return txt\n}\n","const { isObject, buildCall, mapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (ctx.ord.length === 0) return\n  const txt = calls(ctx, ctx.ord)\n  return txt && `order by ${txt}`\n}\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (typeof arg === 'function') return ctx.build(arg)\n  if (isObject(arg)) return buildObject(ctx, arg)\n  throw Error('Invalid order by argument:', arg)\n}\n\nconst buildObject = (ctx, obj) => {\n  let txt = ''\n  const { by, sort, using, nulls } = obj\n  // by\n  if (typeof by === 'string') txt += by\n  else if (typeof by === 'function') txt += ctx.build(by)\n  else throw Error('Invalid order by property \"by\"')\n  // sort\n  if (sort) {\n    if (sort === 'desc') txt += ' desc'\n    else if (sort === 'asc') txt += ' asc'\n    else if (typeof sort === 'string') txt += ` using ${sort}`\n    else throw Error('Invalid order by property \"sort\"')\n  } else if (using) {\n    if (typeof using === 'string') txt += ` using ${using}`\n    else throw Error('Invalid order by property \"using\"')\n  }\n  // nulls\n  if (nulls === undefined);\n  else if (nulls === 'last') txt += ' nulls last'\n  else if (nulls === 'first') txt += ' nulls first'\n  else throw Error('Invalid order by property \"nulls\"')\n  // return\n  return txt\n}\n\nconst calls = mapJoin(buildCall(mapJoin(buildArg)))\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\n\nmodule.exports = (ctx, args) => {\n  if (isTaggedTemplate(args)) return buildTaggedTemplate(ctx, args)\n  const arg = args[0]\n  if (typeof arg === 'number') return ctx.parameterize(arg)\n  if (typeof arg === 'function') return ctx.build(arg)\n  throw Error('Error: Invalid limit/offset argument')\n}\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.limit && `limit ${limitOffset(ctx, ctx.limit)}`\n","const limitOffset = require('../common/limit_offset')\n\nmodule.exports = ctx => ctx.offset && `offset ${limitOffset(ctx, ctx.offset)}`\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `delete from ${txt}`\n}\n","const expressions = require('../common/expressions')\n\nmodule.exports = ctx => {\n  if (!ctx.ret) return\n  const txt = expressions(ctx, ctx.ret)\n  return txt && `returning ${txt}`\n}\n","const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\nconst fromItems = require('../common/from_items')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  const table = fromItems(ctx, ctx.frm)\n  const values = buildCall(ctx, ctx.insert)\n  return `insert into ${table}${values}`\n}\n\nconst buildCall = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate(ctx, args)\n  if (args.length === 1 && args[0] === undefined) return ' default values'\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0])\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0])\n  return buildValuesArray(ctx, args)\n}\n\nconst buildValuesArray = (ctx, array) => {\n  const { values, columns } = valuesArray(ctx, array)\n  return `(${columns}) ${values}`\n}\n","const fromItems = require('../common/from_items')\n\nmodule.exports = ctx => {\n  const txt = fromItems(ctx, ctx.frm)\n  return txt && `update ${txt}`\n}\n","const { buildCall, mapJoin, objectMapJoin } = require('../../lib-util')\n\nmodule.exports = ctx => {\n  if (!ctx.set) return\n  const txt = calls(ctx, ctx.set)\n  return txt && 'set ' + txt\n}\n\nconst buildProperty = (ctx, key, value) =>\n  `${ctx.mapKey(key)} = ${ctx.build(value)}`\n\nconst calls = mapJoin(buildCall(mapJoin(objectMapJoin(buildProperty))))\n","module.exports = {\n  wth: require('./with'),\n  select: require('./select'),\n  from: require('./from'),\n  where: require('./where'),\n  group: require('./group'),\n  having: require('./having'),\n  setop: require('./setop'),\n  order: require('./order'),\n  limit: require('./limit'),\n  offset: require('./offset'),\n  del: require('./delete'),\n  returning: require('./returning'),\n  insert: require('./insert'),\n  update: require('./update'),\n  set: require('./set')\n}\n","const {\n    wth,\n    select,\n    from,\n    where,\n    group,\n    having,\n    setop,\n    order,\n    limit,\n    offset,\n    del,\n    returning,\n    insert,\n    update,\n    set,\n} = require('./clauses')\n\nconst query = (...clauses) => ctx => {\n    let text = ''\n    for (const clause of clauses) {\n        const str = clause && clause(ctx)\n        if (str) {\n            if (text) text += ctx.separator\n            text += str\n        }\n    }\n    return { text, args: ctx.params, type: ctx.userType || ctx.type }\n}\n\nconst queries = {\n    select: query(\n        wth,\n        select,\n        from,\n        where,\n        group,\n        having,\n        setop,\n        order,\n        limit,\n        offset\n    ),\n    update: query(wth, update, set, where, returning),\n    delete: query(wth, del, where, returning),\n    insert: query(wth, insert, returning)\n}\n\nmodule.exports = { query, queries }","const conditions = require('./conditions')\nconst expressions = require('./expressions')\nconst fromItems = require('./from_items')\nconst limitOffset = require('./limit_offset')\nconst valuesArray = require('./values_array')\n\nmodule.exports = {\n  conditions,\n  expressions,\n  fromItems,\n  limitOffset,\n  valuesArray\n}\n","const methods = require('./methods')\nconst { query, queries } = require('./query')\nconst clauses = require('./clauses')\nconst common = require('./common')\n\nmodule.exports = {\n  methods,\n  query,\n  queries,\n  clauses,\n  common\n}","const { methods, queries, query, clauses, common } = require('../lib-sq')\n\nconst { fromItems, expressions } = common\nconst {\n  wth,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  returning,\n  set\n} = clauses\n\nconst postgresMethods = {\n  distinctOn: {\n    updateContext: (ctx, args) => {\n      if (ctx.distinct) {\n        ctx.distinct.push(args)\n      } else {\n        ctx.distinct = [args]\n      }\n    }\n  }\n}\n\n// SELECT supports .distinctOn(...expressions)\nconst select = ctx => {\n  let txt = 'select '\n  if (ctx.distinct) {\n    txt += 'distinct '\n    if (ctx.distinct.length) {\n      txt += `on (${expressions(ctx, ctx.distinct)}) `\n    }\n  }\n  txt += expressions(ctx, ctx.ret) || '*'\n  return txt\n}\n// DELETE: first .from call is used in the DELETE clause\n// subsequent .from calls are used in the USING clause\nconst del = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `delete from ${txt}`\n}\nconst using = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `using ${txt}`\n}\n// UPDATE: first .from call is used in the UPDATE clause\n// subsequent .from calls are used in the FROM clause\nconst update = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 0, 1)\n  return txt && `update ${txt}`\n}\nconst updateFrom = ctx => {\n  const txt = fromItems(ctx, ctx.frm, 1)\n  return txt && `from ${txt}`\n}\n\nmodule.exports = {\n  methods: { ...methods, ...postgresMethods },\n  queries: {\n    ...queries,\n    select: query(\n      wth,\n      select,\n      from,\n      where,\n      group,\n      having,\n      setop,\n      order,\n      limit,\n      offset\n    ),\n    delete: query(wth, del, using, where, returning),\n    update: query(wth, update, set, updateFrom, where, returning)\n  },\n  properties: {\n    rollup: {\n      value: (...args) => {\n        return {\n          type: 'rollup',\n          args\n        }\n      }\n    },\n    cube: {\n      value: (...args) => {\n        return {\n          type: 'cube',\n          args\n        }\n      }\n    },\n    groupingSets: {\n      value: (...args) => {\n        return {\n          type: 'grouping sets',\n          args\n        }\n      }\n    }\n  }\n}","const { buildTaggedTemplate } = require('../lib-util')\n\nconst dateToYYYYMMDD = d => [\n    d.getFullYear(),\n    ('0' + (d.getMonth() + 1)).slice(-2),\n    ('0' + d.getDate()).slice(-2)\n].join('-');\n\nconst build = (ctx, arg) => {\n    // compiled expression string\n    if (arg.exp) return arg.exp\n    // tagged template argument\n    if (arg.tag) return buildTaggedTemplate(ctx, arg.tag)\n    // expression, subquery or fragment argument\n    return ctx.build(arg.arg)\n}\n\nconst unaryPre = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${op} ${build(ctx, args[0])})`\n})\n\nconst unaryPost = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op})`\n})\n\nconst unaryFunction = op => ({\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => `${op}(${build(ctx, args[0])})`\n})\n\nconst binary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op} ${build(ctx, args[1])})`\n})\n\nconst dateBinary = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => {\n        const inDate = args[1].arg;\n        if (typeof inDate.getMonth === 'function') {\n            args[1].arg = dateToYYYYMMDD(inDate);\n        }\n        return `date(${build(ctx, args[0])}, 'YYYY-MM-DD') ${op} ${build(ctx, args[1])}`\n    }\n})\n\n\nconst ternary = (op1, op2) => ({\n    minArgs: 3,\n    maxArgs: 3,\n    build: (ctx, args) =>\n        `(${build(ctx, args[0])} ${op1} ${build(ctx, args[1])} ${op2} ${build(\n            ctx,\n            args[2]\n        )})`\n})\n\nconst nary = op => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = '('\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ` ${op} `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst naryFunction = fn => ({\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        let txt = `${fn}(`\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += `, `\n            txt += build(ctx, args[i])\n        }\n        return txt + ')'\n    }\n})\n\nconst oneValue = {\n    minArgs: 1,\n    maxArgs: 1,\n    build: (ctx, args) => build(ctx, args[0])\n}\n\nconst compositeValue = {\n    minArgs: 1,\n    maxArgs: Number.MAX_SAFE_INTEGER,\n    build: (ctx, args) => {\n        if (args.length === 1) return build(ctx, args[0])\n        let txt = ''\n        for (let i = 0; i < args.length; ++i) {\n            if (i !== 0) txt += ', '\n            txt += build(ctx, args[i])\n        }\n        return args.length > 1 ? `(${txt})` : txt\n    }\n}\n\nconst buildValuesList = (ctx, values) => {\n    if (values.length === 0) throw Error('Error: .in operation values list empty')\n    let txt = '('\n    for (let i = 0; i < values.length; ++i) {\n        if (i !== 0) txt += ', '\n        txt += ctx.build(values[i])\n    }\n    return txt + ')'\n}\n\nconst membership = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, [arg1, arg2]) =>\n        `(${build(ctx, arg1)} ${op} ${Array.isArray(arg2.arg)\n            ? buildValuesList(ctx, arg2.arg)\n            : build(ctx, arg2)\n        })`\n})\n\nconst quantifiedComparison = op => ({\n    minArgs: 2,\n    maxArgs: 2,\n    build: (ctx, args) => `(${build(ctx, args[0])} ${op}(${build(ctx, args[1])}))`\n})\n\nmodule.exports = {\n    build,\n    unaryFunction,\n    unaryPre,\n    unaryPost,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n}\n","const {\n    unaryPre,\n    unaryPost,\n    unaryFunction,\n    binary,\n    ternary,\n    nary,\n    naryFunction,\n    oneValue,\n    compositeValue,\n    membership,\n    quantifiedComparison,\n    dateBinary\n} = require('./util')\n\n// value\nconst value = {\n    arg: compositeValue,\n    row: compositeValue,\n    unknown: oneValue,\n    boolean: oneValue,\n    number: oneValue,\n    string: oneValue,\n    array: oneValue,\n    json: oneValue,\n    table: oneValue\n}\n\n// boolean\nconst boolean = {\n    // logical\n    and: nary('and'),\n    or: nary('or'),\n    not: unaryFunction('not'),\n    // comparison\n    isTrue: unaryPost('is true'),\n    isNotTrue: unaryPost('is not true'),\n    isFalse: unaryPost('is false'),\n    isNotFalse: unaryPost('is not false'),\n    isUnknown: unaryPost('is unknown'),\n    isNotUnknown: unaryPost('is not unknown')\n}\n\n// comparison\nconst comparison = {\n    // binary comparison\n    eq: binary('='),\n    neq: binary('<>'),\n    lt: binary('<'),\n    gt: binary('>'),\n    lte: binary('<='),\n    gte: binary('>='),\n    // misc\n    between: ternary('between', 'and'),\n    isDistinctFrom: binary('is distinct from'),\n    isNotDistinctFrom: binary('is not distinct from'),\n    isNull: unaryPost('is null'),\n    isNotNull: unaryPost('is not null'),\n    in: membership('in'),\n    notIn: membership('not in'),\n    // quantified any\n    eqAny: quantifiedComparison('= any'),\n    neqAny: quantifiedComparison('<> any'),\n    ltAny: quantifiedComparison('< any'),\n    gtAny: quantifiedComparison('> any'),\n    lteAny: quantifiedComparison('<= any'),\n    gteAny: quantifiedComparison('>= any'),\n    // quantified all\n    eqAll: quantifiedComparison('= all'),\n    neqAll: quantifiedComparison('<> all'),\n    ltAll: quantifiedComparison('< all'),\n    gtAll: quantifiedComparison('> all'),\n    lteAll: quantifiedComparison('<= all'),\n    gteAll: quantifiedComparison('>= all')\n}\n\n// dates\nconst dateComparison = {\n    // dateEq: dateBinary('='),\n    // dateNeq: dateBinary('<>'),\n    dateLt: dateBinary('<'),\n    dateGt: dateBinary('>'),\n    dateLte: dateBinary('<='),\n    dateGte: dateBinary('>=')\n}\n\n// math\nconst math = {\n    add: binary('+'),\n    sub: binary('-'),\n    mul: binary('*'),\n    div: binary('/'),\n    mod: binary('%'),\n    exp: binary('%'),\n    sqrt: unaryPre('|/'),\n    cbrt: unaryPre('||/'),\n    fact: unaryPre('!!'),\n    abs: unaryFunction('abs')\n}\n\n// string\nconst string = {\n    like: binary('like'),\n    notLike: binary('not like')\n}\n\nconst array = {\n    unnest: naryFunction('unnest')\n}\n\nmodule.exports = {\n    ...value,\n    ...boolean,\n    ...comparison,\n    ...math,\n    ...array,\n    ...dateComparison,\n    ...string\n}\n","const expressions = require('../lib-expression')\n\nmodule.exports = { expressions }","// parameterizes given argument, function should be attached to ctx\nfunction parameterize(arg) {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    return `$${this.params.push(arg)}`\n}\n\n/** Escapes an argument for use in UNPARAMETERIZED queries. NOT SAFE AT ALL. */\nconst escape = arg => {\n    if (arg === undefined) throw Error('Error: parameter is undefined')\n    if (arg === null) return 'null'\n    if (typeof arg === 'string') return escapeLiteral(arg)\n    if (typeof arg === 'number') return '' + arg\n    if (typeof arg === 'boolean') return '' + arg\n    if (typeof arg === 'object') {\n        if (Array.isArray(arg)) {\n            return `array[${arg.map(e => escape(e)).join(', ')}]`\n        } else {\n            return escapeLiteral(JSON.stringify(arg))\n        }\n    }\n    throw Error(`Invalid argument SQL argument of type '${typeof arg}'`, arg)\n}\n\n// from https://github.com/brianc/node-postgres/blob/eb076db5d47a29c19d3212feac26cd7b6d257a95/lib/client.js#L351\nconst escapeLiteral = str => {\n    let hasBackslash = false\n    let escaped = \"'\"\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i]\n        if (c === \"'\") {\n            escaped += c + c\n        } else if (c === '\\\\') {\n            escaped += c + c\n            hasBackslash = true\n        } else {\n            escaped += c\n        }\n    }\n    escaped += \"'\"\n    if (hasBackslash === true) {\n        escaped = ' E' + escaped\n    }\n    return escaped\n}\n\nmodule.exports = {\n    parameterize,\n    escape\n}\n","const query = require('./query')\nconst expression = require('./expression')\nconst { parameterize, escape } = require('./parameterize')\n\nmodule.exports = {\n  query,\n  expression,\n  parameterize,\n  escape\n}","const core = require('./lib-core')\nconst dialect = require('./dialect-postgres')\n\nconst a = core({ dialect });\na.from = undefined;\nmodule.exports = a;\n","import _g from \"./g\";\nimport easyqb from 'easyqb';\nimport { SQW } from \"easyqb/types/sq\";\nimport { NewExpression } from \"easyqb/types/expression\";\nimport authFactory from \"./auth\";\nimport { POST_TYPES, DB_STATUS, Globals, EXECUTE_COUNT } from \"./types\";\n\ninterface IdbFactory {\n    db: (tableName?: string, userAssociatedRecordsOnly?: boolean) => SQW;\n    dbEventListener: (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void) => () => void;\n    e: NewExpression;\n}\n\nexport default function dbFactory(globals?: Globals): IdbFactory {\n    const g = globals || _g;\n    const { tokenPost } = authFactory(g);\n    let _listenerIndex = 0;\n\n    const _listeners: Record<string, (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void> = {};\n\n    function _runListeners(...params: any[]) {\n        for (const cb of Object.values(_listeners)) {\n            cb(...params)\n        }\n    }\n\n    const dbEventListener = (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void => {\n        const currKey = '' + _listenerIndex++;\n        _listeners[currKey] = callback;\n        return () => {\n            delete _listeners[currKey]\n        }\n    }\n\n    const allCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any>[] | number[]> => {\n        trx.count = \"all\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                g.analyticsEnabled && g.analyticsEventsToTrack.db_all && g.analyticsEvent('db_all', { tableName: tableName !== \"untable\" ? tableName : undefined, type: trx.type });\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n            return [];\n        }\n    }\n\n    const oneCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any> | number> => {\n        trx.count = \"one\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n        try {\n            const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n            if (res.success) {\n                g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', { tableName: tableName !== \"untable\" ? tableName : undefined, type: trx.type });\n                _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n                return res.data;\n            } else {\n                _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n                return res;\n            }\n        } catch (error) {\n            console.warn(error)\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n            return {};\n        }\n    }\n\n    const db = (tableName?: string, userAssociatedRecordsOnly?: boolean) => {\n        if (tableName && typeof tableName === \"string\") {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: tableName.toUpperCase() })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n        } else {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: \"untable\" })(\"untable\");\n        }\n    }\n    \n    return {\n        db,\n        dbEventListener,\n        e: easyqb().e\n    }\n}\n","export{A as Observable,S as ObjectObserver};const t=\"insert\",e=\"update\",o=\"delete\",n=Symbol.for(\"object-observer-meta-key-0\"),r={async:1},s={[n]:{value:null},observe:{value:function(t,e){if(\"function\"!=typeof t)throw new Error(`observer MUST be a function, got '${t}'`);const o=this[n].observers;o.some(e=>e[0]===t)?console.warn(\"observer may be bound to an observable only once; will NOT rebind\"):o.push([t,(t=>{if(!t||\"object\"!=typeof t)return null;const e={},o=[];for(const[n,r]of Object.entries(t))if(\"path\"===n){if(\"string\"!=typeof r||\"\"===r)throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');e[n]=r}else if(\"pathsOf\"===n){if(t.path)throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');if(\"string\"!=typeof r)throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');e[n]=t.pathsOf.split(\".\").filter(Boolean)}else if(\"pathsFrom\"===n){if(t.path||t.pathsOf)throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');if(\"string\"!=typeof r||\"\"===r)throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');e[n]=r}else o.push(n);if(o.length)throw new Error(`'${o.join(\", \")}' is/are not a valid observer option/s`);return e})(e)])}},unobserve:{value:function(){const t=this[n].observers;let e=t.length;if(e){let o=arguments.length;if(o)for(;o--;){let n=e;for(;n--;)t[n][0]===arguments[o]&&(t.splice(n,1),e--)}else t.splice(0)}}}},i=(t,e)=>{s[n].value=e;const o=Object.defineProperties({},s);for(const[n,r]of Object.entries(t))o[n]=u(r,n,e);return o},h=(t,e)=>{let o=0,r=t.length;s[n].value=e;const i=Object.defineProperties(new Array(r),s);for(;o<r;o++)i[o]=u(t[o],o,e);return i},a=(t,e)=>(s[n].value=e,Object.defineProperties(t,s),t),l=(t,e)=>{let o=e;if(t)if(t.path){const n=t.path;o=e.filter(t=>t.path.join(\".\")===n)}else if(t.pathsOf){const n=t.pathsOf;o=e.filter(t=>t.path.length===n.length+1||t.path.length===n.length&&(\"reverse\"===t.type||\"shuffle\"===t.type))}else if(t.pathsFrom){const n=t.pathsFrom;o=e.filter(t=>t.path.join(\".\").startsWith(n))}return o},c=(t,e)=>{try{t(e)}catch(o){console.error(`failed to notify listener ${t} with ${e}`,o)}},f=function(){const t=this.batches;this.batches=null;for(const[e,o]of t)c(e,o)},p=(t,e)=>{let o,n,r,s,i,h,a,p=t;const u=e.length;do{for(i=(o=p.observers).length;i--;)if([n,r]=o[i],(s=l(r,e)).length)if(p.options.async){let t;p.batches||(p.batches=[],queueMicrotask(f.bind(p)));for(const e of p.batches)if(e[0]===n){t=e;break}t||(t=[n,[]],p.batches.push(t)),Array.prototype.push.apply(t[1],s)}else c(n,s);let t;if(p.parent){t=new Array(u);for(let o=0;o<u;o++)a=e[o],h=[p.ownKey,...a.path],t[o]={type:a.type,path:h,value:a.value,oldValue:a.oldValue,object:a.object};e=t,p=p.parent}else p=null}while(p)},u=(t,e,o)=>t&&\"object\"==typeof t?Array.isArray(t)?new x({target:t,ownKey:e,parent:o}).proxy:ArrayBuffer.isView(t)?new M({target:t,ownKey:e,parent:o}).proxy:t instanceof Date||t instanceof Blob||t instanceof Error?t:new O({target:t,ownKey:e,parent:o}).proxy:t,y=function(){const t=this[n],e=t.target;let o,r,s;for(e.reverse(),o=0,r=e.length;o<r;o++)if((s=e[o])&&\"object\"==typeof s){const t=s[n];t&&(t.ownKey=o)}const i=[new j(\"reverse\",[],void 0,void 0,this)];return p(t,i),this},b=function(t){const e=this[n],o=e.target;let r,s,i;for(o.sort(t),r=0,s=o.length;r<s;r++)if((i=o[r])&&\"object\"==typeof i){const t=i[n];t&&(t.ownKey=r)}const h=[new j(\"shuffle\",[],void 0,void 0,this)];return p(e,h),this},w=function(o,r,s){const i=this[n],h=i.target,a=[],l=h.length,c=h.slice(0);if(r=void 0===r?0:r<0?Math.max(l+r,0):Math.min(r,l),s=void 0===s?l:s<0?Math.max(l+s,0):Math.min(s,l),r<l&&s>r){let l;h.fill(o,r,s);for(let o,f,p=r;p<s;p++)o=h[p],h[p]=u(o,p,i),p in c?((f=c[p])&&\"object\"==typeof f&&(l=f[n])&&(f=l.detach()),a.push(new j(e,[p],h[p],f,this))):a.push(new j(t,[p],h[p],void 0,this));p(i,a)}return this},d=function(t,o,r){const s=this[n],i=s.target,h=i.length;t=t<0?Math.max(h+t,0):t,o=void 0===o?0:o<0?Math.max(h+o,0):Math.min(o,h),r=void 0===r?h:r<0?Math.max(h+r,0):Math.min(r,h);const a=Math.min(r-o,h-t);if(t<h&&t!==o&&a>0){const h=i.slice(0),l=[];i.copyWithin(t,o,r);for(let o,r,c,f=t;f<t+a;f++)(o=i[f])&&\"object\"==typeof o&&(o=u(o,f,s),i[f]=o),(r=h[f])&&\"object\"==typeof r&&(c=r[n])&&(r=c.detach()),\"object\"!=typeof o&&o===r||l.push(new j(e,[f],o,r,this));p(s,l)}return this},v={pop:function(){const t=this[n],e=t.target,r=e.length-1;let s=e.pop();if(s&&\"object\"==typeof s){const t=s[n];t&&(s=t.detach())}const i=[new j(o,[r],void 0,s,this)];return p(t,i),s},push:function(){const e=this[n],o=e.target,r=arguments.length,s=new Array(r),i=o.length;for(let t=0;t<r;t++)s[t]=u(arguments[t],i+t,e);const h=Reflect.apply(o.push,o,s),a=[];for(let e=i,n=o.length;e<n;e++)a[e-i]=new j(t,[e],o[e],void 0,this);return p(e,a),h},shift:function(){const t=this[n],e=t.target;let r,s,i,h,a;for((r=e.shift())&&\"object\"==typeof r&&(a=r[n])&&(r=a.detach()),s=0,i=e.length;s<i;s++)(h=e[s])&&\"object\"==typeof h&&(a=h[n])&&(a.ownKey=s);const l=[new j(o,[0],void 0,r,this)];return p(t,l),r},unshift:function(){const e=this[n],o=e.target,r=arguments.length,s=new Array(r);for(let t=0;t<r;t++)s[t]=u(arguments[t],t,e);const i=Reflect.apply(o.unshift,o,s);for(let t,e=0,r=o.length;e<r;e++)if((t=o[e])&&\"object\"==typeof t){const o=t[n];o&&(o.ownKey=e)}const h=s.length,a=new Array(h);for(let e=0;e<h;e++)a[e]=new j(t,[e],o[e],void 0,this);return p(e,a),i},reverse:y,sort:b,fill:w,copyWithin:d,splice:function(){const r=this[n],s=r.target,i=arguments.length,h=new Array(i),a=s.length;for(let t=0;t<i;t++)h[t]=u(arguments[t],t,r);const l=0===i?0:h[0]<0?a+h[0]:h[0],c=i<2?a-l:h[1],f=Math.max(i-2,0),y=Reflect.apply(s.splice,s,h),b=s.length;let w,d,v,g;for(let t,e=0;e<b;e++)(t=s[e])&&\"object\"==typeof t&&(w=t[n])&&(w.ownKey=e);for(d=0,v=y.length;d<v;d++)(g=y[d])&&\"object\"==typeof g&&(w=g[n])&&(y[d]=w.detach());const m=[];let O;for(O=0;O<c;O++)O<f?m.push(new j(e,[l+O],s[l+O],y[O],this)):m.push(new j(o,[l+O],void 0,y[O],this));for(;O<f;O++)m.push(new j(t,[l+O],s[l+O],void 0,this));return p(r,m),y}},g={reverse:y,sort:b,fill:w,copyWithin:d,set:function(t,o){const r=this[n],s=r.target,i=t.length,h=s.slice(0);o=o||0,s.set(t,o);const a=new Array(i);for(let t=o;t<i+o;t++)a[t-o]=new j(e,[t],s[t],h[t],this);p(r,a)}};class j{constructor(t,e,o,n,r){this.type=t,this.path=e,this.value=o,this.oldValue=n,this.object=r}}class m{constructor(t,e){const{target:o,parent:n,ownKey:r}=t;n&&void 0!==r?(this.parent=n,this.ownKey=r):(this.parent=null,this.ownKey=null);const s=e(o,this);this.observers=[],this.revocable=Proxy.revocable(s,this),this.proxy=this.revocable.proxy,this.target=s,this.options=this.processOptions(t.options)}processOptions(t){if(t){if(\"object\"!=typeof t)throw new Error(`Observable options if/when provided, MAY only be an object, got '${t}'`);const e=Object.keys(t).filter(t=>!(t in r));if(e.length)throw new Error(`'${e.join(\", \")}' is/are not a valid Observable option/s`);return Object.assign({},t)}return{}}detach(){return this.parent=null,this.target}set(o,r,s){let i=o[r];if(s!==i){const h=u(s,r,this);if(o[r]=h,i&&\"object\"==typeof i){const t=i[n];t&&(i=t.detach())}const a=void 0===i?[new j(t,[r],h,void 0,this.proxy)]:[new j(e,[r],h,i,this.proxy)];p(this,a)}return!0}deleteProperty(t,e){let r=t[e];if(delete t[e],r&&\"object\"==typeof r){const t=r[n];t&&(r=t.detach())}const s=[new j(o,[e],void 0,r,this.proxy)];return p(this,s),!0}}class O extends m{constructor(t){super(t,i)}}class x extends m{constructor(t){super(t,h)}get(t,e){return v[e]||t[e]}}class M extends m{constructor(t){super(t,a)}get(t,e){return g[e]||t[e]}}const A=Object.freeze({from:(t,e)=>{if(t&&\"object\"==typeof t){if(t[n])return t;if(Array.isArray(t))return new x({target:t,ownKey:null,parent:null,options:e}).proxy;if(ArrayBuffer.isView(t))return new M({target:t,ownKey:null,parent:null,options:e}).proxy;if(t instanceof Date||t instanceof Blob||t instanceof Error)throw new Error(`${t} found to be one of a on-observable types`);return new O({target:t,ownKey:null,parent:null,options:e}).proxy}throw new Error(\"observable MAY ONLY be created from a non-null object\")},isObservable:t=>!(!t||!t[n])}),K=Symbol(\"callback-key\"),E=Symbol(\"targets-key\");class S{constructor(t){this[K]=t,this[E]=new Set,Object.freeze(this)}observe(t,e){const o=A.from(t);return o.observe(this[K],e),this[E].add(o),o}unobserve(t){t.unobserve(this[K]),this[E].delete(t)}disconnect(){for(const t of this[E])t.unobserve(this[K]);this[E].clear()}}","import React, { useState, useEffect, Fragment, useRef } from \"react\";\nimport EasybaseContext from \"./EasybaseContext\";\nimport deepEqual from \"fast-deep-equal\";\nimport {\n    EasybaseProviderProps,\n    ContextValue,\n    UseReturnValue,\n    POST_TYPES,\n    FrameConfiguration,\n    FileFromURI,\n    AddRecordOptions,\n    UpdateRecordAttachmentOptions,\n    StatusResponse,\n    ConfigureFrameOptions,\n    DeleteRecordOptions,\n    DB_STATUS,\n    EXECUTE_COUNT\n} from \"./types/types\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\nimport utilsFactory from \"../node_modules/easybasejs/src/EasybaseProvider/utils\";\nimport tableFactory from \"../node_modules/easybasejs/src/EasybaseProvider/table\";\nimport authFactory from \"../node_modules/easybasejs/src/EasybaseProvider/auth\";\nimport dbFactory from \"../node_modules/easybasejs/src/EasybaseProvider/db\";\nimport { gFactory } from \"../node_modules/easybasejs/src/EasybaseProvider/g\";\nimport { Observable } from \"object-observer\";\nimport { SQW } from \"easyqb/types/sq\";\nimport fetch from 'cross-fetch';\nconst cache = require(\"./cache\");\n\nlet _isFrameInitialized: boolean = true;\n\nlet _frameConfiguration: FrameConfiguration = {\n    offset: 0,\n    limit: 0\n};\n\nlet _effect: React.EffectCallback = () => () => { };\nlet _signInCallback: () => void;\n\nconst _observedChangeStack: Record<string, any>[] = [];\nlet _recordIdMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\nlet _proxyRecordMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\n\nconst EasybaseProvider = ({ children, ebconfig, options }: EasybaseProviderProps) => {\n    if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n        console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    } else if (!ebconfig.integration) {\n        console.error(\"Invalid ebconfig object passed. Download ebconfig.json from Easybase.io and try again.\");\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n\n    const [mounted, setMounted] = useState<boolean>(false);\n    const [isSyncing, setIsSyncing] = useState<boolean>(false);\n    const [userSignedIn, setUserSignedIn] = useState<boolean>(false);\n\n    const [_frame, _setFrame] = useState<Record<string, any>[]>([]);\n    const [_observableFrame, _setObservableFrame] = useState<any>({\n        observe: () => { },\n        unobserve: () => { }\n    });\n\n    const _ranSignInCallback = useRef<boolean>(false);\n\n    // TODO: useRef vs useState({})\n    const g = useRef(gFactory({ ebconfig, options })).current;\n\n    const {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        resetUserPassword,\n        signIn,\n        signOut,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    } = useRef(authFactory(g)).current;\n\n    const { log } = useRef(utilsFactory(g)).current;\n\n    const {\n        Query,\n        fullTableSize,\n        tableTypes\n    } = useRef(tableFactory(g)).current;\n\n    const {\n        db,\n        dbEventListener,\n        e\n    } = useRef(dbFactory(g)).current;\n\n    useEffect(() => {\n        const mount = async () => {\n            // eslint-disable-next-line dot-notation\n            const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n            if (isIE) {\n                console.error(\"EASYBASE â€” easybase-react does not support Internet Explorer. Please use a different browser.\");\n            }\n\n            g.instance = (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') ? \"React Native\" : \"React\";\n\n            if (options?.googleAnalyticsId) {\n                if (options.googleAnalyticsId.startsWith(\"G-\")) {\n                    if (g.instance === \"React\") {\n                        const { GA4React } = await import('ga-4-react');\n                        const ga4ReactLoader = new GA4React(options.googleAnalyticsId);\n                        try {\n                            const ga4React = await ga4ReactLoader.initialize();\n                            g.analyticsEvent = (eventTitle: string, params?: Record<string, any>) => ga4React.gtag('event', eventTitle, params);\n                            g.analyticsIdentify = (hashedUserId: string) => ga4React.gtag('config', options.googleAnalyticsId, { user_id: hashedUserId });\n                            g.analyticsEnabled = true;\n                            if (window.location.hash) {\n                                // Using hash router - https://github.com/unrealmanu/ga-4-react/issues/15\n                                window.onhashchange = () => {\n                                    ga4React.pageview(window.location.hash);\n                                };\n                            }\n                        } catch (error) {\n                            log(\"Analytics initialization error: \", error)\n                        }\n                    } else if (g.instance === \"React Native\") {\n                        if (options.googleAnalyticsSecret) {\n                            const genUUID = () => {\n                                // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n                                let dt = new Date().getTime();\n                                const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                                    const r = (dt + Math.random() * 16) % 16 | 0;\n                                    dt = Math.floor(dt / 16);\n                                    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n                                });\n                                return uuid;\n                            }\n\n                            let _userIdHash: string;\n                            const _mockDeviceId = genUUID();\n\n                            // Mocking a 'pageview'\n                            fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                                method: \"POST\",\n                                body: JSON.stringify({\n                                    client_id: _mockDeviceId,\n                                    events: [{ name: 'select_content' }]\n                                })\n                            });\n\n                            g.analyticsEvent = (eventTitle: string, params?: Record<string, any>) => fetch(`https://www.google-analytics.com/mp/collect?measurement_id=${options.googleAnalyticsId}&api_secret=${options.googleAnalyticsSecret}`, {\n                                method: \"POST\",\n                                body: JSON.stringify({\n                                    client_id: _mockDeviceId,\n                                    user_id: _userIdHash,\n                                    events: [{\n                                        name: eventTitle,\n                                        params\n                                    }]\n                                })\n                            });\n                            g.analyticsIdentify = (hashedUserId: string) => { _userIdHash = hashedUserId };\n                            g.analyticsEnabled = true;\n                        } else {\n                            console.error(\"EASYBASE â€” React Native analytics requires the presence of 'googleAnalyticsSecret'. To create a new secret, navigate in the Google Analytics UI to: Admin > Data Streams > choose your stream > Measurement Protocol > Create\");\n                        }\n                    }\n                } else if (options.googleAnalyticsId.startsWith(\"UA-\")) {\n                    console.error(\"EASYBASE â€” Detected Universal Analytics tag in googleAnalyticsId parameter. This version is not supported â€“Â please update to Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n                } else {\n                    console.error(\"EASYBASE â€” Unknown googleAnalyticsId version parameter. Please use Google Analytics 4.\\nhttps://support.google.com/analytics/answer/9744165?hl=en\");\n                }\n            }\n\n            if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n                const t1 = Date.now();\n                log(\"mounting...\");\n                await initAuth();\n                const res = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (res.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    setMounted(true);\n                }\n            } else {\n                g.mounted = true; // Bypass initAuth()\n\n                const cookieName = g.ebconfig.integration.slice(-10);\n\n                const {\n                    cacheToken,\n                    cacheRefreshToken,\n                    cacheSession\n                } = await cache.getCacheTokens(cookieName);\n\n                if (cacheRefreshToken) {\n                    g.token = cacheToken;\n                    g.refreshToken = cacheRefreshToken;\n                    g.session = +cacheSession;\n\n                    const fallbackMount = setTimeout(() => { setMounted(true) }, 2500);\n\n                    const [refreshTokenRes, { hash }, { fromUtf8 }] = await Promise.all([\n                        tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token,\n                            getUserID: true\n                        }),\n                        import('fast-sha256'),\n                        import('@aws-sdk/util-utf8-browser')\n                    ])\n\n                    if (refreshTokenRes.success) {\n                        clearTimeout(fallbackMount);\n                        g.token = refreshTokenRes.data.token;\n                        g.userID = refreshTokenRes.data.userID;\n                        if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n                            const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + refreshTokenRes.data.userID));\n                            const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n                            g.analyticsIdentify(hexHash);\n                            g.analyticsEvent('login', { method: \"Easybase\" });\n                        }\n                        await cache.setCacheTokens(g, cookieName);\n                        setUserSignedIn(true);\n                    } else {\n                        cache.clearCacheTokens(cookieName);\n                    }\n                }\n\n                setMounted(true);\n            }\n        }\n\n        mount();\n    }, []);\n\n    const useFrameEffect = (effect: React.EffectCallback) => {\n        _effect = effect;\n    };\n\n    useEffect(() => {\n        if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n            _signInCallback();\n            _ranSignInCallback.current = true;\n        }\n    }, [userSignedIn])\n\n    const onSignIn = (callback: () => void) => {\n        _signInCallback = callback;\n\n        if (userSignedIn === true && _ranSignInCallback.current === false && _signInCallback !== undefined) {\n            _signInCallback();\n            _ranSignInCallback.current = true;\n        }\n    }\n\n    useEffect(() => {\n        _observableFrame.observe((allChanges: any[]) => {\n            allChanges.forEach((change: any) => {\n                _observedChangeStack.push({\n                    type: change.type,\n                    path: change.path,\n                    value: change.value,\n                    _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                    // Not bringing change.object or change.oldValue\n                });\n                log(JSON.stringify({\n                    type: change.type,\n                    path: change.path,\n                    value: change.value,\n                    _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                    // Not bringing change.object or change.oldValue\n                }))\n            });\n        });\n\n        _proxyRecordMap = new WeakMap();\n        _frame.forEach((_: any, i: number) => _proxyRecordMap.set(_observableFrame[i], \"\" + i as any))\n\n        _effect(); // call useFrameEffect\n    }, [_observableFrame]);\n\n    useEffect(() => {\n        _observableFrame.unobserve();\n        _setObservableFrame(Observable.from(_frame));\n    }, [_frame]);\n\n    function Frame(): Record<string, any>[];\n    function Frame(index: number): Record<string, any>;\n    function Frame(index?: number): Record<string, any>[] | Record<string, any> {\n        if (typeof index === \"number\") {\n            return _observableFrame[index];\n        } else {\n            return _observableFrame;\n        }\n    }\n\n    const _recordIDExists = (record: Record<string, any>): Boolean => !!_recordIdMap.get(record) || !!_recordIdMap.get(_getRawRecordFromProxy(record) || {});\n    const _getRawRecordFromProxy = (proxyRecord: Record<string, any>): Record<string, any> | undefined => _proxyRecordMap.get(proxyRecord) ? _frame[+_proxyRecordMap.get(proxyRecord)!] : undefined\n\n    const configureFrame = (options: ConfigureFrameOptions): StatusResponse => {\n        _frameConfiguration = { ..._frameConfiguration };\n\n        if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n        if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n        if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n\n        _isFrameInitialized = false;\n        return {\n            message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n            success: true\n        }\n    }\n\n    const currentConfiguration = (): FrameConfiguration => ({ ..._frameConfiguration });\n\n    const addRecord = async (options: AddRecordOptions): Promise<StatusResponse> => {\n        const defaultValues: AddRecordOptions = {\n            insertAtEnd: false,\n            newRecord: {},\n            tableName: undefined\n        }\n\n        const fullOptions: AddRecordOptions = { ...defaultValues, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n            return {\n                message: res.data,\n                success: res.success\n            }\n        } catch (err) {\n            console.error(\"Easybase Error: addRecord failed \", err);\n            return {\n                message: \"Easybase Error: addRecord failed \" + err,\n                success: false,\n                errorCode: err\n            }\n        }\n    }\n\n    const deleteRecord = async (options: DeleteRecordOptions): Promise<StatusResponse> => {\n        const _frameRecord = _getRawRecordFromProxy(options.record) || _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n            const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord),\n                tableName: options.tableName\n            });\n            return {\n                success: res.success,\n                message: res.data\n            }\n        } else {\n            try {\n                const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                    record: options.record,\n                    tableName: options.tableName\n                });\n                return {\n                    success: res.success,\n                    message: res.data\n                }\n            } catch (error) {\n                console.error(\"Easybase Error: deleteRecord failed \", error);\n                return {\n                    success: false,\n                    message: \"Easybase Error: deleteRecord failed \" + error,\n                    errorCode: error.errorCode || undefined\n                }\n            }\n        }\n    }\n\n    // Only allow the deletion of one element at a time\n    // First handle shifting of the array size. Then iterate\n    const sync = async (): Promise<StatusResponse> => {\n        const _realignFrames = (newData: Record<string, any>[]) => {\n            let isNewDataTheSame = true;\n\n            if (newData.length !== _frame.length) {\n                isNewDataTheSame = false;\n            } else {\n                for (let i = 0; i < newData.length; i++) {\n                    const newDataNoId = { ...newData[i] };\n                    delete newDataNoId._id;\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                        isNewDataTheSame = false;\n                        break;\n                    }\n                }\n            }\n\n            if (!isNewDataTheSame) {\n                _recordIdMap = new WeakMap();\n                _frame.length = newData.length;\n\n                newData.forEach((currNewEle, i) => {\n                    _frame[i] = currNewEle;\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n                    delete currNewEle._id;\n                });\n                _setFrame([..._frame]);\n            }\n        }\n\n        if (isSyncing) {\n            return {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n            };\n        }\n        setIsSyncing(true);\n\n        if (_isFrameInitialized) {\n            if (_observedChangeStack.length > 0) {\n                log(\"Stack change: \", _observedChangeStack);\n                const res = await tokenPost(POST_TYPES.SYNC_STACK, {\n                    stack: _observedChangeStack,\n                    ..._frameConfiguration\n                });\n                if (res.success) {\n                    _observedChangeStack.length = 0;\n                }\n            }\n        }\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration);\n\n            // Check if the array received from db is the same as frame\n            // If not, update it and send useFrameEffect\n\n            if (res.success === false) {\n                console.error(res.data);\n                setIsSyncing(false);\n                return {\n                    success: false,\n                    message: \"\" + res.data\n                }\n            } else {\n                _isFrameInitialized = true;\n                _realignFrames(res.data);\n                setIsSyncing(false);\n                return {\n                    message: 'Success. Call frame for data',\n                    success: true\n                }\n            }\n        } catch (error) {\n            console.error(\"Easybase Error: get failed \", error);\n            setIsSyncing(false);\n            return {\n                success: false,\n                message: \"Easybase Error: get failed \" + error,\n                errorCode: error.errorCode || undefined\n            }\n        }\n    }\n\n    const updateRecordImage = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"image\");\n        return res;\n    }\n    const updateRecordVideo = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"video\");\n        return res;\n    }\n    const updateRecordFile = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"file\");\n        return res;\n    }\n\n    const _updateRecordAttachment = async (options: UpdateRecordAttachmentOptions, type: string): Promise<StatusResponse> => {\n        const _frameRecord: Record<string, any> | undefined = _getRawRecordFromProxy(options.record) || _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n            log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n            return {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n            }\n        }\n\n        const ext: string = options.attachment.name.split(\".\").pop()!.toLowerCase();\n\n        log(ext);\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        function isFileFromURI(f: File | FileFromURI): f is FileFromURI {\n            return (f as FileFromURI).uri !== undefined;\n        }\n\n        const formData = new FormData();\n\n        if (isFileFromURI(options.attachment)) {\n            formData.append(\"file\", options.attachment as any);\n            formData.append(\"name\", options.attachment.name);\n        } else {\n            formData.append(\"file\", options.attachment);\n            formData.append(\"name\", options.attachment.name);\n        }\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': options.columnName,\n            'Eb-record-id': _recordIdMap.get(_frameRecord),\n            'Eb-table-name': options.tableName\n        }\n\n        const res = await tokenPostAttachment(formData, customHeaders);\n\n        await sync();\n\n        return {\n            message: res.data,\n            success: res.success\n        };\n    }\n\n    const isUserSignedIn = (): boolean => userSignedIn;\n\n    g.newTokenCallback = () => {\n        const cookieName = g.ebconfig.integration.slice(-10);\n\n        if (!g.token) {\n            // User signed out\n            cache.clearCacheTokens(cookieName).then((_: any) => {\n                setUserSignedIn(false);\n                _ranSignInCallback.current = false;\n            });\n        } else {\n            // User signed in or refreshed token\n            cache.setCacheTokens(g, cookieName).then((_: any) => {\n                setUserSignedIn(true);\n            });\n        }\n    }\n\n    const useReturn = (dbInstance: () => SQW, deps?: React.DependencyList): UseReturnValue => {\n        // eslint-disable-next-line no-extra-parens\n        const [unsubscribe, setUnsubscribe] = useState<() => void>(() => () => { });\n        const [frame, setFrame] = useState<Record<string, any>[]>([]);\n        const [error, setError] = useState<any>(null);\n        const [loading, setLoading] = useState<boolean>(false);\n        const [dead, setDead] = useState<boolean>(false);\n\n        const doFetch = async (): Promise<void> => {\n            setLoading(true);\n            try {\n                const res = await dbInstance().all();\n                if (Array.isArray(res)) {\n                    setFrame(res as Record<string, any>[]);\n                }\n            } catch (error) {\n                setError(error);\n            }\n            setLoading(false);\n        }\n\n        useEffect(() => {\n            let isAlive = true;\n            if (!dead) {\n                const _instanceTableName: string = (dbInstance() as any)._tableName;\n                (unsubscribe as any)(\"true\");\n\n                const _listener = dbEventListener((status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => {\n                    if (!isAlive) {\n                        return;\n                    }\n                    log(_instanceTableName, status, queryType, executeCount, tableName)\n                    if ((tableName === null && _instanceTableName === \"untable\") || tableName === _instanceTableName) {\n                        if (status === DB_STATUS.SUCCESS && queryType !== \"select\") {\n                            if (typeof returned === \"number\" && returned > 0) {\n                                doFetch();\n                            } else if (Array.isArray(returned) && typeof returned[0] === \"number\" && returned[0] > 0) {\n                                doFetch();\n                            }\n                        }\n                    }\n                });\n\n                setUnsubscribe(() => (stayAlive?: string) => {\n                    _listener();\n                    stayAlive !== \"true\" && setDead(true);\n                });\n\n                doFetch();\n            }\n            return () => { isAlive = false; }\n        }, deps || []);\n\n        return {\n            frame,\n            unsubscribe,\n            error,\n            manualFetch: doFetch,\n            loading\n        };\n    };\n\n    const c: ContextValue = {\n        configureFrame,\n        addRecord,\n        deleteRecord,\n        sync,\n        updateRecordImage,\n        updateRecordVideo,\n        updateRecordFile,\n        Frame,\n        useFrameEffect,\n        fullTableSize,\n        tableTypes,\n        currentConfiguration,\n        Query,\n        signIn,\n        signOut,\n        isUserSignedIn,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        resetUserPassword,\n        onSignIn,\n        db,\n        dbEventListener,\n        e,\n        useReturn,\n        forgotPassword,\n        forgotPasswordConfirm,\n        userID\n    }\n\n    return (\n        <EasybaseContext.Provider value={c}>\n            {mounted && children}\n        </EasybaseContext.Provider>\n    )\n}\n\nexport default EasybaseProvider;\n","import { useContext } from \"react\";\nimport EasybaseContext from \"./EasybaseContext\";\n\nconst useEasybase = () => {\n    const easybase = useContext(EasybaseContext);\n    return easybase;\n}\n\nexport default useEasybase;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport { IAuth } from '../uiTypes';\n\nconst Auth = lazy(() => import('./Auth'));\n\nexport default function (props: IAuth): JSX.Element {\n    return (\n        <Suspense fallback={<Fragment />}>\n            <Auth {...props} />\n        </Suspense>\n    )\n}\n\n/**\n * Note that this wrapper component exists to force code-splitting\n */\n","import fetch from 'cross-fetch';\nimport deepEqual from 'fast-deep-equal';\nimport easyqb from 'easyqb';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar POST_TYPES;\n\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n  POST_TYPES[\"FORGOT_PASSWORD_SEND\"] = \"forgot_password_send\";\n  POST_TYPES[\"FORGOT_PASSWORD_CONFIRM\"] = \"forgot_password_confirm\";\n})(POST_TYPES || (POST_TYPES = {}));\n\nvar DB_STATUS;\n\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS || (DB_STATUS = {}));\n\nvar EXECUTE_COUNT;\n\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT || (EXECUTE_COUNT = {}));\n\nvar GlobalNamespace;\n\n(function (GlobalNamespace) {})(GlobalNamespace || (GlobalNamespace = {}));\n\nconst _g = _extends({}, GlobalNamespace);\nfunction gFactory({\n  ebconfig,\n  options\n}) {\n  const optionsObj = _extends({}, options); // Forces undefined to empty object\n\n\n  const defaultG = {\n    options: optionsObj,\n    ebconfig: ebconfig,\n    GA_USER_ID_SALT: \"m83WnAPrq\",\n    analyticsEventsToTrack: _extends({\n      login: true,\n      sign_up: true,\n      forgot_password: true,\n      forgot_password_confirm: true,\n      reset_user_password: true\n    }, optionsObj.googleAnalyticsEventTracking)\n  };\n  return _extends({}, GlobalNamespace, defaultG);\n}\n\nconst INSERT = 'insert',\n      UPDATE = 'update',\n      DELETE = 'delete',\n      REVERSE = 'reverse',\n      SHUFFLE = 'shuffle',\n      oMetaKey = Symbol('observable-meta-key'),\n      validObservableOptionKeys = {\n  async: 1\n},\n      validObserverOptionKeys = {\n  path: 1,\n  pathsOf: 1,\n  pathsFrom: 1\n},\n      processObserveOptions = function processObserveOptions(options) {\n  const result = {};\n\n  if (options.path !== undefined) {\n    if (typeof options.path !== 'string' || options.path === '') {\n      throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.path = options.path;\n  }\n\n  if (options.pathsOf !== undefined) {\n    if (options.path) {\n      throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n    }\n\n    if (typeof options.pathsOf !== 'string') {\n      throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n    }\n\n    result.pathsOf = options.pathsOf.split('.').filter(n => n);\n  }\n\n  if (options.pathsFrom !== undefined) {\n    if (options.path || options.pathsOf) {\n      throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n    }\n\n    if (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n      throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.pathsFrom = options.pathsFrom;\n  }\n\n  const invalidOptions = Object.keys(options).filter(option => !validObserverOptionKeys.hasOwnProperty(option));\n\n  if (invalidOptions.length) {\n    throw new Error(`'${invalidOptions.join(', ')}' is/are not a valid observer option/s`);\n  }\n\n  return result;\n},\n      observe = function observe(observer, options) {\n  if (typeof observer !== 'function') {\n    throw new Error(`observer MUST be a function, got '${observer}'`);\n  }\n\n  const oMeta = this[oMetaKey],\n        observers = oMeta.observers;\n\n  if (!observers.some(o => o[0] === observer)) {\n    let opts;\n\n    if (options) {\n      opts = processObserveOptions(options);\n    } else {\n      opts = {};\n    }\n\n    observers.push([observer, opts]);\n  } else {\n    console.warn('observer may be bound to an observable only once; will NOT rebind');\n  }\n},\n      unobserve = function unobserve() {\n  const oMeta = this[oMetaKey];\n  const observers = oMeta.observers;\n  let ol = observers.length;\n\n  if (ol) {\n    let al = arguments.length;\n\n    if (al) {\n      while (al--) {\n        let i = ol;\n\n        while (i--) {\n          if (observers[i][0] === arguments[al]) {\n            observers.splice(i, 1);\n            ol--;\n          }\n        }\n      }\n    } else {\n      observers.splice(0);\n    }\n  }\n},\n      propertiesBluePrint = {\n  [oMetaKey]: {\n    value: null\n  },\n  observe: {\n    value: observe\n  },\n  unobserve: {\n    value: unobserve\n  }\n},\n      prepareObject = function prepareObject(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  const target = Object.defineProperties({}, propertiesBluePrint);\n\n  for (const key of Object.keys(source)) {\n    target[key] = getObservedOf(source[key], key, oMeta);\n  }\n\n  return target;\n},\n      prepareArray = function prepareArray(source, oMeta) {\n  let i = 0,\n      l = source.length;\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  const target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\n  for (; i < l; i++) {\n    target[i] = getObservedOf(source[i], i, oMeta);\n  }\n\n  return target;\n},\n      prepareTypedArray = function prepareTypedArray(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  Object.defineProperties(source, propertiesBluePrint);\n  return source;\n},\n      filterChanges = function filterChanges(options, changes) {\n  let result = changes;\n\n  if (options.path) {\n    const oPath = options.path;\n    result = changes.filter(change => change.path.join('.') === oPath);\n  } else if (options.pathsOf) {\n    const oPathsOf = options.pathsOf;\n    result = changes.filter(change => change.path.length === oPathsOf.length + 1 || change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE));\n  } else if (options.pathsFrom) {\n    const oPathsFrom = options.pathsFrom;\n    result = changes.filter(change => change.path.join('.').startsWith(oPathsFrom));\n  }\n\n  return result;\n},\n      callObserverSafe = function callObserverSafe(listener, changes) {\n  try {\n    listener(changes);\n  } catch (e) {\n    console.error(`failed to notify listener ${listener} with ${changes}`, e);\n  }\n},\n      callObserversFromMT = function callObserversFromMT() {\n  const batches = this.batches;\n  this.batches = null;\n\n  for (const [listener, options] of batches) {\n    callObserverSafe(listener, options);\n  }\n},\n      callObservers = function callObservers(oMeta, changes) {\n  let currentObservable = oMeta;\n  let observers, target, options, relevantChanges, i, newPath, tmp;\n  const l = changes.length;\n\n  do {\n    observers = currentObservable.observers;\n    i = observers.length;\n\n    while (i--) {\n      [target, options] = observers[i];\n      relevantChanges = filterChanges(options, changes);\n\n      if (relevantChanges.length) {\n        if (currentObservable.options.async) {\n          //\tthis is the async dispatch handling\n          if (!currentObservable.batches) {\n            currentObservable.batches = [];\n            queueMicrotask(callObserversFromMT.bind(currentObservable));\n          }\n\n          let rb = currentObservable.batches.find(b => b[0] === target);\n\n          if (!rb) {\n            rb = [target, []];\n            currentObservable.batches.push(rb);\n          }\n\n          Array.prototype.push.apply(rb[1], relevantChanges);\n        } else {\n          //\tthis is the naive straight forward synchronous dispatch\n          callObserverSafe(target, relevantChanges);\n        }\n      }\n    }\n\n    let tmpa;\n\n    if (currentObservable.parent) {\n      tmpa = new Array(l);\n\n      for (let _i = 0; _i < l; _i++) {\n        tmp = changes[_i];\n        newPath = [currentObservable.ownKey, ...tmp.path];\n        tmpa[_i] = {\n          type: tmp.type,\n          path: newPath,\n          value: tmp.value,\n          oldValue: tmp.oldValue,\n          object: tmp.object\n        };\n      }\n\n      changes = tmpa;\n      currentObservable = currentObservable.parent;\n    } else {\n      currentObservable = null;\n    }\n  } while (currentObservable);\n},\n      getObservedOf = function getObservedOf(item, key, parent) {\n  if (!item || typeof item !== 'object') {\n    return item;\n  } else if (Array.isArray(item)) {\n    return new ArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (ArrayBuffer.isView(item)) {\n    return new TypedArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (item instanceof Date || item instanceof Error) {\n    return item;\n  } else {\n    return new ObjectOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  }\n},\n      proxiedPop = function proxiedPop() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        poppedIndex = target.length - 1;\n  let popResult = target.pop();\n\n  if (popResult && typeof popResult === 'object') {\n    const tmpObserved = popResult[oMetaKey];\n\n    if (tmpObserved) {\n      popResult = tmpObserved.detach();\n    }\n  }\n\n  const changes = [{\n    type: DELETE,\n    path: [poppedIndex],\n    oldValue: popResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return popResult;\n},\n      proxiedPush = function proxiedPush() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        l = arguments.length,\n        pushContent = new Array(l),\n        initialLength = target.length;\n\n  for (let i = 0; i < l; i++) {\n    pushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n  }\n\n  const pushResult = Reflect.apply(target.push, target, pushContent);\n  const changes = [];\n\n  for (let i = initialLength, _l = target.length; i < _l; i++) {\n    changes[i - initialLength] = {\n      type: INSERT,\n      path: [i],\n      value: target[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return pushResult;\n},\n      proxiedShift = function proxiedShift() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let shiftResult, i, l, item, tmpObserved;\n  shiftResult = target.shift();\n\n  if (shiftResult && typeof shiftResult === 'object') {\n    tmpObserved = shiftResult[oMetaKey];\n\n    if (tmpObserved) {\n      shiftResult = tmpObserved.detach();\n    }\n  } //\tupdate indices of the remaining items\n\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: DELETE,\n    path: [0],\n    oldValue: shiftResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return shiftResult;\n},\n      proxiedUnshift = function proxiedUnshift() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        al = arguments.length,\n        unshiftContent = new Array(al);\n\n  for (let i = 0; i < al; i++) {\n    unshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n  }\n\n  const unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n  for (let i = 0, _l2 = target.length, item; i < _l2; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  } //\tpublish changes\n\n\n  const l = unshiftContent.length;\n  const changes = new Array(l);\n\n  for (let i = 0; i < l; i++) {\n    changes[i] = {\n      type: INSERT,\n      path: [i],\n      value: target[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return unshiftResult;\n},\n      proxiedReverse = function proxiedReverse() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let i, l, item;\n  target.reverse();\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: REVERSE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n      proxiedSort = function proxiedSort(comparator) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target;\n  let i, l, item;\n  target.sort(comparator);\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      const tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  const changes = [{\n    type: SHUFFLE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n      proxiedFill = function proxiedFill(filVal, start, end) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        changes = [],\n        tarLen = target.length,\n        prev = target.slice(0);\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n\n  if (start < tarLen && end > start) {\n    target.fill(filVal, start, end);\n    let tmpObserved;\n\n    for (let i = start, item, tmpTarget; i < end; i++) {\n      item = target[i];\n      target[i] = getObservedOf(item, i, oMeta);\n\n      if (prev.hasOwnProperty(i)) {\n        tmpTarget = prev[i];\n\n        if (tmpTarget && typeof tmpTarget === 'object') {\n          tmpObserved = tmpTarget[oMetaKey];\n\n          if (tmpObserved) {\n            tmpTarget = tmpObserved.detach();\n          }\n        }\n\n        changes.push({\n          type: UPDATE,\n          path: [i],\n          value: target[i],\n          oldValue: tmpTarget,\n          object: this\n        });\n      } else {\n        changes.push({\n          type: INSERT,\n          path: [i],\n          value: target[i],\n          object: this\n        });\n      }\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n      proxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        tarLen = target.length;\n  dest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n  const len = Math.min(end - start, tarLen - dest);\n\n  if (dest < tarLen && dest !== start && len > 0) {\n    const prev = target.slice(0),\n          changes = [];\n    target.copyWithin(dest, start, end);\n\n    for (let i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n      //\tupdate newly placed observables, if any\n      nItem = target[i];\n\n      if (nItem && typeof nItem === 'object') {\n        nItem = getObservedOf(nItem, i, oMeta);\n        target[i] = nItem;\n      } //\tdetach overridden observables, if any\n\n\n      oItem = prev[i];\n\n      if (oItem && typeof oItem === 'object') {\n        tmpObserved = oItem[oMetaKey];\n\n        if (tmpObserved) {\n          oItem = tmpObserved.detach();\n        }\n      }\n\n      if (typeof nItem !== 'object' && nItem === oItem) {\n        continue;\n      }\n\n      changes.push({\n        type: UPDATE,\n        path: [i],\n        value: nItem,\n        oldValue: oItem,\n        object: this\n      });\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n      proxiedSplice = function proxiedSplice() {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        splLen = arguments.length,\n        spliceContent = new Array(splLen),\n        tarLen = target.length; //\tobservify the newcomers\n\n  for (let _i2 = 0; _i2 < splLen; _i2++) {\n    spliceContent[_i2] = getObservedOf(arguments[_i2], _i2, oMeta);\n  } //\tcalculate pointers\n\n\n  const startIndex = splLen === 0 ? 0 : spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0],\n        removed = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n        inserted = Math.max(splLen - 2, 0),\n        spliceResult = Reflect.apply(target.splice, target, spliceContent),\n        newTarLen = target.length; //\treindex the paths\n\n  let tmpObserved;\n\n  for (let _i3 = 0, _item; _i3 < newTarLen; _i3++) {\n    _item = target[_i3];\n\n    if (_item && typeof _item === 'object') {\n      tmpObserved = _item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = _i3;\n      }\n    }\n  } //\tdetach removed objects\n\n\n  let i, l, item;\n\n  for (i = 0, l = spliceResult.length; i < l; i++) {\n    item = spliceResult[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        spliceResult[i] = tmpObserved.detach();\n      }\n    }\n  }\n\n  const changes = [];\n  let index;\n\n  for (index = 0; index < removed; index++) {\n    if (index < inserted) {\n      changes.push({\n        type: UPDATE,\n        path: [startIndex + index],\n        value: target[startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    } else {\n      changes.push({\n        type: DELETE,\n        path: [startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    }\n  }\n\n  for (; index < inserted; index++) {\n    changes.push({\n      type: INSERT,\n      path: [startIndex + index],\n      value: target[startIndex + index],\n      object: this\n    });\n  }\n\n  callObservers(oMeta, changes);\n  return spliceResult;\n},\n      proxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n  const oMeta = this[oMetaKey],\n        target = oMeta.target,\n        souLen = source.length,\n        prev = target.slice(0);\n  offset = offset || 0;\n  target.set(source, offset);\n  const changes = new Array(souLen);\n\n  for (let i = offset; i < souLen + offset; i++) {\n    changes[i - offset] = {\n      type: UPDATE,\n      path: [i],\n      value: target[i],\n      oldValue: prev[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n},\n      proxiedArrayMethods = {\n  pop: proxiedPop,\n  push: proxiedPush,\n  shift: proxiedShift,\n  unshift: proxiedUnshift,\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  splice: proxiedSplice\n},\n      proxiedTypedArrayMethods = {\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  set: proxiedTypedArraySet\n};\n\nclass OMetaBase {\n  constructor(properties, cloningFunction) {\n    const {\n      target,\n      parent,\n      ownKey\n    } = properties;\n\n    if (parent && ownKey !== undefined) {\n      this.parent = parent;\n      this.ownKey = ownKey;\n    } else {\n      this.parent = null;\n      this.ownKey = null;\n    }\n\n    const targetClone = cloningFunction(target, this);\n    this.observers = [];\n    this.revocable = Proxy.revocable(targetClone, this);\n    this.proxy = this.revocable.proxy;\n    this.target = targetClone;\n    this.options = this.processOptions(properties.options);\n  }\n\n  processOptions(options) {\n    if (options) {\n      if (typeof options !== 'object') {\n        throw new Error(`Observable options if/when provided, MAY only be an object, got '${options}'`);\n      }\n\n      const invalidOptions = Object.keys(options).filter(option => !validObservableOptionKeys.hasOwnProperty(option));\n\n      if (invalidOptions.length) {\n        throw new Error(`'${invalidOptions.join(', ')}' is/are not a valid Observable option/s`);\n      }\n\n      return Object.assign({}, options);\n    } else {\n      return {};\n    }\n  }\n\n  detach() {\n    this.parent = null;\n    return this.target;\n  }\n\n  set(target, key, value) {\n    let oldValue = target[key];\n\n    if (value !== oldValue) {\n      const newValue = getObservedOf(value, key, this);\n      target[key] = newValue;\n\n      if (oldValue && typeof oldValue === 'object') {\n        const tmpObserved = oldValue[oMetaKey];\n\n        if (tmpObserved) {\n          oldValue = tmpObserved.detach();\n        }\n      }\n\n      const changes = oldValue === undefined ? [{\n        type: INSERT,\n        path: [key],\n        value: newValue,\n        object: this.proxy\n      }] : [{\n        type: UPDATE,\n        path: [key],\n        value: newValue,\n        oldValue: oldValue,\n        object: this.proxy\n      }];\n      callObservers(this, changes);\n    }\n\n    return true;\n  }\n\n  deleteProperty(target, key) {\n    let oldValue = target[key];\n    delete target[key];\n\n    if (oldValue && typeof oldValue === 'object') {\n      const tmpObserved = oldValue[oMetaKey];\n\n      if (tmpObserved) {\n        oldValue = tmpObserved.detach();\n      }\n    }\n\n    const changes = [{\n      type: DELETE,\n      path: [key],\n      oldValue: oldValue,\n      object: this.proxy\n    }];\n    callObservers(this, changes);\n    return true;\n  }\n\n}\n\nclass ObjectOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareObject);\n  }\n\n}\n\nclass ArrayOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareArray);\n  }\n\n  get(target, key) {\n    if (proxiedArrayMethods.hasOwnProperty(key)) {\n      return proxiedArrayMethods[key];\n    } else {\n      return target[key];\n    }\n  }\n\n}\n\nclass TypedArrayOMeta extends OMetaBase {\n  constructor(properties) {\n    super(properties, prepareTypedArray);\n  }\n\n  get(target, key) {\n    if (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n      return proxiedTypedArrayMethods[key];\n    } else {\n      return target[key];\n    }\n  }\n\n}\n\nclass Observable {\n  constructor() {\n    throw new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n  }\n\n  static from(target, options) {\n    if (!target || typeof target !== 'object') {\n      throw new Error('observable MAY ONLY be created from a non-null object');\n    } else if (target[oMetaKey]) {\n      return target;\n    } else if (Array.isArray(target)) {\n      return new ArrayOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    } else if (ArrayBuffer.isView(target)) {\n      return new TypedArrayOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    } else if (target instanceof Date || target instanceof Error) {\n      throw new Error(`${target} found to be one of a on-observable types`);\n    } else {\n      return new ObjectOMeta({\n        target: target,\n        ownKey: null,\n        parent: null,\n        options: options\n      }).proxy;\n    }\n  }\n\n  static isObservable(input) {\n    return !!(input && input[oMetaKey]);\n  }\n\n}\n\nObject.freeze(Observable);\n\nvar imageExtensions = [\n\t\"ase\",\n\t\"art\",\n\t\"bmp\",\n\t\"blp\",\n\t\"cd5\",\n\t\"cit\",\n\t\"cpt\",\n\t\"cr2\",\n\t\"cut\",\n\t\"dds\",\n\t\"dib\",\n\t\"djvu\",\n\t\"egt\",\n\t\"exif\",\n\t\"gif\",\n\t\"gpl\",\n\t\"grf\",\n\t\"icns\",\n\t\"ico\",\n\t\"iff\",\n\t\"jng\",\n\t\"jpeg\",\n\t\"jpg\",\n\t\"jfif\",\n\t\"jp2\",\n\t\"jps\",\n\t\"lbm\",\n\t\"max\",\n\t\"miff\",\n\t\"mng\",\n\t\"msp\",\n\t\"nitf\",\n\t\"ota\",\n\t\"pbm\",\n\t\"pc1\",\n\t\"pc2\",\n\t\"pc3\",\n\t\"pcf\",\n\t\"pcx\",\n\t\"pdn\",\n\t\"pgm\",\n\t\"PI1\",\n\t\"PI2\",\n\t\"PI3\",\n\t\"pict\",\n\t\"pct\",\n\t\"pnm\",\n\t\"pns\",\n\t\"ppm\",\n\t\"psb\",\n\t\"psd\",\n\t\"pdd\",\n\t\"psp\",\n\t\"px\",\n\t\"pxm\",\n\t\"pxr\",\n\t\"qfx\",\n\t\"raw\",\n\t\"rle\",\n\t\"sct\",\n\t\"sgi\",\n\t\"rgb\",\n\t\"int\",\n\t\"bw\",\n\t\"tga\",\n\t\"tiff\",\n\t\"tif\",\n\t\"vtf\",\n\t\"xbm\",\n\t\"xcf\",\n\t\"xpm\",\n\t\"3dv\",\n\t\"amf\",\n\t\"ai\",\n\t\"awg\",\n\t\"cgm\",\n\t\"cdr\",\n\t\"cmx\",\n\t\"dxf\",\n\t\"e2d\",\n\t\"egt\",\n\t\"eps\",\n\t\"fs\",\n\t\"gbr\",\n\t\"odg\",\n\t\"svg\",\n\t\"stl\",\n\t\"vrml\",\n\t\"x3d\",\n\t\"sxd\",\n\t\"v2d\",\n\t\"vnd\",\n\t\"wmf\",\n\t\"emf\",\n\t\"art\",\n\t\"xar\",\n\t\"png\",\n\t\"webp\",\n\t\"jxr\",\n\t\"hdp\",\n\t\"wdp\",\n\t\"cur\",\n\t\"ecw\",\n\t\"iff\",\n\t\"lbm\",\n\t\"liff\",\n\t\"nrrd\",\n\t\"pam\",\n\t\"pcx\",\n\t\"pgf\",\n\t\"sgi\",\n\t\"rgb\",\n\t\"rgba\",\n\t\"bw\",\n\t\"int\",\n\t\"inta\",\n\t\"sid\",\n\t\"ras\",\n\t\"sun\",\n\t\"tga\"\n];\n\nvar videoExtensions = [\n\t\"3g2\",\n\t\"3gp\",\n\t\"aaf\",\n\t\"asf\",\n\t\"avchd\",\n\t\"avi\",\n\t\"drc\",\n\t\"flv\",\n\t\"m2v\",\n\t\"m4p\",\n\t\"m4v\",\n\t\"mkv\",\n\t\"mng\",\n\t\"mov\",\n\t\"mp2\",\n\t\"mp4\",\n\t\"mpe\",\n\t\"mpeg\",\n\t\"mpg\",\n\t\"mpv\",\n\t\"mxf\",\n\t\"nsv\",\n\t\"ogg\",\n\t\"ogv\",\n\t\"qt\",\n\t\"rm\",\n\t\"rmvb\",\n\t\"roq\",\n\t\"svi\",\n\t\"vob\",\n\t\"webm\",\n\t\"wmv\",\n\t\"yuv\"\n];\n\nfunction utilsFactory(globals) {\n  const g = globals || _g;\n\n  const generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\n\n  const generateAuthBody = () => {\n    const stamp = Date.now();\n    return {\n      token: g.token,\n      token_time: ~~(g.session / (stamp % 64)),\n      now: stamp\n    };\n  };\n\n  function log(...params) {\n    if (g.options.logging) {\n      console.log(\"EASYBASE â€” \", ...params);\n    }\n  }\n\n  return {\n    generateAuthBody,\n    generateBareUrl,\n    log\n  };\n}\n\nfunction authFactory(globals) {\n  const g = globals || _g;\n  const {\n    generateBareUrl,\n    generateAuthBody,\n    log\n  } = utilsFactory(g);\n\n  function _clearTokens() {\n    g.token = \"\";\n    g.refreshToken = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  }\n\n  const getUserAttributes = async () => {\n    try {\n      const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n      g.analyticsEnabled && g.analyticsEventsToTrack.get_user_attributes && g.analyticsEvent('get_user_attributes');\n      return attrsRes.data;\n    } catch (error) {\n      log(error);\n      return error;\n    }\n  };\n\n  const setUserAttribute = async (key, value) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n        key,\n        value\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.set_user_attribute && g.analyticsEvent('set_user_attribute', {\n        key\n      });\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const forgotPassword = async (username, emailTemplate) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_SEND, {\n        username,\n        emailTemplate\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password && g.analyticsEvent('forgot_password');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const forgotPasswordConfirm = async (code, username, newPassword) => {\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.FORGOT_PASSWORD_CONFIRM, {\n        username,\n        code,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.forgot_password_confirm && g.analyticsEvent('forgot_password_confirm');\n      return {\n        success: setAttrsRes.success,\n        message: setAttrsRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const signUp = async (newUserID, password, userAttributes) => {\n    try {\n      const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n        newUserID,\n        password,\n        userAttributes\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.sign_up && g.analyticsEvent('sign_up', {\n        method: \"Easybase\"\n      });\n      return {\n        success: signUpRes.success,\n        message: signUpRes.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const signIn = async (userID, password) => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          session: g.session,\n          instance: g.instance,\n          userID,\n          password\n        })\n      });\n      const resData = await res.json();\n\n      if (resData.token) {\n        g.token = resData.token;\n        g.refreshToken = resData.refreshToken;\n        g.newTokenCallback();\n        g.userID = resData.userID;\n        g.mounted = true;\n        const [validTokenRes, {\n          hash\n        }, {\n          fromUtf8\n        }] = await Promise.all([tokenPost(POST_TYPES.VALID_TOKEN), import('fast-sha256'), import('@aws-sdk/util-utf8-browser')]);\n        const elapsed = Date.now() - t1;\n\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n\n          if (g.analyticsEnabled && g.analyticsEventsToTrack.login) {\n            const hashOut = hash(fromUtf8(g.GA_USER_ID_SALT + resData.userID));\n            const hexHash = Array.prototype.map.call(hashOut, x => ('00' + x.toString(16)).slice(-2)).join('');\n            g.analyticsIdentify(hexHash);\n            g.analyticsEvent('login', {\n              method: \"Easybase\"\n            });\n          }\n\n          return {\n            success: true,\n            message: \"Successfully signed in user\"\n          };\n        } else {\n          return {\n            success: false,\n            message: \"Could not sign in user\"\n          };\n        }\n      } else {\n        return {\n          success: false,\n          message: \"Could not sign in user\",\n          errorCode: resData.ErrorCode || undefined\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Could not sign in user\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const resetUserPassword = async (currentPassword, newPassword) => {\n    if (typeof newPassword !== \"string\" || newPassword.length > 100) {\n      return {\n        success: false,\n        message: \"newPassword must be of type string\"\n      };\n    }\n\n    if (typeof currentPassword !== \"string\" || currentPassword.length > 100) {\n      return {\n        success: false,\n        message: \"currentPassword must be of type string\"\n      };\n    }\n\n    try {\n      const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, {\n        currentPassword,\n        newPassword\n      });\n      g.analyticsEnabled && g.analyticsEventsToTrack.reset_user_password && g.analyticsEvent('reset_user_password');\n      return {\n        success: setAttrsRes.success,\n        message: JSON.stringify(setAttrsRes.data)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Error\",\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const userID = () => g.userID || undefined;\n\n  const signOut = () => {\n    g.token = \"\";\n    g.newTokenCallback();\n    g.userID = undefined;\n  };\n\n  const initAuth = async () => {\n    const t1 = Date.now();\n    g.session = Math.floor(100000000 + Math.random() * 900000000);\n    log(`Handshaking on${g.instance} instance`);\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n    try {\n      const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n        method: \"POST\",\n        headers: {\n          'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          version: g.ebconfig.version,\n          tt: g.ebconfig.tt,\n          session: g.session,\n          instance: g.instance\n        })\n      });\n      const resData = await res.json();\n\n      if (resData.token) {\n        g.token = resData.token;\n        g.mounted = true;\n        const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n        const elapsed = Date.now() - t1;\n\n        if (validTokenRes.success) {\n          log(\"Valid auth initiation in \" + elapsed + \"ms\");\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  };\n\n  const tokenPost = async (postType, body) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: {\n        'Eb-Post-Req': postType,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(_extends({\n        _auth: generateAuthBody()\n      }, body))\n    });\n    const resData = await res.json();\n\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPost(postType, body);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n\n        return tokenPost(postType, body);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n\n  const tokenPostAttachment = async (formData, customHeaders) => {\n    if (!g.mounted) {\n      await initAuth();\n    }\n\n    const regularAuthbody = generateAuthBody();\n    const attachmentAuth = {\n      'Eb-token': regularAuthbody.token,\n      'Eb-token-time': regularAuthbody.token_time,\n      'Eb-now': regularAuthbody.now\n    };\n    const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n    const res = await fetch(generateBareUrl(integrationType, g.ebconfig.integration), {\n      method: \"POST\",\n      headers: _extends({\n        'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT\n      }, customHeaders, attachmentAuth),\n      body: formData\n    });\n    const resData = await res.json();\n\n    if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n      if (resData.ErrorCode === \"TokenExpired\") {\n        if (integrationType === \"PROJECT\") {\n          try {\n            const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n              refreshToken: g.refreshToken,\n              token: g.token\n            });\n\n            if (req_res.success) {\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return tokenPostAttachment(formData, customHeaders);\n            } else {\n              throw new Error(req_res.data || \"Error\");\n            }\n          } catch (error) {\n            _clearTokens();\n\n            return {\n              success: false,\n              data: error.message || error\n            };\n          }\n        } else {\n          await initAuth();\n        }\n\n        return tokenPostAttachment(formData, customHeaders);\n      } else {\n        const err = new Error(resData.body || resData.ErrorCode || resData.code || \"Error\");\n        err.errorCode = resData.ErrorCode || resData.code;\n        throw err;\n      }\n    } else {\n      return {\n        success: resData.success,\n        data: resData.body\n      };\n    }\n  };\n\n  return {\n    initAuth,\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    signIn,\n    signOut,\n    resetUserPassword,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n}\n\nfunction tableFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost\n  } = authFactory(g);\n\n  const Query = async options => {\n    const defaultOptions = {\n      queryName: \"\"\n    };\n\n    const fullOptions = _extends({}, defaultOptions, options);\n\n    const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.query && g.analyticsEvent('query', {\n        queryName: fullOptions.queryName,\n        tableName: fullOptions.tableName || undefined\n      });\n      return res.data;\n    } else {\n      return [];\n    }\n  };\n\n  async function fullTableSize(tableName) {\n    const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? {\n      tableName\n    } : {});\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.full_table_size && g.analyticsEvent('full_table_size', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return 0;\n    }\n  }\n\n  async function tableTypes(tableName) {\n    const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? {\n      tableName\n    } : {});\n\n    if (res.success) {\n      g.analyticsEnabled && g.analyticsEventsToTrack.table_types && g.analyticsEvent('table_types', {\n        tableName: tableName || undefined\n      });\n      return res.data;\n    } else {\n      return {};\n    }\n  }\n\n  return {\n    Query,\n    fullTableSize,\n    tableTypes\n  };\n}\n\nfunction dbFactory(globals) {\n  const g = globals || _g;\n  const {\n    tokenPost\n  } = authFactory(g);\n  let _listenerIndex = 0;\n  const _listeners = {};\n\n  function _runListeners(...params) {\n    for (const cb of Object.values(_listeners)) {\n      cb(...params);\n    }\n  }\n\n  const dbEventListener = callback => {\n    const currKey = '' + _listenerIndex++;\n    _listeners[currKey] = callback;\n    return () => {\n      delete _listeners[currKey];\n    };\n  };\n\n  const allCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"all\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n    _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n\n    try {\n      const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_all && g.analyticsEvent('db_all', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n\n        _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n\n      _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n\n      return [];\n    }\n  };\n\n  const oneCallback = async (trx, tableName, userAssociatedRecordsOnly) => {\n    trx.count = \"one\";\n    trx.tableName = tableName;\n    if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n    _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n\n    try {\n      const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n\n      if (res.success) {\n        g.analyticsEnabled && g.analyticsEventsToTrack.db_one && g.analyticsEvent('db_one', {\n          tableName: tableName !== \"untable\" ? tableName : undefined,\n          type: trx.type\n        });\n\n        _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n\n        return res.data;\n      } else {\n        _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n\n        return res;\n      }\n    } catch (error) {\n      console.warn(error);\n\n      _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n\n      return {};\n    }\n  };\n\n  const db = (tableName, userAssociatedRecordsOnly) => {\n    if (tableName && typeof tableName === \"string\") {\n      return easyqb({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: tableName.toUpperCase()\n      })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n    } else {\n      return easyqb({\n        allCallback,\n        oneCallback,\n        userAssociatedRecordsOnly,\n        tableName: \"untable\"\n      })(\"untable\");\n    }\n  };\n\n  return {\n    db,\n    dbEventListener,\n    e: easyqb().e\n  };\n}\n\nfunction EasybaseProvider({\n  ebconfig,\n  options\n}) {\n  if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n    console.error(\"No ebconfig object passed. do `import ebconfig from \\\"./ebconfig.js\\\"` and pass it to the Easybase provider\");\n    return;\n  } else if (!ebconfig.integration) {\n    console.error(\"Invalid ebconfig object passed. Download ebconfig.js from Easybase.io and try again.\");\n    return;\n  }\n\n  const g = gFactory({\n    ebconfig,\n    options\n  });\n  const {\n    tokenPost,\n    tokenPostAttachment,\n    signUp,\n    setUserAttribute,\n    getUserAttributes,\n    signIn,\n    signOut,\n    resetUserPassword,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  } = authFactory(g);\n  const {\n    Query,\n    fullTableSize,\n    tableTypes\n  } = tableFactory(g);\n  const {\n    db,\n    dbEventListener,\n    e\n  } = dbFactory(g);\n  const {\n    log\n  } = utilsFactory(g); // eslint-disable-next-line dot-notation\n\n  const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n  if (isIE) {\n    console.error(\"EASYBASE â€” easybasejs does not support Internet Explorer. Please use a different browser.\");\n  }\n\n  if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n    g.mounted = false;\n  } else {\n    g.mounted = true;\n  }\n\n  g.instance = \"Node\";\n  let _isFrameInitialized = true;\n  let _frameConfiguration = {\n    offset: 0,\n    limit: 0\n  };\n  const _observedChangeStack = [];\n\n  let _recordIdMap = new WeakMap();\n\n  let _observableFrame = {\n    observe: _ => {},\n    unobserve: () => {}\n  };\n  let _frame = [];\n  let isSyncing = false;\n\n  function Frame(index) {\n    if (typeof index === \"number\") {\n      return _observableFrame[index];\n    } else {\n      return _observableFrame;\n    }\n  }\n\n  const _recordIDExists = record => !!_recordIdMap.get(record);\n\n  const configureFrame = options => {\n    _frameConfiguration = _extends({}, _frameConfiguration);\n    if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n    if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n    if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n    _isFrameInitialized = false;\n    return {\n      message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n      success: true\n    };\n  };\n\n  const currentConfiguration = () => _extends({}, _frameConfiguration);\n\n  const deleteRecord = async options => {\n    const _frameRecord = _frame.find(ele => deepEqual(ele, options.record));\n\n    if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n      const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n        _id: _recordIdMap.get(_frameRecord),\n        tableName: options.tableName\n      });\n      return {\n        success: res.success,\n        message: res.data\n      };\n    } else {\n      try {\n        const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n          record: options.record,\n          tableName: options.tableName\n        });\n        return {\n          success: res.success,\n          message: res.data\n        };\n      } catch (error) {\n        console.error(\"Easybase Error: deleteRecord failed \", error);\n        return {\n          success: false,\n          message: \"Easybase Error: deleteRecord failed \" + error,\n          errorCode: error.errorCode || undefined\n        };\n      }\n    }\n  };\n\n  const addRecord = async options => {\n    const defaultValues = {\n      insertAtEnd: false,\n      newRecord: {},\n      tableName: undefined\n    };\n\n    const fullOptions = _extends({}, defaultValues, options);\n\n    try {\n      const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n      return {\n        message: res.data,\n        success: res.success\n      };\n    } catch (error) {\n      console.error(\"Easybase Error: addRecord failed \", error);\n      return {\n        message: \"Easybase Error: addRecord failed \" + error,\n        success: false,\n        errorCode: error.errorCode || undefined\n      };\n    }\n  }; // Only allow the deletion of one element at a time\n  // First handle shifting of the array size. Then iterate\n\n\n  const sync = async () => {\n    const _realignFrames = newData => {\n      let isNewDataTheSame = true;\n\n      if (newData.length !== _frame.length) {\n        isNewDataTheSame = false;\n      } else {\n        for (let i = 0; i < newData.length; i++) {\n          const newDataNoId = _extends({}, newData[i]);\n\n          delete newDataNoId._id;\n\n          if (!deepEqual(newDataNoId, _frame[i])) {\n            isNewDataTheSame = false;\n            break;\n          }\n        }\n      }\n\n      if (!isNewDataTheSame) {\n        const oldframe = [..._frame];\n        oldframe.length = newData.length;\n        _recordIdMap = new WeakMap();\n\n        for (let i = 0; i < newData.length; i++) {\n          const currNewEle = newData[i];\n\n          _recordIdMap.set(currNewEle, currNewEle._id);\n\n          delete currNewEle._id;\n          oldframe[i] = currNewEle;\n        }\n\n        _frame = oldframe;\n\n        _observableFrame.unobserve();\n\n        _observableFrame = Observable.from(_frame);\n\n        _observableFrame.observe(allChanges => {\n          allChanges.forEach(change => {\n            _observedChangeStack.push({\n              type: change.type,\n              path: change.path,\n              value: change.value,\n              _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n            });\n\n            log(JSON.stringify({\n              type: change.type,\n              path: change.path,\n              value: change.value,\n              _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n            }));\n          });\n        });\n      }\n    };\n\n    if (isSyncing) {\n      return {\n        success: false,\n        message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n      };\n    }\n\n    isSyncing = true;\n\n    if (_isFrameInitialized) {\n      if (_observedChangeStack.length > 0) {\n        log(\"Stack change: \", _observedChangeStack);\n        const res = await tokenPost(POST_TYPES.SYNC_STACK, _extends({\n          stack: _observedChangeStack\n        }, _frameConfiguration));\n\n        if (res.success) {\n          _observedChangeStack.length = 0;\n        }\n      }\n    }\n\n    try {\n      const res = await tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration); // Check if the array recieved from db is the same as frame\n      // If not, update it and send useFrameEffect\n\n      if (res.success === false) {\n        console.error(res.data);\n        isSyncing = false;\n        return {\n          success: false,\n          message: \"\" + res.data\n        };\n      } else {\n        _isFrameInitialized = true;\n\n        _realignFrames(res.data);\n\n        isSyncing = false;\n        return {\n          message: 'Success. Call frame for data',\n          success: true\n        };\n      }\n    } catch (error) {\n      console.error(\"Easybase Error: get failed \", error);\n      isSyncing = false;\n      return {\n        success: false,\n        message: \"Easybase Error: get failed \" + error,\n        errorCode: error.errorCode || undefined\n      };\n    }\n  };\n\n  const updateRecordImage = async options => {\n    const res = await _updateRecordAttachment(options, \"image\");\n    return res;\n  };\n\n  const updateRecordVideo = async options => {\n    const res = await _updateRecordAttachment(options, \"video\");\n    return res;\n  };\n\n  const updateRecordFile = async options => {\n    const res = await _updateRecordAttachment(options, \"file\");\n    return res;\n  };\n\n  const _updateRecordAttachment = async (options, type) => {\n    const _frameRecord = _frame.find(ele => deepEqual(ele, options.record));\n\n    if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n      log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n      return {\n        success: false,\n        message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n      };\n    }\n\n    const ext = options.attachment.name.split(\".\").pop().toLowerCase();\n    log(ext);\n\n    if (type === \"image\" && !imageExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Image files must have a proper image extension in the file name\"\n      };\n    }\n\n    if (type === \"video\" && !videoExtensions.includes(ext)) {\n      return {\n        success: false,\n        message: \"Video files must have a proper video extension in the file name\"\n      };\n    }\n\n    function isFileFromURI(f) {\n      return f.uri !== undefined;\n    }\n\n    const formData = new FormData();\n\n    if (isFileFromURI(options.attachment)) {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    } else {\n      formData.append(\"file\", options.attachment);\n      formData.append(\"name\", options.attachment.name);\n    }\n\n    const customHeaders = {\n      'Eb-upload-type': type,\n      'Eb-column-name': options.columnName,\n      'Eb-record-id': _recordIdMap.get(_frameRecord),\n      'Eb-table-name': options.tableName\n    };\n    const res = await tokenPostAttachment(formData, customHeaders);\n    await sync();\n    return {\n      message: res.data,\n      success: res.success\n    };\n  };\n\n  const c = {\n    /** +++ Will be deprecated */\n    configureFrame,\n    addRecord,\n    deleteRecord,\n    sync,\n    Frame,\n    currentConfiguration,\n\n    /** --- */\n    updateRecordImage,\n    updateRecordVideo,\n    updateRecordFile,\n    fullTableSize,\n    tableTypes,\n    Query,\n    signIn,\n    signOut,\n    signUp,\n    resetUserPassword,\n    setUserAttribute,\n    getUserAttributes,\n    db,\n    dbEventListener,\n    e,\n    forgotPassword,\n    forgotPasswordConfirm,\n    userID\n  };\n  return c;\n}\n\nconst generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\n\nconst isBadInt = my_int => my_int !== undefined && my_int !== null && Math.floor(my_int) !== my_int;\n\nconst isBadString = my_string => my_string !== undefined && my_string !== null && typeof my_string !== \"string\";\n\nconst isBadIntegrationID = my_string => my_string === undefined || my_string === null || typeof my_string !== \"string\";\n\nconst isBadObject = my_obj => my_obj !== undefined && my_obj !== null && typeof my_obj !== \"object\";\n\nconst isBadBool = my_bool => my_bool !== undefined && my_bool !== null && typeof my_bool !== \"boolean\";\n/**\r\n *\r\n * @param {GetOptions} options GetOptions.\r\n * @returns {Promise<Array>} Array of records.\r\n *\r\n */\n\n\nfunction get(options) {\n  const defaultOptions = {\n    integrationID: \"\",\n    offset: undefined,\n    limit: undefined,\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  const {\n    integrationID,\n    offset,\n    limit,\n    authentication,\n    customQuery\n  } = _extends({}, defaultOptions, options);\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadInt(offset)) throw new Error(\"offset must be an integer\");\n  if (isBadInt(limit)) throw new Error(\"limit must be an integer\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise((resolve, reject) => {\n    try {\n      let fetch_body = {};\n      if (typeof customQuery === \"object\") fetch_body = _extends({}, customQuery);\n      if (offset !== undefined) fetch_body.offset = offset;\n      if (limit !== undefined) fetch_body.limit = limit;\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('get', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(resData => {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) {\n          console.error(resData.message);\n          resolve([resData.message]);\n        } else resolve(resData);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {PostOptions} options PostOptions\r\n * @returns {Promise<String>} Post status.\r\n *\r\n */\n\nfunction post(options) {\n  const defaultValues = {\n    integrationID: \"\",\n    newRecord: undefined,\n    authentication: undefined,\n    insertAtEnd: undefined\n  };\n\n  const {\n    integrationID,\n    newRecord,\n    authentication,\n    insertAtEnd\n  } = _extends({}, defaultValues, options);\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadObject(newRecord)) throw new Error(\"newRecord is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadBool(insertAtEnd)) throw new Error(\"insertAtEnd must be a boolean or null\");\n  return new Promise((resolve, reject) => {\n    try {\n      const fetch_body = _extends({}, newRecord);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      if (insertAtEnd !== undefined) fetch_body.insertAtEnd = insertAtEnd;\n      fetch(generateBareUrl('post', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(resData => {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {UpdateOptions} options UpdateOptions\r\n * @returns {Promise<String>} Update status.\r\n */\n\nfunction update(options) {\n  const defaultValues = {\n    integrationID: \"\",\n    updateValues: undefined,\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  const {\n    integrationID,\n    updateValues,\n    authentication,\n    customQuery\n  } = _extends({}, defaultValues, options);\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadObject(updateValues) || updateValues === undefined) throw new Error(\"updateValues is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise((resolve, reject) => {\n    try {\n      const fetch_body = _extends({\n        updateValues\n      }, customQuery);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('update', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(resData => {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData.message);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {DeleteOptions} options DeleteOptions\r\n * @return {Promise<String>} Delete status.\r\n */\n\nfunction Delete(options) {\n  const defaultValues = {\n    integrationID: \"\",\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  const {\n    integrationID,\n    authentication,\n    customQuery\n  } = _extends({}, defaultValues, options);\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise((resolve, reject) => {\n    try {\n      const fetch_body = _extends({}, customQuery);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('delete', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(resData => {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData.message);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n * @async\r\n * Call a cloud function, created in Easybase interface.\r\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\r\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\r\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\r\n */\n\nasync function callFunction(route, postBody) {\n  const res = await fetch(generateBareUrl('function', route.split(\"/\").pop()), {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(postBody) || \"\"\n  });\n  const rawDataText = await res.text();\n  return rawDataText;\n}\n\nexport { Delete, EasybaseProvider, callFunction, get, post, update };\n//# sourceMappingURL=index.modern.js.map\n","import { callFunction as _callFunction } from 'easybasejs';\n\n/**\n * @async\n * Call a cloud function, created in Easybase interface.\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\n */\nexport const callFunction = _callFunction;\n"]},"metadata":{},"sourceType":"module"}