{"ast":null,"code":"import React__default, { useState, useEffect } from 'react';\nvar GA4ReactGlobalIndex = '__ga4React__';\n/**\r\n * @desc class required to manage google analitycs 4\r\n * @class GA4React\r\n *  */\n\nclass GA4React {\n  constructor(gaCode, gaConfig, additionalGaCode, timeout, options) {\n    this.gaCode = gaCode;\n    this.gaConfig = gaConfig;\n    this.additionalGaCode = additionalGaCode;\n    this.timeout = timeout;\n    this.options = options;\n    this.scriptSyncId = 'ga4ReactScriptSync';\n    this.scriptAsyncId = 'ga4ReactScriptAsync';\n    this.nonceAsync = '';\n    this.nonceSync = '';\n    this.gaConfig = gaConfig ? gaConfig : {};\n    this.gaCode = gaCode;\n    this.timeout = timeout || 5000;\n    this.additionalGaCode = additionalGaCode;\n    this.options = options;\n\n    if (this.options) {\n      var {\n        nonce\n      } = this.options;\n      this.nonceAsync = nonce && nonce[0] ? nonce[0] : '';\n      this.nonceSync = nonce && nonce[1] ? nonce[1] : '';\n    }\n  }\n  /**\r\n   * @desc output on resolve initialization\r\n   */\n\n\n  outputOnResolve() {\n    return {\n      pageview: this.pageview,\n      event: this.event,\n      gtag: this.gtag\n    };\n  }\n  /**\r\n   * @desc Return main function for send ga4 events, pageview etc\r\n   * @returns {Promise<GA4ReactResolveInterface>}\r\n   */\n\n\n  initialize() {\n    return new Promise((resolve, reject) => {\n      if (GA4React.isInitialized()) {\n        reject(new Error('GA4React is being initialized'));\n      } // in case of retry logics, remove previous scripts\n\n\n      var previousScriptAsync = document.getElementById(this.scriptAsyncId);\n\n      if (previousScriptAsync) {\n        previousScriptAsync.remove();\n      }\n\n      var head = document.getElementsByTagName('head')[0];\n      var scriptAsync = document.createElement('script');\n      scriptAsync.setAttribute('id', this.scriptAsyncId);\n      scriptAsync.setAttribute('async', '');\n\n      if (this.nonceAsync && typeof this.nonceAsync === 'string' && this.nonceAsync.length > 0) {\n        scriptAsync.setAttribute('nonce', this.nonceAsync);\n      }\n\n      scriptAsync.setAttribute('src', \"https://www.googletagmanager.com/gtag/js?id=\" + this.gaCode);\n\n      scriptAsync.onload = () => {\n        var target = document.getElementById(this.scriptSyncId);\n\n        if (target) {\n          target.remove();\n        } // in case of retry logics, remove previous script sync\n\n\n        var previousScriptSync = document.getElementById(this.scriptSyncId);\n\n        if (previousScriptSync) {\n          previousScriptSync.remove();\n        }\n\n        var scriptSync = document.createElement('script');\n        scriptSync.setAttribute('id', this.scriptSyncId);\n\n        if (this.nonceSync && typeof this.nonceSync === 'string' && this.nonceSync.length > 0) {\n          scriptSync.setAttribute('nonce', this.nonceSync);\n        }\n\n        var scriptHTML = \"window.dataLayer = window.dataLayer || [];\\n        function gtag(){dataLayer.push(arguments);};\\n        gtag('js', new Date());\\n        gtag('config', '\" + this.gaCode + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n\n        if (this.additionalGaCode) {\n          this.additionalGaCode.forEach(code => {\n            scriptHTML += \"\\ngtag('config', '\" + code + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n          });\n        }\n\n        scriptSync.innerHTML = scriptHTML;\n        head.appendChild(scriptSync);\n        var resolved = this.outputOnResolve();\n        Object.assign(window, {\n          [GA4ReactGlobalIndex]: resolved\n        });\n        resolve(resolved);\n      };\n\n      scriptAsync.onerror = event => {\n        if (typeof event === 'string') {\n          reject(\"GA4React intialization failed \" + event);\n        } else {\n          var error = new Error();\n          error.name = 'GA4React intialization failed';\n          error.message = JSON.stringify(event, ['message', 'arguments', 'type', 'name']);\n          reject(error);\n        }\n      };\n\n      var onChangeReadyState = () => {\n        switch (document.readyState) {\n          case 'interactive':\n          case 'complete':\n            if (!GA4React.isInitialized()) {\n              head.appendChild(scriptAsync);\n              document.removeEventListener('readystatechange', onChangeReadyState);\n            }\n\n            break;\n        }\n      };\n\n      if (document.readyState !== 'complete') {\n        document.addEventListener('readystatechange', onChangeReadyState);\n      } else {\n        onChangeReadyState();\n      }\n\n      setTimeout(() => {\n        reject(new Error('GA4React Timeout'));\n      }, this.timeout);\n    });\n  }\n  /**\r\n   * @desc send pageview event to gtag\r\n   * @param path\r\n   */\n\n\n  pageview(path, location, title) {\n    return this.gtag('event', 'page_view', {\n      page_path: path,\n      page_location: location || window.location,\n      page_title: title || document.title\n    });\n  }\n  /**\r\n   * @desc set event and send to gtag\r\n   * @param action\r\n   * @param label\r\n   * @param category\r\n   * @param nonInteraction\r\n   */\n\n\n  event(action, label, category, nonInteraction) {\n    if (nonInteraction === void 0) {\n      nonInteraction = false;\n    }\n\n    return this.gtag('event', action, {\n      event_label: label,\n      event_category: category,\n      non_interaction: nonInteraction\n    });\n  }\n  /**\r\n   * @desc direct access to gtag\r\n   * @param args\r\n   */\n\n\n  gtag() {\n    //@ts-ignore\n    return window.gtag(...arguments);\n  }\n  /**\r\n   * @desc ga is initialized?\r\n   */\n\n\n  static isInitialized() {\n    switch (typeof window[GA4ReactGlobalIndex] !== 'undefined') {\n      case true:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n  /**\r\n   * @desc get ga4react from global\r\n   */\n\n\n  static getGA4React() {\n    if (GA4React.isInitialized()) {\n      return window[GA4ReactGlobalIndex];\n    } else {\n      console.error(new Error('GA4React is not initialized'));\n    }\n  }\n\n}\n\nvar outputGA4 = (children, setComponents, ga4) => {\n  setComponents(React__default.Children.map(children, (child, index) => {\n    if (!React__default.isValidElement(child)) {\n      return React__default.createElement(React__default.Fragment, null, child);\n    } //@ts-ignore\n\n\n    if (child.type && typeof child.type.name !== 'undefined') {\n      return React__default.cloneElement(child, {\n        //@ts-ignore\n        ga4: ga4,\n        index\n      });\n    } else {\n      return child;\n    }\n  }));\n};\n\nvar GA4R = _ref => {\n  var {\n    code,\n    timeout,\n    config,\n    additionalCode,\n    children,\n    options\n  } = _ref;\n  var [components, setComponents] = useState(null);\n  useEffect(() => {\n    if (!GA4React.isInitialized()) {\n      var ga4manager = new GA4React(\"\" + code, config, additionalCode, timeout, options);\n      ga4manager.initialize().then(ga4 => {\n        outputGA4(children, setComponents, ga4);\n      }, err => {\n        console.error(err);\n      });\n    } else {\n      var ga4 = GA4React.getGA4React();\n\n      if (ga4) {\n        outputGA4(children, setComponents, ga4);\n      }\n    }\n  }, []);\n  return React__default.createElement(React__default.Fragment, null, components);\n};\n\nvar useGA4React = (gaCode, gaConfig, gaAdditionalCode, gaTimeout, options) => {\n  var [ga4, setGA4] = useState(undefined);\n  useEffect(() => {\n    if (gaCode) {\n      switch (GA4React.isInitialized()) {\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            setGA4(ga4);\n          }, err => {\n            console.error(err);\n          });\n          break;\n\n        case true:\n          setGA4(GA4React.getGA4React());\n          break;\n      }\n    } else {\n      setGA4(GA4React.getGA4React());\n    }\n  }, [gaCode]);\n  return ga4;\n};\n\nfunction withTracker(MyComponent) {\n  return props => {\n    var {\n      path,\n      location,\n      title,\n      gaCode,\n      gaTimeout,\n      gaConfig,\n      gaAdditionalCode,\n      options\n    } = props;\n    useEffect(() => {\n      switch (GA4React.isInitialized()) {\n        case true:\n          var ga4 = GA4React.getGA4React();\n\n          if (ga4) {\n            ga4.pageview(path, location, title);\n          }\n\n          break;\n\n        default:\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            ga4.pageview(path, location, title);\n          }, err => {\n            console.error(err);\n          });\n          break;\n      }\n    });\n    return React__default.createElement(MyComponent, Object.assign({}, props));\n  };\n}\n\nexport default GA4React;\nexport { GA4R, GA4React, useGA4React, withTracker };","map":{"version":3,"sources":["../node_modules/ga-4-react/dist/ga-4-react.esm.js"],"names":["React"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nvar GA4ReactGlobalIndex = '__ga4React__';\n/**\r\n * @desc class required to manage google analitycs 4\r\n * @class GA4React\r\n *  */\n\nclass GA4React {\n  constructor(gaCode, gaConfig, additionalGaCode, timeout, options) {\n    this.gaCode = gaCode;\n    this.gaConfig = gaConfig;\n    this.additionalGaCode = additionalGaCode;\n    this.timeout = timeout;\n    this.options = options;\n    this.scriptSyncId = 'ga4ReactScriptSync';\n    this.scriptAsyncId = 'ga4ReactScriptAsync';\n    this.nonceAsync = '';\n    this.nonceSync = '';\n    this.gaConfig = gaConfig ? gaConfig : {};\n    this.gaCode = gaCode;\n    this.timeout = timeout || 5000;\n    this.additionalGaCode = additionalGaCode;\n    this.options = options;\n\n    if (this.options) {\n      var {\n        nonce\n      } = this.options;\n      this.nonceAsync = nonce && nonce[0] ? nonce[0] : '';\n      this.nonceSync = nonce && nonce[1] ? nonce[1] : '';\n    }\n  }\n  /**\r\n   * @desc output on resolve initialization\r\n   */\n\n\n  outputOnResolve() {\n    return {\n      pageview: this.pageview,\n      event: this.event,\n      gtag: this.gtag\n    };\n  }\n  /**\r\n   * @desc Return main function for send ga4 events, pageview etc\r\n   * @returns {Promise<GA4ReactResolveInterface>}\r\n   */\n\n\n  initialize() {\n    return new Promise((resolve, reject) => {\n      if (GA4React.isInitialized()) {\n        reject(new Error('GA4React is being initialized'));\n      } // in case of retry logics, remove previous scripts\n\n\n      var previousScriptAsync = document.getElementById(this.scriptAsyncId);\n\n      if (previousScriptAsync) {\n        previousScriptAsync.remove();\n      }\n\n      var head = document.getElementsByTagName('head')[0];\n      var scriptAsync = document.createElement('script');\n      scriptAsync.setAttribute('id', this.scriptAsyncId);\n      scriptAsync.setAttribute('async', '');\n\n      if (this.nonceAsync && typeof this.nonceAsync === 'string' && this.nonceAsync.length > 0) {\n        scriptAsync.setAttribute('nonce', this.nonceAsync);\n      }\n\n      scriptAsync.setAttribute('src', \"https://www.googletagmanager.com/gtag/js?id=\" + this.gaCode);\n\n      scriptAsync.onload = () => {\n        var target = document.getElementById(this.scriptSyncId);\n\n        if (target) {\n          target.remove();\n        } // in case of retry logics, remove previous script sync\n\n\n        var previousScriptSync = document.getElementById(this.scriptSyncId);\n\n        if (previousScriptSync) {\n          previousScriptSync.remove();\n        }\n\n        var scriptSync = document.createElement('script');\n        scriptSync.setAttribute('id', this.scriptSyncId);\n\n        if (this.nonceSync && typeof this.nonceSync === 'string' && this.nonceSync.length > 0) {\n          scriptSync.setAttribute('nonce', this.nonceSync);\n        }\n\n        var scriptHTML = \"window.dataLayer = window.dataLayer || [];\\n        function gtag(){dataLayer.push(arguments);};\\n        gtag('js', new Date());\\n        gtag('config', '\" + this.gaCode + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n\n        if (this.additionalGaCode) {\n          this.additionalGaCode.forEach(code => {\n            scriptHTML += \"\\ngtag('config', '\" + code + \"', \" + JSON.stringify(this.gaConfig) + \");\";\n          });\n        }\n\n        scriptSync.innerHTML = scriptHTML;\n        head.appendChild(scriptSync);\n        var resolved = this.outputOnResolve();\n        Object.assign(window, {\n          [GA4ReactGlobalIndex]: resolved\n        });\n        resolve(resolved);\n      };\n\n      scriptAsync.onerror = event => {\n        if (typeof event === 'string') {\n          reject(\"GA4React intialization failed \" + event);\n        } else {\n          var error = new Error();\n          error.name = 'GA4React intialization failed';\n          error.message = JSON.stringify(event, ['message', 'arguments', 'type', 'name']);\n          reject(error);\n        }\n      };\n\n      var onChangeReadyState = () => {\n        switch (document.readyState) {\n          case 'interactive':\n          case 'complete':\n            if (!GA4React.isInitialized()) {\n              head.appendChild(scriptAsync);\n              document.removeEventListener('readystatechange', onChangeReadyState);\n            }\n\n            break;\n        }\n      };\n\n      if (document.readyState !== 'complete') {\n        document.addEventListener('readystatechange', onChangeReadyState);\n      } else {\n        onChangeReadyState();\n      }\n\n      setTimeout(() => {\n        reject(new Error('GA4React Timeout'));\n      }, this.timeout);\n    });\n  }\n  /**\r\n   * @desc send pageview event to gtag\r\n   * @param path\r\n   */\n\n\n  pageview(path, location, title) {\n    return this.gtag('event', 'page_view', {\n      page_path: path,\n      page_location: location || window.location,\n      page_title: title || document.title\n    });\n  }\n  /**\r\n   * @desc set event and send to gtag\r\n   * @param action\r\n   * @param label\r\n   * @param category\r\n   * @param nonInteraction\r\n   */\n\n\n  event(action, label, category, nonInteraction) {\n    if (nonInteraction === void 0) {\n      nonInteraction = false;\n    }\n\n    return this.gtag('event', action, {\n      event_label: label,\n      event_category: category,\n      non_interaction: nonInteraction\n    });\n  }\n  /**\r\n   * @desc direct access to gtag\r\n   * @param args\r\n   */\n\n\n  gtag() {\n    //@ts-ignore\n    return window.gtag(...arguments);\n  }\n  /**\r\n   * @desc ga is initialized?\r\n   */\n\n\n  static isInitialized() {\n    switch (typeof window[GA4ReactGlobalIndex] !== 'undefined') {\n      case true:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n  /**\r\n   * @desc get ga4react from global\r\n   */\n\n\n  static getGA4React() {\n    if (GA4React.isInitialized()) {\n      return window[GA4ReactGlobalIndex];\n    } else {\n      console.error(new Error('GA4React is not initialized'));\n    }\n  }\n\n}\n\nvar outputGA4 = (children, setComponents, ga4) => {\n  setComponents(React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return React.createElement(React.Fragment, null, child);\n    } //@ts-ignore\n\n\n    if (child.type && typeof child.type.name !== 'undefined') {\n      return React.cloneElement(child, {\n        //@ts-ignore\n        ga4: ga4,\n        index\n      });\n    } else {\n      return child;\n    }\n  }));\n};\n\nvar GA4R = (_ref) => {\n  var {\n    code,\n    timeout,\n    config,\n    additionalCode,\n    children,\n    options\n  } = _ref;\n  var [components, setComponents] = useState(null);\n  useEffect(() => {\n    if (!GA4React.isInitialized()) {\n      var ga4manager = new GA4React(\"\" + code, config, additionalCode, timeout, options);\n      ga4manager.initialize().then(ga4 => {\n        outputGA4(children, setComponents, ga4);\n      }, err => {\n        console.error(err);\n      });\n    } else {\n      var ga4 = GA4React.getGA4React();\n\n      if (ga4) {\n        outputGA4(children, setComponents, ga4);\n      }\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, components);\n};\n\nvar useGA4React = (gaCode, gaConfig, gaAdditionalCode, gaTimeout, options) => {\n  var [ga4, setGA4] = useState(undefined);\n  useEffect(() => {\n    if (gaCode) {\n      switch (GA4React.isInitialized()) {\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            setGA4(ga4);\n          }, err => {\n            console.error(err);\n          });\n          break;\n\n        case true:\n          setGA4(GA4React.getGA4React());\n          break;\n      }\n    } else {\n      setGA4(GA4React.getGA4React());\n    }\n  }, [gaCode]);\n  return ga4;\n};\n\nfunction withTracker(MyComponent) {\n  return props => {\n    var {\n      path,\n      location,\n      title,\n      gaCode,\n      gaTimeout,\n      gaConfig,\n      gaAdditionalCode,\n      options\n    } = props;\n    useEffect(() => {\n      switch (GA4React.isInitialized()) {\n        case true:\n          var ga4 = GA4React.getGA4React();\n\n          if (ga4) {\n            ga4.pageview(path, location, title);\n          }\n\n          break;\n\n        default:\n        case false:\n          var ga4react = new GA4React(\"\" + gaCode, gaConfig, gaAdditionalCode, gaTimeout, options);\n          ga4react.initialize().then(ga4 => {\n            ga4.pageview(path, location, title);\n          }, err => {\n            console.error(err);\n          });\n          break;\n      }\n    });\n    return React.createElement(MyComponent, Object.assign({}, props));\n  };\n}\n\nexport default GA4React;\nexport { GA4R, GA4React, useGA4React, withTracker };\n//# sourceMappingURL=ga-4-react.esm.js.map\n"]},"metadata":{},"sourceType":"module"}